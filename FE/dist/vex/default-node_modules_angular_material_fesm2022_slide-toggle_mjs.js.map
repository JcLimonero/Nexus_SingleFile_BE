{"version":3,"file":"default-node_modules_angular_material_fesm2022_slide-toggle_mjs.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/slide-toggle.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/material/core';\nimport { MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false, hideIcon: false }),\n});\n\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true,\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source slide toggle of the event. */\n    source, \n    /** The new `checked` value of the slide toggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\nclass MatSlideToggle {\n    _createChangeEvent(isChecked) {\n        return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n        return `${this.id || this._uniqueId}-button`;\n    }\n    /** Focuses the slide-toggle. */\n    focus() {\n        this._switchElement.nativeElement.focus();\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** Whether the slide toggle is disabled. */\n        this.disabled = false;\n        /** Whether the slide toggle has a ripple. */\n        this.disableRipple = false;\n        /** Tabindex of slide toggle. */\n        this.tabIndex = 0;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.color = defaults.color || 'accent';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        this.id = this._uniqueId = `mat-mdc-slide-toggle-${++nextUniqueId}`;\n        this.hideIcon = defaults.hideIcon ?? false;\n        this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._focused = true;\n                this._changeDetectorRef.markForCheck();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._focused = false;\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n        this.toggleChange.emit();\n        if (!this.defaults.disableToggleValue) {\n            this.checked = !this.checked;\n            this._onChange(this.checked);\n            this.change.emit(new MatSlideToggleChange(this, this.checked));\n        }\n    }\n    _getAriaLabelledBy() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Even though we have a `label` element with a `for` pointing to the button, we need the\n        // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n        return this.ariaLabel ? null : this._labelId;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggle, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }, { token: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.4\", type: MatSlideToggle, selector: \"mat-slide-toggle\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], color: \"color\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: [\"required\", \"required\", booleanAttribute], checked: [\"checked\", \"checked\", booleanAttribute], hideIcon: [\"hideIcon\", \"hideIcon\", booleanAttribute] }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.name\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-mdc-slide-toggle-focused\": \"_focused\", \"class.mat-mdc-slide-toggle-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" }, classAttribute: \"mat-mdc-slide-toggle\" }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_switchElement\", first: true, predicate: [\"switch\"], descendants: true }], exportAs: [\"matSlideToggle\"], ngImport: i0, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        @if (!hideIcon) {\\n          <div class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mdc-switch{width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch:disabled .mdc-switch__handle::after{opacity:var(--mdc-switch-disabled-handle-opacity)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle .mdc-label{font-family:var(--mat-slide-toggle-label-text-font);font-size:var(--mat-slide-toggle-label-text-size);letter-spacing:var(--mat-slide-toggle-label-text-tracking);line-height:var(--mat-slide-toggle-label-text-line-height);font-weight:var(--mat-slide-toggle-label-text-weight)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'], host: {\n                        'class': 'mat-mdc-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.name]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n                        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                    }, exportAs: 'matSlideToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        @if (!hideIcon) {\\n          <div class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mdc-switch{width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch:disabled .mdc-switch__handle::after{opacity:var(--mdc-switch-disabled-handle-opacity)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle .mdc-label{font-family:var(--mat-slide-toggle-label-text-font);font-size:var(--mat-slide-toggle-label-text-size);letter-spacing:var(--mat-slide-toggle-label-text-tracking);line-height:var(--mat-slide-toggle-label-text-line-height);font-weight:var(--mat-slide-toggle-label-text-weight)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _switchElement: [{\n                type: ViewChild,\n                args: ['switch']\n            }], name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], color: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? 0 : numberAttribute(value)) }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideIcon: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }] } });\n\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggleRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatSlideToggleRequiredValidator, selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\", providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggleRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                    providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatSlideToggleRequiredValidator],\n                    declarations: [MatSlideToggleRequiredValidator],\n                }]\n        }] });\nclass MatSlideToggleModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggleModule, declarations: [MatSlideToggle], imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule], exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggleModule, imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule, _MatSlideToggleRequiredValidatorModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule],\n                    exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule],\n                    declarations: [MatSlideToggle],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n"],"names":["i0","InjectionToken","forwardRef","EventEmitter","booleanAttribute","numberAttribute","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","Inject","Optional","ViewChild","Input","Output","Directive","NgModule","NG_VALUE_ACCESSOR","NG_VALIDATORS","CheckboxRequiredValidator","ANIMATION_MODULE_TYPE","i1","i2","MatCommonModule","MatRippleModule","_c0","MatSlideToggle_Conditional_10_Template","rf","ctx","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","_c1","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","hideIcon","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","constructor","source","checked","nextUniqueId","_createChangeEvent","isChecked","buttonId","id","_uniqueId","focus","_switchElement","nativeElement","_checked","value","_changeDetectorRef","markForCheck","inputId","_elementRef","_focusMonitor","tabIndex","defaults","animationMode","_onChange","_","_onTouched","name","labelPosition","ariaLabel","ariaLabelledby","disabled","disableRipple","change","toggleChange","parseInt","color","_noopAnimations","_labelId","ngAfterContentInit","monitor","subscribe","focusOrigin","_focused","Promise","resolve","then","ngOnDestroy","stopMonitoring","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","toggle","_emitChangeEvent","emit","_handleClick","_getAriaLabelledBy","ɵfac","MatSlideToggle_Factory","t","ɵɵdirectiveInject","ElementRef","FocusMonitor","ChangeDetectorRef","ɵɵinjectAttribute","_2","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatSlideToggle_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatSlideToggle_HostBindings","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","inputs","ariaDescribedby","required","outputs","exportAs","features","ɵɵProvidersFeature","ɵɵInputTransformsFeature","ngContentSelectors","decls","vars","consts","template","MatSlideToggle_Template","ɵɵprojectionDef","ɵɵlistener","MatSlideToggle_Template_button_click_1_listener","ɵɵtemplate","MatSlideToggle_Template_label_click_11_listener","$event","stopPropagation","ɵɵprojection","_r0","ɵɵreference","ɵɵadvance","ɵɵproperty","ɵɵconditional","dependencies","MatRipple","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","providers","undefined","decorators","transform","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","ɵMatSlideToggleRequiredValidator_BaseFactory","MatSlideToggleRequiredValidator_Factory","ɵɵgetInheritedFactory","ɵdir","ɵɵdefineDirective","ɵɵInheritDefinitionFeature","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","exports","declarations","MatSlideToggleModule","MatSlideToggleModule_Factory","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}