{"version":3,"file":"src_app_pages_configuracion_catalogos_tipos-operacion_tipos-operacion_component_ts.js","mappings":"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","sources":["./src/app/pages/configuracion/catalogos/tipos-operacion/tipo-operacion-edit-dialog/tipo-operacion-edit-dialog.component.ts","./src/app/pages/configuracion/catalogos/tipos-operacion/tipo-operacion-edit-dialog/tipo-operacion-edit-dialog.component.html","./src/app/pages/configuracion/catalogos/tipos-operacion/tipos-operacion.component.ts","./src/app/pages/configuracion/catalogos/tipos-operacion/tipos-operacion.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TipoOperacion, TipoOperacionCreateRequest, TipoOperacionUpdateRequest } from '../../../../../core/interfaces/tipo-operacion.interface';\nimport { TipoOperacionService } from '../../../../../core/services/tipo-operacion.service';\n\n@Component({\n  selector: 'app-tipo-operacion-edit-dialog',\n  templateUrl: './tipo-operacion-edit-dialog.component.html',\n  styleUrls: ['./tipo-operacion-edit-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule\n  ]\n})\nexport class TipoOperacionEditDialogComponent implements OnInit {\n  tipoOperacionForm!: FormGroup;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private tipoOperacionService: TipoOperacionService,\n    private dialogRef: MatDialogRef<TipoOperacionEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { tipoOperacion: TipoOperacion; mode: 'create' | 'edit' },\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.populateForm();\n  }\n\n  private initializeForm(): void {\n    this.tipoOperacionForm = this.fb.group({\n      Name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(600)]],\n      Enabled: ['1', Validators.required]\n    });\n  }\n\n  private populateForm(): void {\n    if (this.data.tipoOperacion) {\n      this.tipoOperacionForm.patchValue({\n        Name: this.data.tipoOperacion.Name,\n        Enabled: this.data.tipoOperacion.Enabled\n      });\n    }\n  }\n\n  onSubmit(): void {\n    if (this.tipoOperacionForm.valid) {\n      this.loading = true;\n\n      if (this.data.mode === 'create') {\n        this.createTipoOperacion();\n      } else {\n        this.updateTipoOperacion();\n      }\n    }\n  }\n\n  private createTipoOperacion(): void {\n    const tipoOperacionData: TipoOperacionCreateRequest = {\n      Name: this.tipoOperacionForm.value.Name,\n      Enabled: this.tipoOperacionForm.value.Enabled\n    };\n\n    this.tipoOperacionService.createTipoOperacion(tipoOperacionData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Tipo de operación creado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al crear tipo de operación', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al crear tipo de operación', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  private updateTipoOperacion(): void {\n    const tipoOperacionData: TipoOperacionUpdateRequest = {\n      Id: this.data.tipoOperacion.Id!,\n      Name: this.tipoOperacionForm.value.Name,\n      Enabled: this.tipoOperacionForm.value.Enabled\n    };\n\n    this.tipoOperacionService.updateTipoOperacion(this.data.tipoOperacion.Id!, tipoOperacionData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Tipo de operación actualizado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al actualizar tipo de operación', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al actualizar tipo de operación', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"p-0\">\n  <!-- Header del diálogo -->\n  <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\n    <h2 class=\"text-xl font-semibold text-gray-900\">\n      {{ data.mode === 'edit' ? 'Editar Tipo de Operación' : 'Nuevo Tipo de Operación' }}\n    </h2>\n    <button mat-icon-button (click)=\"onCancel()\" matTooltip=\"Cerrar\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Formulario -->\n  <form [formGroup]=\"tipoOperacionForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-4 p-6\">\n    <!-- Nombre -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Nombre del Tipo de Operación</mat-label>\n      <input \n        matInput \n        formControlName=\"Name\" \n        placeholder=\"Ej: CONTADO, FINANCIAMIENTO\"\n        maxlength=\"600\">\n      <mat-hint>Nombre completo del tipo de operación (máximo 600 caracteres)</mat-hint>\n      <mat-error *ngIf=\"tipoOperacionForm.get('Name')?.hasError('required')\">\n        El nombre es requerido\n      </mat-error>\n      <mat-error *ngIf=\"tipoOperacionForm.get('Name')?.hasError('minlength')\">\n        El nombre debe tener al menos 3 caracteres\n      </mat-error>\n      <mat-error *ngIf=\"tipoOperacionForm.get('Name')?.hasError('maxlength')\">\n        El nombre no puede exceder 600 caracteres\n      </mat-error>\n    </mat-form-field>\n\n    <!-- Estado -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Estado</mat-label>\n      <mat-select formControlName=\"Enabled\">\n        <mat-option value=\"1\">Activo</mat-option>\n        <mat-option value=\"0\">Inactivo</mat-option>\n      </mat-select>\n      <mat-hint>Estado actual del tipo de operación</mat-hint>\n    </mat-form-field>\n\n    <!-- Información adicional (solo lectura en modo edición) -->\n    <div *ngIf=\"data.mode === 'edit'\" class=\"bg-gray-50 p-4 rounded-lg\">\n      <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Información del Sistema</h3>\n      <div class=\"grid grid-cols-2 gap-4 text-sm\">\n        <div>\n          <span class=\"text-gray-500\">ID:</span>\n          <span class=\"ml-2 font-mono\">{{ data.tipoOperacion.Id }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Último Usuario:</span>\n          <span class=\"ml-2\">{{ data.tipoOperacion.LastUserUpdateName || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Fecha Registro:</span>\n          <span class=\"ml-2\">{{ data.tipoOperacion.RegistrationDate || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Última Actualización:</span>\n          <span class=\"ml-2\">{{ data.tipoOperacion.UpdateDate || 'N/A' }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"flex justify-end space-x-3 pt-4 border-t\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancel()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"primary\"\n        [disabled]=\"tipoOperacionForm.invalid || loading\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\">{{ data.mode === 'edit' ? 'save' : 'add' }}</mat-icon>\n        {{ data.mode === 'edit' ? 'Guardar Cambios' : 'Crear Tipo de Operación' }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TipoOperacion, TipoOperacionResponse } from '../../../../core/interfaces/tipo-operacion.interface';\nimport { TipoOperacionService } from '../../../../core/services/tipo-operacion.service';\nimport { TipoOperacionEditDialogComponent } from './tipo-operacion-edit-dialog/tipo-operacion-edit-dialog.component';\n\n@Component({\n  selector: 'app-tipos-operacion',\n  templateUrl: './tipos-operacion.component.html',\n  styleUrls: ['./tipos-operacion.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule\n  ]\n})\nexport class TiposOperacionComponent implements OnInit, AfterViewInit {\n  tiposOperacion: TipoOperacion[] = [];\n  dataSource = new MatTableDataSource<TipoOperacion>([]);\n  displayedColumns: string[] = ['Id', 'Name', 'Enabled', 'acciones'];\n  loading = false;\n  searchTerm = '';\n  statusFilter = '';\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private tipoOperacionService: TipoOperacionService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.loadTiposOperacion();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // Configurar filtro personalizado\n    this.dataSource.filterPredicate = (data: TipoOperacion, filter: string) => {\n      const searchTerm = filter.toLowerCase();\n      return data.Name.toLowerCase().includes(searchTerm);\n    };\n  }\n\n  loadTiposOperacion(): void {\n    this.loading = true;\n    this.tipoOperacionService.getTiposOperacion().subscribe({\n      next: (response: TipoOperacionResponse) => {\n        if (response.success) {\n          this.tiposOperacion = response.data.operationTypes;\n          this.dataSource.data = this.tiposOperacion;\n          this.applyFilter();\n        } else {\n          this.snackBar.open(response.message || 'Error al cargar tipos de operación', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al cargar tipos de operación', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  applyFilter(): void {\n    const filterValue = this.searchTerm.trim();\n    \n    // Aplicar filtro de estado si existe\n    if (this.statusFilter !== '') {\n      const status = this.statusFilter === 'true' ? '1' : '0';\n      this.dataSource.data = this.tiposOperacion.filter(tipoOperacion => \n        tipoOperacion.Enabled === status &&\n        (filterValue === '' || \n         tipoOperacion.Name.toLowerCase().includes(filterValue.toLowerCase()))\n      );\n    } else {\n      this.dataSource.data = this.tiposOperacion;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n    \n    // Reset paginator to first page\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  refreshData(): void {\n    this.loadTiposOperacion();\n  }\n\n  clearFilters(): void {\n    this.searchTerm = '';\n    this.statusFilter = '';\n    this.applyFilter();\n    \n    this.snackBar.open('Filtros limpiados', 'Info', {\n      duration: 2000\n    });\n  }\n\n  openCreateDialog(): void {\n    const dialogData = {\n      tipoOperacion: {} as TipoOperacion,\n      mode: 'create'\n    };\n\n    const dialogRef = this.dialog.open(TipoOperacionEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  openEditDialog(tipoOperacion: TipoOperacion): void {\n    const dialogData = {\n      tipoOperacion: tipoOperacion,\n      mode: 'edit'\n    };\n\n    const dialogRef = this.dialog.open(TipoOperacionEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  deleteTipoOperacion(tipoOperacion: TipoOperacion): void {\n    if (confirm(`¿Estás seguro de que quieres eliminar el tipo de operación \"${tipoOperacion.Name}\"?`)) {\n      this.tipoOperacionService.deleteTipoOperacion(tipoOperacion.Id!).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.tiposOperacion = this.tiposOperacion.filter(t => t.Id !== tipoOperacion.Id);\n            this.applyFilter();\n            this.snackBar.open('Tipo de operación eliminado exitosamente', 'Éxito', {\n              duration: 2000\n            });\n          } else {\n            this.snackBar.open(response.message || 'Error al eliminar tipo de operación', 'Error', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          this.snackBar.open('Error al eliminar tipo de operación', 'Error', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n  getPageRange(): string {\n    if (!this.paginator || this.dataSource.filteredData.length === 0) {\n      return '0-0';\n    }\n    \n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize + 1;\n    const endIndex = Math.min(startIndex + this.paginator.pageSize - 1, this.dataSource.filteredData.length);\n    \n    return `${startIndex}-${endIndex}`;\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-4\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900\">Gestión de Tipos de Operación</h1>\n      <p class=\"text-gray-600 mt-1\">Administra los tipos de operación del sistema</p>\n    </div>\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"openCreateDialog()\"\n      class=\"flex items-center gap-2\">\n      <mat-icon>add_circle</mat-icon>\n      Nuevo Tipo de Operación\n    </button>\n  </div>\n\n  <!-- Filtros -->\n  <div class=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      \n      <!-- Espacio vacío a la izquierda -->\n      <div></div>\n      \n      <!-- Botones de acción a la derecha -->\n      <div class=\"flex items-center gap-3\">\n        <!-- Botón de Limpiar Filtros -->\n        <button \n          mat-stroked-button \n          color=\"warn\" \n          (click)=\"clearFilters()\"\n          [disabled]=\"!searchTerm && !statusFilter\"\n          matTooltip=\"Limpiar filtros\"\n          class=\"flex items-center gap-2\">\n          <mat-icon>clear_all</mat-icon>\n          Limpiar Filtros\n        </button>\n        \n        <!-- Botón de Reload en filtros -->\n        <button \n          mat-stroked-button \n          color=\"accent\" \n          (click)=\"refreshData()\"\n          [disabled]=\"loading\"\n          matTooltip=\"Recargar datos\"\n          class=\"flex items-center gap-2\">\n          <mat-icon [class.animate-spin]=\"loading\">refresh</mat-icon>\n          Recargar\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <!-- Búsqueda por texto -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Buscar tipos de operación</mat-label>\n        <input \n          matInput \n          [(ngModel)]=\"searchTerm\" \n          (ngModelChange)=\"applyFilter()\"\n          placeholder=\"Buscar por nombre...\"\n          maxlength=\"100\">\n        <mat-icon matSuffix>🔍</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por estado -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Estado</mat-label>\n        <mat-select [(ngModel)]=\"statusFilter\" (ngModelChange)=\"applyFilter()\">\n          <mat-option value=\"\">Todos</mat-option>\n          <mat-option value=\"1\">Activos</mat-option>\n          <mat-option value=\"0\">Inactivos</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <!-- Tabla -->\n  <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\" style=\"line-height: 1;\">\n      <!-- Columna ID -->\n      <ng-container matColumnDef=\"Id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-16 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          ID\n        </th>\n        <td mat-cell *matCellDef=\"let tipoOperacion\" class=\"text-xs font-mono text-gray-600 py-0\">\n          {{ tipoOperacion.Id }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Nombre -->\n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Nombre\n        </th>\n        <td mat-cell *matCellDef=\"let tipoOperacion\" class=\"text-xs py-0\">\n          {{ tipoOperacion.Name }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Estado -->\n      <ng-container matColumnDef=\"Enabled\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-24 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Estado\n        </th>\n        <td mat-cell *matCellDef=\"let tipoOperacion\" class=\"text-center\">\n          <span class=\"px-1.5 py-0.5 rounded-full text-xs font-medium\"\n                [ngClass]=\"tipoOperacion.Enabled === '1' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\">\n            {{ tipoOperacion.Enabled === '1' ? 'Activo' : 'Inactivo' }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Columna Acciones -->\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef class=\"w-28 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Acciones\n        </th>\n        <td mat-cell *matCellDef=\"let tipoOperacion\" class=\"text-center py-0\">\n          <div class=\"flex gap-0.5 justify-center items-center\">\n            <button\n              (click)=\"openEditDialog(tipoOperacion)\"\n              mat-icon-button\n              color=\"primary\"\n              matTooltip=\"Editar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">edit</mat-icon>\n            </button>\n            <button\n              (click)=\"deleteTipoOperacion(tipoOperacion)\"\n              mat-icon-button\n              color=\"warn\"\n              matTooltip=\"Eliminar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">delete</mat-icon>\n            </button>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"!min-h-0 !h-8\"></tr>\n    </table>\n\n    <!-- Paginación -->\n    <mat-paginator \n      [pageSizeOptions]=\"[10, 25, 50, 100]\"\n      [pageSize]=\"10\"\n      [length]=\"dataSource.filteredData.length\"\n      showFirstLastButtons\n      class=\"border-t\">\n    </mat-paginator>\n  </div>\n\n  <!-- Contador de resultados -->\n  <div class=\"mt-4 text-sm text-gray-600 text-center\">\n    Mostrando {{ getPageRange() }} de {{ dataSource.filteredData.length }} tipos de operación visibles ({{ tiposOperacion.length }} total)\n  </div>\n</div>\n"],"names":["CommonModule","ReactiveFormsModule","Validators","MAT_DIALOG_DATA","MatDialogModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatProgressSpinnerModule","MatTooltipModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","data","tipoOperacion","Id","LastUserUpdateName","RegistrationDate","UpdateDate","ɵɵelement","ctx_r5","mode","TipoOperacionEditDialogComponent","constructor","fb","tipoOperacionService","dialogRef","snackBar","loading","ngOnInit","initializeForm","populateForm","tipoOperacionForm","group","Name","required","minLength","maxLength","Enabled","patchValue","onSubmit","valid","createTipoOperacion","updateTipoOperacion","tipoOperacionData","value","subscribe","next","response","success","open","duration","close","message","error","onCancel","_","ɵɵdirectiveInject","i1","FormBuilder","i2","TipoOperacionService","i3","MatDialogRef","i4","MatSnackBar","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TipoOperacionEditDialogComponent_Template","rf","ctx","ɵɵlistener","TipoOperacionEditDialogComponent_Template_button_click_4_listener","TipoOperacionEditDialogComponent_Template_form_ngSubmit_7_listener","ɵɵtemplate","TipoOperacionEditDialogComponent_mat_error_14_Template","TipoOperacionEditDialogComponent_mat_error_15_Template","TipoOperacionEditDialogComponent_mat_error_16_Template","TipoOperacionEditDialogComponent_div_27_Template","TipoOperacionEditDialogComponent_Template_button_click_29_listener","TipoOperacionEditDialogComponent_mat_spinner_32_Template","TipoOperacionEditDialogComponent_mat_icon_33_Template","ɵɵtextInterpolate1","ɵɵproperty","tmp_2_0","get","hasError","tmp_3_0","tmp_4_0","invalid","i5","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","i6","MatButton","MatIconButton","i7","MatIcon","i8","MatFormField","MatLabel","MatHint","MatError","i9","MatInput","i10","MatSelect","i11","MatOption","i12","MatProgressSpinner","i13","MatTooltip","styles","FormsModule","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","tipoOperacion_r10","tipoOperacion_r11","tipoOperacion_r12","TiposOperacionComponent_td_53_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r15","tipoOperacion_r13","$implicit","ctx_r14","ɵɵnextContext","ɵɵresetView","openEditDialog","TiposOperacionComponent_td_53_Template_button_click_5_listener","ctx_r16","deleteTipoOperacion","TiposOperacionComponent","dialog","tiposOperacion","dataSource","displayedColumns","searchTerm","statusFilter","loadTiposOperacion","ngAfterViewInit","paginator","sort","filterPredicate","filter","toLowerCase","includes","getTiposOperacion","operationTypes","applyFilter","filterValue","trim","status","firstPage","refreshData","clearFilters","openCreateDialog","dialogData","width","disableClose","afterClosed","result","confirm","t","getPageRange","filteredData","length","startIndex","pageIndex","pageSize","endIndex","Math","min","MatDialog","viewQuery","TiposOperacionComponent_Query","TiposOperacionComponent_Template_button_click_7_listener","TiposOperacionComponent_Template_button_click_15_listener","TiposOperacionComponent_Template_button_click_19_listener","TiposOperacionComponent_Template_input_ngModelChange_27_listener","$event","TiposOperacionComponent_Template_mat_select_ngModelChange_33_listener","ɵɵelementContainerStart","TiposOperacionComponent_th_43_Template","TiposOperacionComponent_td_44_Template","ɵɵelementContainerEnd","TiposOperacionComponent_th_46_Template","TiposOperacionComponent_td_47_Template","TiposOperacionComponent_th_49_Template","TiposOperacionComponent_td_50_Template","TiposOperacionComponent_th_52_Template","TiposOperacionComponent_td_53_Template","TiposOperacionComponent_tr_54_Template","TiposOperacionComponent_tr_55_Template","ɵɵclassProp","ɵɵpureFunction0","_c0","ɵɵtextInterpolate3","NgClass","NgModel","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","MatSuffix","i14","i15"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}