{"version":3,"file":"src_app_pages_configuracion_logs-activity_logs-activity_component_ts.js","mappings":"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","sources":["./src/app/core/services/export.service.ts","./src/app/pages/configuracion/logs-activity/logs-activity.component.ts","./src/app/pages/configuracion/logs-activity/logs-activity.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivityLog } from './activity-log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n\n  constructor() { }\n\n  /**\n   * Exportar logs de actividad a Excel\n   */\n  exportActivityLogsToExcel(logs: ActivityLog[], filters: any = {}): void {\n    try {\n      // Crear el contenido del Excel\n      const excelContent = this.generateExcelContent(logs, filters);\n      \n      // Crear y descargar el archivo\n      this.downloadExcelFile(excelContent, 'logs_actividad');\n      \n    } catch (error) {\n      console.error('Error al exportar logs:', error);\n      throw new Error('Error al generar el archivo Excel');\n    }\n  }\n\n  /**\n   * Generar contenido del Excel\n   */\n  private generateExcelContent(logs: ActivityLog[], filters: any): string {\n    // Crear encabezados\n    const headers = [\n      'ID',\n      'Usuario',\n      'Nombre de Usuario', \n      'Acción',\n      'Descripción',\n      'Detalles del Cambio',\n      'Fecha de Creación',\n      'Fecha de Actualización'\n    ];\n\n    // Crear filas de datos\n    const rows = logs.map(log => [\n      log.id || '',\n      log.user_id || '',\n      log.username || '',\n      log.action || '',\n      log.description || '',\n      log.change_details || '',\n      this.formatDateForExcel(log.created_at),\n      this.formatDateForExcel(log.updated_at)\n    ]);\n\n    // Crear información de filtros aplicados\n    const filterInfo = this.generateFilterInfo(filters);\n\n    // Generar contenido HTML para Excel\n    const htmlContent = `\n      <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\">\n        <head>\n          <meta charset=\"UTF-8\">\n          <title>Logs de Actividad</title>\n          <style>\n            table { border-collapse: collapse; width: 100%; }\n            th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n            th { background-color: #f2f2f2; font-weight: bold; }\n            .filter-info { background-color: #e8f4fd; padding: 10px; margin-bottom: 20px; }\n            .header { background-color: #4CAF50; color: white; padding: 15px; text-align: center; font-size: 18px; }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Logs de Actividad del Sistema</h1>\n            <p>Fecha de exportación: ${new Date().toLocaleString('es-ES')}</p>\n          </div>\n          \n          ${filterInfo}\n          \n          <table>\n            <thead>\n              <tr>\n                ${headers.map(header => `<th>${header}</th>`).join('')}\n              </tr>\n            </thead>\n            <tbody>\n              ${rows.map(row => `<tr>${row.map(cell => `<td>${cell}</td>`).join('')}</tr>`).join('')}\n            </tbody>\n          </table>\n          \n          <div style=\"margin-top: 20px; padding: 10px; background-color: #f9f9f9;\">\n            <p><strong>Total de registros exportados:</strong> ${logs.length}</p>\n            <p><strong>Generado por:</strong> Sistema de Logs de Actividad</p>\n          </div>\n        </body>\n      </html>\n    `;\n\n    return htmlContent;\n  }\n\n  /**\n   * Generar información de filtros aplicados\n   */\n  private generateFilterInfo(filters: any): string {\n    const activeFilters = [];\n    \n    if (filters.user_id) activeFilters.push(`Usuario: ${filters.user_id}`);\n    if (filters.action) activeFilters.push(`Acción: ${filters.action}`);\n    if (filters.start_date) activeFilters.push(`Fecha inicio: ${filters.start_date}`);\n    if (filters.end_date) activeFilters.push(`Fecha fin: ${filters.end_date}`);\n    if (filters.change_details) activeFilters.push(`Detalles: ${filters.change_details}`);\n\n    if (activeFilters.length === 0) {\n      return '<div class=\"filter-info\"><strong>Filtros aplicados:</strong> Ninguno (todos los registros)</div>';\n    }\n\n    return `\n      <div class=\"filter-info\">\n        <strong>Filtros aplicados:</strong><br>\n        ${activeFilters.map(filter => `• ${filter}`).join('<br>')}\n      </div>\n    `;\n  }\n\n  /**\n   * Formatear fecha para Excel\n   */\n  private formatDateForExcel(dateString: string | undefined): string {\n    if (!dateString) return '';\n    \n    try {\n      const date = new Date(dateString);\n      return date.toLocaleString('es-ES', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    } catch (error) {\n      return dateString;\n    }\n  }\n\n  /**\n   * Descargar archivo Excel\n   */\n  private downloadExcelFile(content: string, filename: string): void {\n    // Crear blob con el contenido HTML\n    const blob = new Blob([content], { \n      type: 'application/vnd.ms-excel;charset=utf-8' \n    });\n\n    // Crear URL del blob\n    const url = window.URL.createObjectURL(blob);\n\n    // Crear elemento de descarga\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${filename}_${this.getFormattedDate()}.xls`;\n    \n    // Simular clic para descargar\n    document.body.appendChild(link);\n    link.click();\n    \n    // Limpiar\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Obtener fecha formateada para el nombre del archivo\n   */\n  private getFormattedDate(): string {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n    \n    return `${year}${month}${day}_${hours}${minutes}`;\n  }\n\n  /**\n   * Exportar logs filtrados por rango de fechas\n   */\n  exportLogsByDateRange(logs: ActivityLog[], startDate: string, endDate: string, filters: any = {}): void {\n    try {\n      // Filtrar logs por rango de fechas\n      const filteredLogs = logs.filter(log => {\n        if (!log.created_at) return false;\n        const logDate = new Date(log.created_at);\n        const start = startDate ? new Date(startDate) : null;\n        const end = endDate ? new Date(endDate) : null;\n        \n        if (start && logDate < start) return false;\n        if (end && logDate > end) return false;\n        \n        return true;\n      });\n\n      // Crear nombre de archivo con rango de fechas\n      const startStr = startDate ? new Date(startDate).toISOString().split('T')[0] : 'inicio';\n      const endStr = endDate ? new Date(endDate).toISOString().split('T')[0] : 'fin';\n      const filename = `logs_actividad_${startStr}_${endStr}`;\n\n      // Exportar logs filtrados\n      this.exportActivityLogsToExcel(filteredLogs, { ...filters, start_date: startDate, end_date: endDate });\n      \n    } catch (error) {\n      console.error('Error al exportar logs por rango de fechas:', error);\n      throw new Error('Error al generar el archivo Excel por rango de fechas');\n    }\n  }\n\n  /**\n   * Exportar a CSV como alternativa\n   */\n  exportToCSV(logs: ActivityLog[], filename: string = 'logs_actividad'): void {\n    try {\n      // Crear encabezados\n      const headers = [\n        'ID',\n        'Usuario',\n        'Nombre de Usuario',\n        'Acción',\n        'Descripción',\n        'Detalles del Cambio',\n        'Fecha de Creación',\n        'Fecha de Actualización'\n      ];\n\n      // Crear filas de datos\n      const rows = logs.map(log => [\n        log.id || '',\n        log.user_id || '',\n        log.username || '',\n        log.action || '',\n        log.description || '',\n        log.change_details || '',\n        this.formatDateForExcel(log.created_at),\n        this.formatDateForExcel(log.updated_at)\n      ]);\n\n      // Combinar encabezados y datos\n      const csvContent = [headers, ...rows]\n        .map(row => row.map(cell => `\"${cell}\"`).join(','))\n        .join('\\n');\n\n      // Crear y descargar archivo CSV\n      const blob = new Blob(['\\ufeff' + csvContent], { \n        type: 'text/csv;charset=utf-8;' \n      });\n      \n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `${filename}_${this.getFormattedDate()}.csv`;\n      \n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n\n    } catch (error) {\n      console.error('Error al exportar CSV:', error);\n      throw new Error('Error al generar el archivo CSV');\n    }\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit, Inject, ElementRef, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDialog, MatDialogModule, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { ActivityLogService, ActivityLog, ActivityLogFilters, ActivityLogStats } from '../../../core/services/activity-log.service';\nimport { ExportService } from '../../../core/services/export.service';\n\n@Component({\n  selector: 'app-logs-activity',\n  templateUrl: './logs-activity.component.html',\n  styleUrls: ['./logs-activity.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatDialogModule,\n    MatCardModule,\n    MatExpansionModule\n  ]\n})\nexport class LogsActivityComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild('exportMenuContainer', { static: false }) exportMenuContainer!: ElementRef;\n\n  displayedColumns: string[] = [\n    'timestamp', 'username', 'action', 'description', 'change_details'\n  ];\n\n  dataSource = new MatTableDataSource<ActivityLog>([]);\n  loading = false;\n  stats: ActivityLogStats | null = null;\n  statsLoading = false;\n  showExportMenu = false;\n\n  // Filtros\n  filters: ActivityLogFilters = {\n    limit: 10,\n    offset: 0,\n    change_details: ''\n  };\n\n  // Opciones de acciones para el filtro\n  actionOptions = [\n    'CREATE', 'DELETE', 'EXPORT','LOGIN', 'LOGOUT', 'UPDATE'\n  ];\n\n  // Paginación\n  totalLogs = 0;\n  pageSize = 100;\n  pageSizeOptions = [25, 50, 100, 200];\n\n  constructor(\n    private activityLogService: ActivityLogService,\n    private exportService: ExportService,\n    private snackBar: MatSnackBar,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.loadLogs();\n    this.loadStats();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Cargar logs con filtros aplicados\n   */\n  loadLogs(): void {\n    this.loading = true;\n    \n    this.activityLogService.getLogs(this.filters).subscribe({\n      next: (response) => {\n        this.dataSource.data = response.data;\n        this.totalLogs = response.pagination?.total || 0;\n        \n        // Actualizar el paginador si es necesario\n        if (this.paginator && this.filters.limit !== this.paginator.pageSize) {\n          this.paginator.pageSize = this.filters.limit || 100;\n        }\n        \n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error loading logs:', error);\n        this.snackBar.open('Error al cargar los logs', 'Error', { duration: 3000 });\n        this.loading = false;\n      }\n    });\n  }\n\n  /**\n   * Cargar estadísticas\n   */\n  loadStats(): void {\n    this.statsLoading = true;\n    \n    this.activityLogService.getStats().subscribe({\n      next: (response) => {\n        this.stats = response.data;\n        this.statsLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading stats:', error);\n        this.statsLoading = false;\n      }\n    });\n  }\n\n  /**\n   * Aplicar filtros\n   */\n  applyFilters(): void {\n    this.filters.offset = 0; // Resetear offset al aplicar filtros\n    if (this.paginator) {\n      this.paginator.firstPage();\n    }\n    this.loadLogs();\n  }\n\n  /**\n   * Limpiar filtros\n   */\n  clearFilters(): void {\n    this.filters = {\n      limit: 100,\n      offset: 0,\n      change_details: ''\n    };\n    if (this.paginator) {\n      this.paginator.firstPage();\n    }\n    this.loadLogs();\n  }\n\n  /**\n   * Cambiar página\n   */\n  onPageChange(event: any): void {\n    this.filters.offset = event.pageIndex * event.pageSize;\n    this.filters.limit = event.pageSize;\n    this.pageSize = event.pageSize;\n    this.loadLogs();\n  }\n\n  /**\n   * Limpiar logs antiguos\n   */\n  cleanOldLogs(): void {\n    const days = 90; // Por defecto 90 días\n    \n    this.dialog.open(ConfirmDialogComponent, {\n      width: '400px',\n      data: {\n        title: 'Limpiar Logs Antiguos',\n        message: `¿Estás seguro de que quieres eliminar todos los logs de más de ${days} días? Esta acción no se puede deshacer.`,\n        confirmText: 'Limpiar',\n        cancelText: 'Cancelar'\n      }\n    }).afterClosed().subscribe(result => {\n      if (result) {\n        this.activityLogService.cleanOldLogs(days).subscribe({\n          next: (response) => {\n            this.snackBar.open(response.message, 'Éxito', { duration: 3000 });\n            this.loadLogs();\n            this.loadStats();\n          },\n          error: (error) => {\n            console.error('Error cleaning old logs:', error);\n            this.snackBar.open('Error al limpiar logs antiguos', 'Error', { duration: 3000 });\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Exportar logs de la página actual\n   */\n  exportLogs(): void {\n    if (!this.dataSource.data || this.dataSource.data.length === 0) {\n      this.snackBar.open('No hay datos para exportar', 'Advertencia', { duration: 2000 });\n      return;\n    }\n\n    try {\n      this.loading = true;\n      \n      // Mostrar mensaje de inicio\n      this.snackBar.open('Generando archivo Excel...', 'Info', { duration: 2000 });\n      \n      // Exportar logs con filtros aplicados\n      this.exportService.exportActivityLogsToExcel(this.dataSource.data, this.filters);\n      \n      // Mensaje de éxito\n      this.snackBar.open(\n        `Archivo Excel generado exitosamente con ${this.dataSource.data.length} registros`, \n        'Éxito', \n        { duration: 3000 }\n      );\n      \n      // Cerrar menú después de exportar\n      this.closeExportMenu();\n      \n    } catch (error) {\n      console.error('Error al exportar logs:', error);\n      this.snackBar.open('Error al generar el archivo Excel', 'Error', { duration: 3000 });\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  /**\n   * Exportar todos los logs (no solo los de la página actual)\n   */\n  exportAllLogs(): void {\n    // Confirmar antes de exportar todos los logs\n    const confirmMessage = `¿Estás seguro de que quieres exportar TODOS los logs?\\n\\n` +\n                          `• Total de logs: ${this.totalLogs}\\n` +\n                          `• Filtros aplicados: ${this.getActiveFiltersText()}\\n` +\n                          `• El archivo puede ser muy grande\\n\\n` +\n                          `¿Continuar con la exportación?`;\n\n    if (confirm(confirmMessage)) {\n      try {\n        this.loading = true;\n        \n        // Mostrar mensaje de inicio\n        this.snackBar.open('Obteniendo todos los logs para exportar...', 'Info', { duration: 2000 });\n        \n        // Obtener todos los logs con los filtros actuales pero sin límite de paginación\n        const exportFilters = { ...this.filters, limit: 10000, offset: 0 };\n        \n        this.activityLogService.getLogs(exportFilters).subscribe({\n          next: (response) => {\n            if (response.data && response.data.length > 0) {\n              // Mostrar mensaje de generación\n              this.snackBar.open('Generando archivo Excel con todos los logs...', 'Info', { duration: 2000 });\n              \n              // Exportar todos los logs\n              this.exportService.exportActivityLogsToExcel(response.data, this.filters);\n              \n                          // Mensaje de éxito\n            this.snackBar.open(\n              `Archivo Excel generado exitosamente con ${response.data.length} registros`, \n              'Éxito', \n              { duration: 3000 }\n            );\n            \n            // Cerrar menú después de exportar\n            this.closeExportMenu();\n          } else {\n            this.snackBar.open('No se encontraron logs para exportar', 'Advertencia', { duration: 2000 });\n          }\n          this.loading = false;\n          },\n          error: (error) => {\n            console.error('Error al obtener logs para exportar:', error);\n            this.snackBar.open('Error al obtener los logs para exportar', 'Error', { duration: 3000 });\n            this.loading = false;\n          }\n        });\n        \n      } catch (error) {\n        console.error('Error al exportar todos los logs:', error);\n        this.snackBar.open('Error al generar el archivo Excel', 'Error', { duration: 3000 });\n        this.loading = false;\n      }\n    }\n  }\n\n  /**\n   * Obtener texto de filtros activos para mostrar en confirmación\n   */\n  private getActiveFiltersText(): string {\n    const activeFilters = [];\n    \n    if (this.filters.user_id) activeFilters.push(`Usuario: ${this.filters.user_id}`);\n    if (this.filters.action) activeFilters.push(`Acción: ${this.filters.action}`);\n    if (this.filters.start_date) activeFilters.push(`Fecha inicio: ${this.filters.start_date}`);\n    if (this.filters.end_date) activeFilters.push(`Fecha fin: ${this.filters.end_date}`);\n    if (this.filters.change_details) activeFilters.push(`Detalles: ${this.filters.change_details}`);\n\n    return activeFilters.length > 0 ? activeFilters.join(', ') : 'Ninguno (todos los registros)';\n  }\n\n  /**\n   * Alternar menú de exportación\n   */\n  toggleExportMenu(event?: Event): void {\n    if (event) {\n      event.stopPropagation();\n    }\n    this.showExportMenu = !this.showExportMenu;\n  }\n\n  /**\n   * Cerrar menú de exportación\n   */\n  closeExportMenu(): void {\n    this.showExportMenu = false;\n  }\n\n  /**\n   * Listener para cerrar el menú cuando se hace clic fuera\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: Event): void {\n    if (this.exportMenuContainer && !this.exportMenuContainer.nativeElement.contains(event.target as Node)) {\n      this.closeExportMenu();\n    }\n  }\n\n  /**\n   * Exportar logs por rango de fechas\n   */\n  exportLogsByDateRange(): void {\n    if (!this.filters.start_date && !this.filters.end_date) {\n      this.snackBar.open('Debes seleccionar al menos una fecha para exportar por rango', 'Advertencia', { duration: 3000 });\n      return;\n    }\n\n    try {\n      this.loading = true;\n      \n      // Mostrar mensaje de inicio\n      this.snackBar.open('Exportando logs por rango de fechas...', 'Info', { duration: 2000 });\n      \n      // Obtener todos los logs para filtrar por fecha\n      const exportFilters = { ...this.filters, limit: 10000, offset: 0 };\n      \n      this.activityLogService.getLogs(exportFilters).subscribe({\n        next: (response) => {\n          if (response.data && response.data.length > 0) {\n            // Exportar logs filtrados por fecha\n            this.exportService.exportLogsByDateRange(\n              response.data, \n              this.filters.start_date || '', \n              this.filters.end_date || '', \n              this.filters\n            );\n            \n            // Mensaje de éxito\n            const startDate = this.filters.start_date ? new Date(this.filters.start_date).toLocaleDateString('es-ES') : 'inicio';\n            const endDate = this.filters.end_date ? new Date(this.filters.end_date).toLocaleDateString('es-ES') : 'fin';\n            \n            this.snackBar.open(\n              `Archivo Excel generado exitosamente para el rango ${startDate} - ${endDate}`, \n              'Éxito', \n              { duration: 3000 }\n            );\n            \n            // Cerrar menú después de exportar\n            this.closeExportMenu();\n          } else {\n            this.snackBar.open('No se encontraron logs en el rango de fechas especificado', 'Advertencia', { duration: 2000 });\n          }\n          this.loading = false;\n        },\n        error: (error) => {\n          console.error('Error al obtener logs para exportar por fecha:', error);\n          this.snackBar.open('Error al obtener los logs para exportar', 'Error', { duration: 3000 });\n          this.loading = false;\n        }\n      });\n      \n    } catch (error) {\n      console.error('Error al exportar logs por rango de fechas:', error);\n      this.snackBar.open('Error al generar el archivo Excel', 'Error', { duration: 3000 });\n      this.loading = false;\n    }\n  }\n\n  /**\n   * Obtener color del chip según la acción\n   */\n  getActionColor(action: string): { class: string; icon: string; iconClass: string } {\n    const colorMap: { [key: string]: { class: string; icon: string; iconClass: string } } = {\n      'LOGIN': { \n        class: 'bg-green-100 text-green-800 border-green-200', \n        icon: 'login', \n        iconClass: 'text-green-600' \n      },\n      'LOGOUT': { \n        class: 'bg-red-100 text-red-800 border-red-200', \n        icon: 'logout', \n        iconClass: 'text-red-600' \n      },\n      'NAVIGATION': { \n        class: 'bg-blue-100 text-blue-800 border-blue-200', \n        icon: 'navigation', \n        iconClass: 'text-blue-600' \n      },\n      'CREATE': { \n        class: 'bg-emerald-100 text-emerald-800 border-emerald-200', \n        icon: 'add_circle', \n        iconClass: 'text-emerald-600' \n      },\n      'UPDATE': { \n        class: 'bg-amber-100 text-amber-800 border-amber-200', \n        icon: 'edit', \n        iconClass: 'text-amber-600' \n      },\n      'DELETE': { \n        class: 'bg-red-100 text-red-800 border-red-200', \n        icon: 'delete', \n        iconClass: 'text-red-600' \n      },\n      'SEARCH': { \n        class: 'bg-indigo-100 text-indigo-800 border-indigo-200', \n        icon: 'search', \n        iconClass: 'text-indigo-600' \n      },\n      'EXPORT': { \n        class: 'bg-purple-100 text-purple-800 border-purple-200', \n        icon: 'download', \n        iconClass: 'text-purple-600' \n      }\n    };\n    \n    return colorMap[action] || { \n      class: 'bg-gray-100 text-gray-800 border-gray-200', \n      icon: 'help', \n      iconClass: 'text-gray-600' \n    };\n  }\n\n  // Método getMethodColor removido ya que no tenemos la columna de método HTTP\n\n  /**\n   * Calcular tiempo promedio de ejecución\n   */\n  getAverageExecutionTime(): number {\n    // Como removimos el campo execution_time, retornamos un valor fijo\n    // En el futuro se puede implementar un sistema de medición de tiempo real\n    return 0;\n  }\n\n  /**\n   * Obtener rango de página actual\n   */\n  getPageRange(): string {\n    if (!this.paginator) return '0-0';\n    \n    const start = this.paginator.pageIndex * this.paginator.pageSize + 1;\n    const end = Math.min(start + this.paginator.pageSize - 1, this.totalLogs);\n    \n    return `${start}-${end}`;\n  }\n\n  /**\n   * Formatear timestamp\n   */\n  formatTimestamp(timestamp: string): string {\n    if (!timestamp) return '';\n    return new Date(timestamp).toLocaleString('es-ES');\n  }\n\n  /**\n   * Formatear tiempo de ejecución\n   */\n  formatExecutionTime(time: number): string {\n    // Como removimos el campo execution_time, retornamos un valor por defecto\n    return 'N/A';\n  }\n\n  /**\n   * Truncar texto largo\n   */\n  truncateText(text: string, maxLength: number = 50): string {\n    if (!text) return '';\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  }\n}\n\n// Componente de diálogo de confirmación\n@Component({\n  selector: 'app-confirm-dialog',\n  template: `\n    <h2 mat-dialog-title>{{ data.title }}</h2>\n    <mat-dialog-content>{{ data.message }}</mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n      <button mat-button mat-dialog-close>{{ data.cancelText }}</button>\n      <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\">{{ data.confirmText }}</button>\n    </mat-dialog-actions>\n  `,\n  standalone: true,\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class ConfirmDialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900\">Logs de Actividad</h1>\n      <p class=\"text-gray-600 mt-1\">Monitoreo completo de todas las acciones realizadas por los usuarios</p>\n    </div>\n    <div class=\"flex gap-2\">\n      <button \n        mat-raised-button \n        color=\"warn\" \n        (click)=\"cleanOldLogs()\"\n        class=\"flex items-center gap-2\">\n        <mat-icon>delete_sweep</mat-icon>\n        Limpiar Logs Antiguos\n      </button>\n      \n      <!-- Menú de exportación -->\n      <div class=\"export-menu-container\" #exportMenuContainer>\n        <button \n          mat-raised-button \n          color=\"accent\" \n          [disabled]=\"loading\"\n          (click)=\"toggleExportMenu($event)\"\n          matTooltip=\"Exportar logs de actividad a Excel\"\n          matTooltipPosition=\"above\"\n          class=\"flex items-center gap-2\">\n          <mat-spinner *ngIf=\"loading\" diameter=\"16\" class=\"mr-1\"></mat-spinner>\n          <mat-icon *ngIf=\"!loading\">download</mat-icon>\n          {{ loading ? 'Exportando...' : 'Exportar' }}\n          <mat-icon class=\"ml-1 transition-transform\" [class.rotate-180]=\"showExportMenu\">expand_more</mat-icon>\n        </button>\n        \n        <!-- Menú desplegable -->\n        <div \n          *ngIf=\"showExportMenu\"\n          class=\"export-menu animate-fade-in\">\n          <button \n            (click)=\"exportLogs()\"\n            [disabled]=\"loading || dataSource.data.length === 0\"\n            class=\"export-menu-item\">\n            <mat-icon class=\"menu-item-icon\">table_chart</mat-icon>\n            <span class=\"menu-item-text\">Exportar Página Actual</span>\n            <span class=\"menu-item-count\">({{ dataSource.data.length }} registros)</span>\n          </button>\n          \n          <button \n            (click)=\"exportAllLogs()\"\n            [disabled]=\"loading\"\n            class=\"export-menu-item\">\n            <mat-icon class=\"text-sm\">cloud_download</mat-icon>\n            <span class=\"menu-item-text\">Exportar Todos los Logs</span>\n            <span class=\"menu-item-count\">({{ totalLogs }} total)</span>\n          </button>\n          \n          <div class=\"export-menu-divider\"></div>\n          \n          <button \n            (click)=\"exportLogsByDateRange()\"\n            [disabled]=\"loading || (!filters.start_date && !filters.end_date)\"\n            class=\"export-menu-item\">\n            <mat-icon class=\"menu-item-icon\">date_range</mat-icon>\n            <span class=\"menu-item-text\">Exportar por Rango de Fechas</span>\n            <span class=\"menu-item-count\">\n              {{ filters.start_date || filters.end_date ? 'Filtrado' : 'Sin filtros' }}\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Estadísticas -->\n  <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n    <div class=\"bg-white rounded-lg shadow-sm border p-4\">\n      <div class=\"flex items-center\">\n        <div class=\"p-2 bg-blue-100 rounded-lg\">\n          <mat-icon class=\"text-blue-600\">history</mat-icon>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-gray-600\">Total de Logs</p>\n          <p class=\"text-2xl font-bold text-gray-900\">{{ stats?.total_logs || 0 | number }}</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bg-white rounded-lg shadow-sm border p-4\">\n      <div class=\"flex items-center\">\n        <div class=\"p-2 bg-green-100 rounded-lg\">\n          <mat-icon class=\"text-green-600\">trending_up</mat-icon>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-gray-600\">Acción Principal</p>\n          <p class=\"text-lg font-semibold text-gray-900\">{{ stats?.actions_count?.[0]?.action || 'N/A' }}</p>\n          <p class=\"text-sm text-gray-500\">{{ stats?.actions_count?.[0]?.count || 0 }} veces</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bg-white rounded-lg shadow-sm border p-4\">\n      <div class=\"flex items-center\">\n        <div class=\"p-2 bg-purple-100 rounded-lg\">\n          <mat-icon class=\"text-purple-600\">person</mat-icon>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-gray-600\">Usuario Más Activo</p>\n          <p class=\"text-lg font-semibold text-gray-900\">{{ stats?.users_count?.[0]?.username || 'N/A' }}</p>\n          <p class=\"text-sm text-gray-500\">{{ stats?.users_count?.[0]?.count || 0 }} acciones</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bg-white rounded-lg shadow-sm border p-4\">\n      <div class=\"flex items-center\">\n        <div class=\"p-2 bg-orange-100 rounded-lg\">\n          <mat-icon class=\"text-orange-600\">trending_down</mat-icon>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-gray-600\">Acciones Recientes</p>\n          <p class=\"text-lg font-semibold text-gray-900\">{{ dataSource.data.length }}</p>\n          <p class=\"text-sm text-gray-500\">en esta sesión</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Filtros -->\n  <div class=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n\n    <div class=\"flex flex-wrap gap-4 items-start\">\n      <!-- Búsqueda por texto -->\n      <mat-form-field appearance=\"outline\" class=\"flex-1 min-w-48\">\n        <mat-label>Buscar logs</mat-label>\n        <input \n          matInput \n          [(ngModel)]=\"filters.user_id\" \n          (ngModelChange)=\"applyFilters()\"\n          placeholder=\"Buscar por usuario...\"\n          maxlength=\"100\">\n        <mat-icon matSuffix>🔍</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por acción -->\n      <mat-form-field appearance=\"outline\" class=\"flex-1 min-w-48\">\n        <mat-label>Acción</mat-label>\n        <mat-select [(ngModel)]=\"filters.action\" (ngModelChange)=\"applyFilters()\">\n          <mat-option value=\"\">Todas las acciones</mat-option>\n          <mat-option *ngFor=\"let action of actionOptions\" [value]=\"action\">\n            {{ action }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- Filtro por fecha inicio -->\n      <mat-form-field appearance=\"outline\" class=\"flex-1 min-w-48\">\n        <mat-label>Fecha inicio</mat-label>\n        <input matInput [matDatepicker]=\"startPicker\" [(ngModel)]=\"filters.start_date\" (ngModelChange)=\"applyFilters()\">\n        <mat-datepicker-toggle matIconSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\n        <mat-datepicker #startPicker></mat-datepicker>\n      </mat-form-field>\n\n      <!-- Filtro por fecha fin -->\n      <mat-form-field appearance=\"outline\" class=\"flex-1 min-w-48\">\n        <mat-label>Fecha fin</mat-label>\n        <input matInput [matDatepicker]=\"endPicker\" [(ngModel)]=\"filters.end_date\" (ngModelChange)=\"applyFilters()\">\n        <mat-datepicker-toggle matIconSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\n        <mat-datepicker #endPicker></mat-datepicker>\n      </mat-form-field>\n\n      <!-- Botones de filtros -->\n      <button \n        mat-raised-button \n        color=\"primary\" \n        (click)=\"applyFilters()\"\n        class=\"flex items-center gap-2\">\n        <mat-icon>filter_list</mat-icon>\n        Aplicar Filtros\n      </button>\n      \n      <button \n        mat-stroked-button \n        (click)=\"clearFilters()\"\n        class=\"flex items-center gap-2\">\n        <mat-icon>clear</mat-icon>\n        Limpiar Filtros\n      </button>\n    </div>\n  </div>\n\n  <!-- Tabla -->\n  <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\" style=\"line-height: 1;\">\n      <!-- Columna Timestamp -->\n      <ng-container matColumnDef=\"timestamp\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-48 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Fecha y Hora\n        </th>\n        <td mat-cell *matCellDef=\"let log\" class=\"text-xs font-mono text-gray-600 py-0 text-center\">\n          {{ formatTimestamp(log.created_at) }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Usuario -->\n      <ng-container matColumnDef=\"username\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Usuario\n        </th>\n        <td mat-cell *matCellDef=\"let log\" class=\"text-xs py-0\">\n          <div class=\"flex items-center gap-2\">\n            <div class=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center\">\n              <span class=\"text-xs font-medium text-blue-600\">{{ log.username?.charAt(0)?.toUpperCase() }}</span>\n            </div>\n            <span class=\"font-medium\">{{ log.username }}</span>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Columna Acción -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Acción\n        </th>\n        <td mat-cell *matCellDef=\"let log\" class=\"text-xs py-0\">\n          <div class=\"flex justify-center items-center\">\n            <div class=\"flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium border\"\n                 [ngClass]=\"getActionColor(log.action).class\">\n              <mat-icon class=\"!text-xs !w-3 !h-3\" [ngClass]=\"getActionColor(log.action).iconClass\">\n                {{ getActionColor(log.action).icon }}\n              </mat-icon>\n              <span>{{ log.action }}</span>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Columna Descripción -->\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Descripción\n        </th>\n        <td mat-cell *matCellDef=\"let log\" class=\"text-xs py-0\">\n          <div class=\"max-w-xs\">\n            <span class=\"text-gray-700\" [matTooltip]=\"log.description || 'Sin descripción'\">\n              {{ truncateText(log.description || 'Sin descripción', 50) }}\n            </span>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Columna Detalles del Cambio -->\n      <ng-container matColumnDef=\"change_details\">\n        <th mat-header-cell *matHeaderCellDef class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Detalles del Cambio\n        </th>\n        <td mat-cell *matCellDef=\"let log\" class=\"text-xs py-0\">\n          <div class=\"max-w-xs\">\n            <span class=\"text-gray-700\" [matTooltip]=\"log.change_details || 'Sin detalles'\">\n              {{ truncateText(log.change_details || 'Sin detalles', 60) }}\n            </span>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"!min-h-0 !h-8\"></tr>\n    </table>\n\n    <!-- Loading spinner -->\n    <div *ngIf=\"loading\" class=\"flex justify-center items-center py-8\">\n      <mat-spinner diameter=\"40\"></mat-spinner>\n    </div>\n\n    <!-- Mensaje cuando no hay datos -->\n    <div *ngIf=\"!loading && dataSource.data.length === 0\" class=\"flex flex-col items-center justify-center py-8 text-gray-500\">\n      <mat-icon class=\"text-6xl text-gray-300 mb-2\">history</mat-icon>\n      <p class=\"text-lg font-medium\">No se encontraron logs</p>\n      <p class=\"text-sm\">Intenta ajustar los filtros de búsqueda</p>\n    </div>\n\n    <!-- Paginación -->\n    <mat-paginator \n      [pageSizeOptions]=\"[10, 25, 50, 100]\"\n      [pageSize]=\"10\"\n      [length]=\"totalLogs\"\n      (page)=\"onPageChange($event)\"\n      showFirstLastButtons\n      class=\"border-t\">\n    </mat-paginator>\n  </div>\n\n</div>\n"],"names":["ExportService","constructor","exportActivityLogsToExcel","logs","filters","excelContent","generateExcelContent","downloadExcelFile","error","console","Error","headers","rows","map","log","id","user_id","username","action","description","change_details","formatDateForExcel","created_at","updated_at","filterInfo","generateFilterInfo","htmlContent","Date","toLocaleString","header","join","row","cell","length","activeFilters","push","start_date","end_date","filter","dateString","date","year","month","day","hour","minute","second","content","filename","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","getFormattedDate","body","appendChild","click","removeChild","revokeObjectURL","now","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","exportLogsByDateRange","startDate","endDate","filteredLogs","logDate","start","end","startStr","toISOString","split","endStr","exportToCSV","csvContent","_","_2","factory","ɵfac","providedIn","CommonModule","FormsModule","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatButtonModule","MatIconModule","MatProgressSpinnerModule","MatTooltipModule","MatChipsModule","MatSnackBarModule","MatDatepickerModule","MatNativeDateModule","MatDialogModule","MAT_DIALOG_DATA","MatCardModule","MatExpansionModule","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LogsActivityComponent_div_20_Template_button_click_1_listener","ɵɵrestoreView","_r22","ctx_r21","ɵɵnextContext","ɵɵresetView","exportLogs","LogsActivityComponent_div_20_Template_button_click_8_listener","ctx_r23","exportAllLogs","LogsActivityComponent_div_20_Template_button_click_16_listener","ctx_r24","ɵɵadvance","ɵɵproperty","ctx_r3","loading","dataSource","data","ɵɵtextInterpolate1","totalLogs","action_r25","ctx_r8","formatTimestamp","log_r26","ɵɵtextInterpolate","log_r27","tmp_0_0","charAt","toUpperCase","ctx_r12","getActionColor","log_r28","class","iconClass","icon","log_r29","ctx_r14","truncateText","log_r30","ctx_r16","LogsActivityComponent","activityLogService","exportService","snackBar","dialog","displayedColumns","stats","statsLoading","showExportMenu","limit","offset","actionOptions","pageSize","pageSizeOptions","ngOnInit","loadLogs","loadStats","ngAfterViewInit","paginator","sort","getLogs","subscribe","next","response","pagination","total","open","duration","getStats","applyFilters","firstPage","clearFilters","onPageChange","event","pageIndex","cleanOldLogs","days","ConfirmDialogComponent","width","title","message","confirmText","cancelText","afterClosed","result","closeExportMenu","confirmMessage","getActiveFiltersText","confirm","exportFilters","toggleExportMenu","stopPropagation","onDocumentClick","exportMenuContainer","nativeElement","contains","target","toLocaleDateString","colorMap","getAverageExecutionTime","getPageRange","Math","min","timestamp","formatExecutionTime","time","text","maxLength","substring","ɵɵdirectiveInject","i1","ActivityLogService","i2","i3","MatSnackBar","i4","MatDialog","selectors","viewQuery","LogsActivityComponent_Query","rf","ctx","$event","ɵɵresolveDocument","LogsActivityComponent_Template_button_click_8_listener","LogsActivityComponent_Template_button_click_14_listener","ɵɵtemplate","LogsActivityComponent_mat_spinner_15_Template","LogsActivityComponent_mat_icon_16_Template","LogsActivityComponent_div_20_Template","LogsActivityComponent_Template_input_ngModelChange_74_listener","LogsActivityComponent_Template_mat_select_ngModelChange_80_listener","LogsActivityComponent_mat_option_83_Template","LogsActivityComponent_Template_input_ngModelChange_87_listener","LogsActivityComponent_Template_input_ngModelChange_94_listener","LogsActivityComponent_Template_button_click_98_listener","LogsActivityComponent_Template_button_click_102_listener","ɵɵelementContainerStart","LogsActivityComponent_th_109_Template","LogsActivityComponent_td_110_Template","ɵɵelementContainerEnd","LogsActivityComponent_th_112_Template","LogsActivityComponent_td_113_Template","LogsActivityComponent_th_115_Template","LogsActivityComponent_td_116_Template","LogsActivityComponent_th_118_Template","LogsActivityComponent_td_119_Template","LogsActivityComponent_th_121_Template","LogsActivityComponent_td_122_Template","LogsActivityComponent_tr_123_Template","LogsActivityComponent_tr_124_Template","LogsActivityComponent_div_125_Template","LogsActivityComponent_div_126_Template","LogsActivityComponent_Template_mat_paginator_page_127_listener","ɵɵclassProp","ɵɵpipeBind1","total_logs","actions_count","count","users_count","_r5","_r6","ɵɵpureFunction0","_c1","i5","NgClass","NgForOf","NgIf","DecimalPipe","i6","DefaultValueAccessor","NgControlStatus","MaxLengthValidator","NgModel","i7","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i8","i9","MatSortHeader","i10","MatFormField","MatLabel","MatSuffix","i11","MatInput","i12","MatSelect","i13","MatOption","i14","MatButton","i15","MatIcon","i16","MatProgressSpinner","i17","MatTooltip","i18","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","styles","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ConfirmDialogComponent_Template","MatDialogClose","MatDialogTitle","MatDialogActions","MatDialogContent","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}