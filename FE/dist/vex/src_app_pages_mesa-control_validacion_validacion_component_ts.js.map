{"version":3,"file":"src_app_pages_mesa-control_validacion_validacion_component_ts.js","mappings":"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","sources":["./src/app/core/constants/catalogs.ts","./src/app/core/services/default-agency.service.ts","./src/app/pages/mesa-control/validacion/aprobar-documento-dialog/aprobar-documento-dialog.component.ts","./src/app/pages/mesa-control/validacion/aprobar-documento-dialog/aprobar-documento-dialog.component.html","./src/app/pages/mesa-control/validacion/cambiar-estatus-dialog/cambiar-estatus-dialog.component.ts","./src/app/pages/mesa-control/validacion/cambiar-estatus-dialog/cambiar-estatus-dialog.component.html","./src/app/pages/mesa-control/validacion/cancelar-pedido-dialog/cancelar-pedido-dialog.component.ts","./src/app/pages/mesa-control/validacion/cancelar-pedido-dialog/cancelar-pedido-dialog.component.html","./src/app/pages/mesa-control/validacion/eliminar-pedido-dialog/eliminar-pedido-dialog.component.ts","./src/app/pages/mesa-control/validacion/eliminar-pedido-dialog/eliminar-pedido-dialog.component.html","./src/app/pages/mesa-control/validacion/excepcion-pedido-dialog/excepcion-pedido-dialog.component.ts","./src/app/pages/mesa-control/validacion/excepcion-pedido-dialog/excepcion-pedido-dialog.component.html","./src/app/pages/mesa-control/validacion/validacion.component.ts","./src/app/pages/mesa-control/validacion/validacion.component.html","./src/app/pages/mesa-control/validacion/validacion.service.ts","./src/app/pages/mesa-control/validacion/ver-documento-dialog/ver-documento-dialog.component.ts","./src/app/pages/mesa-control/validacion/ver-documento-dialog/ver-documento-dialog.component.html","./node_modules/rxjs/dist/esm/internal/operators/timeout.js"],"sourcesContent":["/**\n * Catálogos fijos del sistema\n * Contiene datos que no cambian frecuentemente y se usan en múltiples componentes\n */\n\nexport interface CatalogItem {\n  id: number;\n  name: string;\n  value?: string;\n}\n\n/**\n * Catálogo de fases del sistema\n * Mapea los IdCurrentState con sus nombres correspondientes\n */\nexport const FASES_CATALOG: CatalogItem[] = [\n  { id: 1, name: 'Integración', value: '1' },\n  { id: 2, name: 'Liquidación', value: '2' },\n  { id: 3, name: 'Liberación', value: '3' },\n  { id: 4, name: 'Liberado', value: '4' },\n  { id: 5, name: 'Cancelado', value: '5' },\n  { id: 6, name: 'Liberado por Excepción', value: '6' }\n];\n\n/**\n * Obtener el nombre de una fase por su ID\n */\nexport function getFaseNameById(id: number): string {\n  const fase = FASES_CATALOG.find(f => f.id === id);\n  return fase ? fase.name : 'Desconocido';\n}\n\n/**\n * Obtener el valor de una fase por su ID\n */\nexport function getFaseValueById(id: number): string {\n  const fase = FASES_CATALOG.find(f => f.id === id);\n  return fase ? fase.value || '' : '';\n}\n\n/**\n * Obtener el ID de una fase por su valor\n */\nexport function getFaseIdByValue(value: string): number {\n  const fase = FASES_CATALOG.find(f => f.value === value);\n  return fase ? fase.id : 0;\n}\n\n/**\n * Obtener todas las fases para usar en filtros\n */\nexport function getFasesForFilter(): CatalogItem[] {\n  return FASES_CATALOG.map(fase => ({\n    id: fase.id,\n    name: fase.name,\n    value: fase.value\n  }));\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport interface Agencia {\n  Id: number;\n  Name: string;\n  Enabled: boolean | number | string; // Puede ser boolean, number o string\n  [key: string]: any; // Para campos adicionales\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultAgencyService {\n  private apiUrl = environment.apiBaseUrl;\n  \n  // BehaviorSubject para mantener el estado de la agencia seleccionada\n  private selectedAgencySubject = new BehaviorSubject<number | null>(null);\n  public selectedAgency$ = this.selectedAgencySubject.asObservable();\n  \n  // BehaviorSubject para mantener el estado de las agencias disponibles\n  private agenciasSubject = new BehaviorSubject<Agencia[]>([]);\n  public agencias$ = this.agenciasSubject.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Obtener agencias disponibles\n   */\n  obtenerAgencias(): Observable<Agencia[]> {\n    return this.http.get<any>(`${this.apiUrl}/api/agency`).pipe(\n      map(response => {\n        if (response && response.success && response.data && response.data.agencies) {\n          return response.data.agencies;\n        }\n        if (Array.isArray(response)) {\n          return response;\n        }\n        if (response && response.agencies && Array.isArray(response.agencies)) {\n          return response.agencies;\n        }\n        return [];\n      }),\n      tap(agencias => {\n        this.agenciasSubject.next(agencias);\n      })\n    );\n  }\n\n  /**\n   * Obtener agencia predeterminada del usuario\n   */\n  obtenerAgenciaUsuario(): Observable<number | null> {\n    return this.http.get<any>(`${this.apiUrl}/api/user/profile`).pipe(\n      map(response => {\n        if (response && response.success && response.data) {\n          return response.data.DefaultAgency;\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Obtener la agencia predeterminada del usuario con reintentos\n   */\n  private obtenerAgenciaUsuarioConReintentos(maxReintentos: number = 3, delayMs: number = 1000): Observable<number | null> {\n    return new Observable(observer => {\n      let intentos = 0;\n      \n      const intentarObtener = () => {\n        intentos++;\n        console.log(`🔄 DefaultAgencyService - Intento ${intentos} de obtener agencia predeterminada del usuario`);\n        \n        this.obtenerAgenciaUsuario().subscribe({\n          next: (defaultAgencyId) => {\n            console.log(`✅ DefaultAgencyService - Agencia predeterminada obtenida exitosamente en intento ${intentos}:`, defaultAgencyId);\n            observer.next(defaultAgencyId);\n            observer.complete();\n          },\n          error: (error) => {\n            console.warn(`⚠️ DefaultAgencyService - Intento ${intentos} falló:`, error);\n            console.error(`🔍 DefaultAgencyService - Detalles del error:`, {\n              status: error.status,\n              statusText: error.statusText,\n              message: error.message,\n              error: error.error\n            });\n            \n            if (intentos < maxReintentos) {\n              console.log(`🔄 DefaultAgencyService - Reintentando en ${delayMs}ms... (${intentos}/${maxReintentos})`);\n              setTimeout(intentarObtener, delayMs);\n            } else {\n              console.error(`❌ DefaultAgencyService - Todos los ${maxReintentos} intentos fallaron`);\n              observer.error(error);\n            }\n          }\n        });\n      };\n      \n      intentarObtener();\n    });\n  }\n\n  /**\n   * Establecer agencia predeterminada del usuario\n   * @param autoSelect Si es true, selecciona automáticamente una agencia\n   * @returns Observable<number | null> que devuelve el ID de la agencia seleccionada\n   */\n  establecerAgenciaPredeterminada(autoSelect: boolean = true): Observable<number | null> {\n    return new Observable(observer => {\n      console.log('🔄 DefaultAgencyService - Iniciando establecimiento de agencia predeterminada...');\n      console.log('📊 DefaultAgencyService - Agencias disponibles en el servicio:', this.agenciasSubject.value);\n      \n      // Intentar obtener la agencia predeterminada con reintentos\n      this.obtenerAgenciaUsuarioConReintentos().subscribe({\n        next: (defaultAgencyId) => {\n          console.log('👤 DefaultAgencyService - Agencia predeterminada del usuario obtenida:', defaultAgencyId);\n          let agenciaSeleccionada: number | null = null;\n          \n          if (defaultAgencyId && this.agenciasSubject.value.length > 0) {\n            // Buscar la agencia predeterminada del usuario en la lista\n            const agenciaPredeterminada = this.agenciasSubject.value.find(ag => ag.Id === defaultAgencyId);\n            if (agenciaPredeterminada) {\n              console.log('✅ DefaultAgencyService - Agencia predeterminada del usuario encontrada:', agenciaPredeterminada);\n              agenciaSeleccionada = defaultAgencyId;\n            } else {\n              // Si no se encuentra la agencia predeterminada, seleccionar la primera\n              if (autoSelect) {\n                console.log('⚠️ DefaultAgencyService - Agencia predeterminada del usuario no encontrada, seleccionando primera agencia');\n                agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n                console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n              }\n            }\n          } else {\n            // Si el usuario no tiene agencia predeterminada, seleccionar la primera de la lista\n            if (autoSelect && this.agenciasSubject.value.length > 0) {\n              console.log('ℹ️ DefaultAgencyService - Usuario sin agencia predeterminada, seleccionando primera agencia de la lista');\n              agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n              console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n            }\n          }\n          \n          // Actualizar el BehaviorSubject\n          if (agenciaSeleccionada) {\n            console.log('🎯 DefaultAgencyService - Estableciendo agencia seleccionada:', agenciaSeleccionada);\n            this.selectedAgencySubject.next(agenciaSeleccionada);\n          }\n          \n          observer.next(agenciaSeleccionada);\n          observer.complete();\n        },\n        error: (error) => {\n          console.error('❌ DefaultAgencyService - Error obteniendo agencia predeterminada después de reintentos:', error);\n          console.warn('⚠️ DefaultAgencyService - No se pudo obtener agencia predeterminada, seleccionando primera agencia de la lista');\n          // En caso de error, seleccionar la primera agencia disponible si está habilitado\n          let agenciaSeleccionada: number | null = null;\n          if (autoSelect && this.agenciasSubject.value.length > 0) {\n            agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n            console.log('ℹ️ DefaultAgencyService - Seleccionada primera agencia por defecto:', agenciaSeleccionada);\n            console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n            this.selectedAgencySubject.next(agenciaSeleccionada);\n          }\n          \n          observer.next(agenciaSeleccionada);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  /**\n   * Seleccionar una agencia específica\n   */\n  seleccionarAgencia(agenciaId: number): void {\n    this.selectedAgencySubject.next(agenciaId);\n  }\n\n  /**\n   * Obtener la agencia actualmente seleccionada\n   */\n  getAgenciaSeleccionada(): number | null {\n    return this.selectedAgencySubject.value;\n  }\n\n  /**\n   * Obtener las agencias disponibles\n   */\n  getAgencias(): Agencia[] {\n    return this.agenciasSubject.value;\n  }\n\n  /**\n   * Limpiar la selección de agencia\n   */\n  limpiarSeleccion(): void {\n    this.selectedAgencySubject.next(null);\n  }\n\n  /**\n   * Verificar si una agencia está habilitada\n   */\n  esAgenciaHabilitada(agencia: Agencia): boolean {\n    return agencia && this.esHabilitado(agencia.Enabled);\n  }\n\n  /**\n   * Método de utilidad para validar estado habilitado de cualquier campo\n   */\n  private esHabilitado(valor: any): boolean {\n    if (valor === null || valor === undefined) {\n      return false;\n    }\n    \n    // Convertir a string para comparación segura\n    const valorStr = String(valor).toLowerCase();\n    return valorStr === 'true' || valorStr === '1' || valorStr === 'enabled';\n  }\n\n  /**\n   * Obtener agencias habilitadas\n   */\n  getAgenciasHabilitadas(): Agencia[] {\n    return this.agenciasSubject.value.filter(ag => this.esAgenciaHabilitada(ag));\n  }\n\n  /**\n   * Obtener agencias por estado (habilitadas o deshabilitadas)\n   */\n  getAgenciasPorEstado(habilitadas: boolean = true): Agencia[] {\n    return this.agenciasSubject.value.filter(ag => this.esAgenciaHabilitada(ag) === habilitadas);\n  }\n\n  /**\n   * Verificar si hay agencias disponibles\n   */\n  tieneAgencias(): boolean {\n    return this.agenciasSubject.value.length > 0;\n  }\n\n  /**\n   * Verificar si hay agencias habilitadas\n   */\n  tieneAgenciasHabilitadas(): boolean {\n    return this.getAgenciasHabilitadas().length > 0;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nexport interface AprobarDocumentoData {\n  documento: any;\n}\n\nexport interface AprobarDocumentoResult {\n  aprobado: boolean;\n  estatus: string;\n  comentario?: string;\n  fechaExpiracion?: Date;\n}\n\n@Component({\n  selector: 'app-aprobar-documento-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  templateUrl: './aprobar-documento-dialog.component.html',\n  styleUrls: ['./aprobar-documento-dialog.component.scss']\n})\nexport class AprobarDocumentoDialogComponent {\n\n  estatusSeleccionado: string = '';\n  comentario: string = '';\n  fechaExpiracion: Date | null = null;\n  \n  opcionesEstatus = [\n    { value: 'aprobado', label: 'Aprobado' },\n    { value: 'rechazado', label: 'Rechazado' }\n  ];\n\n  constructor(\n    public dialogRef: MatDialogRef<AprobarDocumentoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AprobarDocumentoData\n  ) {}\n\n  onCancelar(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirmar(): void {\n    if (!this.estatusSeleccionado) {\n      return;\n    }\n\n    // Si el documento requiere expiración y está siendo aprobado, validar fecha\n    if (this.requiereExpiracion && this.estatusSeleccionado === 'aprobado' && !this.fechaExpiracion) {\n      return;\n    }\n\n    // Si está siendo rechazado, validar comentario\n    if (this.estatusSeleccionado === 'rechazado' && !this.comentario.trim()) {\n      return;\n    }\n\n    const result: AprobarDocumentoResult = {\n      aprobado: this.estatusSeleccionado === 'aprobado',\n      estatus: this.estatusSeleccionado,\n      comentario: this.comentario.trim() || undefined,\n      fechaExpiracion: this.fechaExpiracion || undefined\n    };\n\n    this.dialogRef.close(result);\n  }\n\n  get puedeConfirmar(): boolean {\n    if (!this.estatusSeleccionado) {\n      return false;\n    }\n\n    // Si requiere expiración y está siendo aprobado, debe tener fecha\n    if (this.requiereExpiracion && this.estatusSeleccionado === 'aprobado') {\n      return this.fechaExpiracion !== null;\n    }\n\n    // Si está siendo rechazado, debe tener comentario\n    if (this.estatusSeleccionado === 'rechazado') {\n      return this.comentario.trim() !== '';\n    }\n\n    return true;\n  }\n\n  get requiereExpiracion(): boolean {\n    return this.data.documento.ReqExpiration == 1 || this.data.documento.ReqExpiration === \"1\";\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <h2 class=\"text-xl font-semibold text-gray-800\">Aprobar/Rechazar Documento</h2>\n    <button mat-icon-button (click)=\"onCancelar()\" class=\"text-gray-500 hover:text-gray-700\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Información del documento -->\n  <div class=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n    <h3 class=\"text-sm font-medium text-gray-600 mb-2\">Documento a evaluar:</h3>\n    <div class=\"grid grid-cols-2 gap-4 text-sm\">\n      <div>\n        <span class=\"font-medium text-gray-700\">Documento:</span>\n        <span class=\"ml-2 text-gray-600\">{{ data.documento.documento }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-700\">Proceso:</span>\n        <span class=\"ml-2 text-gray-600\">{{ data.documento.proceso }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-700\">Fase:</span>\n        <span class=\"ml-2 text-gray-600\">{{ data.documento.fase }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-700\">Fecha:</span>\n        <span class=\"ml-2 text-gray-600\">{{ data.documento.fecha }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-700\">Requerido:</span>\n        <span class=\"ml-2 text-gray-600\">{{ data.documento.requerido == 1 ? 'Sí' : 'No' }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-700\">Requiere Expiración:</span>\n        <span class=\"ml-2 text-gray-600\">{{ data.documento.ReqExpiration == 1 || data.documento.ReqExpiration === '1' ? 'Sí' : 'No' }}</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Formulario -->\n  <div class=\"space-y-4\">\n    <!-- Estatus -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Estatus</mat-label>\n      <mat-select [(ngModel)]=\"estatusSeleccionado\" required>\n        <mat-option *ngFor=\"let opcion of opcionesEstatus\" [value]=\"opcion.value\">\n          {{ opcion.label }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!-- Fecha de expiración (solo si requiere expiración y está siendo aprobado) -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\" *ngIf=\"requiereExpiracion && estatusSeleccionado === 'aprobado'\">\n      <mat-label>Fecha de expiración</mat-label>\n      <input matInput \n             [matDatepicker]=\"picker\"\n             [(ngModel)]=\"fechaExpiracion\"\n             placeholder=\"Seleccionar fecha de expiración\"\n             required>\n      <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n      <mat-hint>Este documento requiere fecha de expiración</mat-hint>\n    </mat-form-field>\n\n    <!-- Comentario (solo si está siendo rechazado) -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\" *ngIf=\"estatusSeleccionado === 'rechazado'\">\n      <mat-label>Comentario</mat-label>\n      <textarea matInput \n                [(ngModel)]=\"comentario\"\n                rows=\"3\"\n                placeholder=\"Agregar comentario sobre el rechazo...\"\n                required></textarea>\n      <mat-hint>El comentario es obligatorio para documentos rechazados</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <!-- Botones de acción -->\n  <div class=\"flex justify-end mt-6 pt-4 border-t border-gray-200 space-x-3\">\n    <button mat-button (click)=\"onCancelar()\" class=\"text-gray-600\">\n      Cancelar\n    </button>\n    <button mat-raised-button \n            color=\"primary\" \n            (click)=\"onConfirmar()\"\n            [disabled]=\"!puedeConfirmar\">\n      {{ estatusSeleccionado === 'aprobado' ? 'Aprobar' : estatusSeleccionado === 'rechazado' ? 'Rechazar' : 'Confirmar' }}\n    </button>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nexport interface CambiarEstatusData {\n  cliente: any;\n}\n\nexport interface CambiarEstatusResult {\n  nuevoEstatus: string;\n  nuevoIdCurrentState: number;\n}\n\n@Component({\n  selector: 'app-cambiar-estatus-dialog',\n  templateUrl: './cambiar-estatus-dialog.component.html',\n  styleUrls: ['./cambiar-estatus-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class CambiarEstatusDialogComponent implements OnInit {\n  fasesDisponibles = [\n    { nombre: 'Integración', id: 1 },\n    { nombre: 'Liberación', id: 4 },\n    { nombre: 'Liquidación', id: 7 }\n  ];\n  \n  faseSeleccionada: number | null = null;\n  loading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<CambiarEstatusDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: CambiarEstatusData,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    // Establecer la fase actual como seleccionada por defecto\n    this.faseSeleccionada = parseInt(this.data.cliente.IdCurrentState);\n  }\n\n  /**\n   * Obtener el ID del estado actual como número\n   */\n  get estadoActualId(): number {\n    return parseInt(this.data.cliente.IdCurrentState);\n  }\n\n  /**\n   * Obtener el nombre de la fase seleccionada\n   */\n  get nombreFaseSeleccionada(): string {\n    if (!this.faseSeleccionada) {\n      return 'No seleccionada';\n    }\n    const fase = this.fasesDisponibles.find(f => f.id === this.faseSeleccionada);\n    return fase ? fase.nombre : 'No seleccionada';\n  }\n\n  /**\n   * Verificar si el formulario es válido para habilitar el botón\n   */\n  get isFormValid(): boolean {\n    return this.faseSeleccionada !== null && \n           this.faseSeleccionada !== undefined &&\n           this.faseSeleccionada !== this.estadoActualId;\n  }\n\n  onCancelar(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirmar(): void {\n    if (!this.faseSeleccionada) {\n      this.snackBar.open('Por favor selecciona una fase', 'Error', { duration: 3000 });\n      return;\n    }\n\n    if (this.faseSeleccionada === this.estadoActualId) {\n      this.snackBar.open('Debes seleccionar una fase diferente a la actual', 'Error', { duration: 3000 });\n      return;\n    }\n\n    this.loading = true;\n\n    // Simular procesamiento\n    setTimeout(() => {\n      this.loading = false;\n      \n      const faseSeleccionadaObj = this.fasesDisponibles.find(f => f.id === this.faseSeleccionada);\n      \n      this.dialogRef.close({\n        nuevoEstatus: faseSeleccionadaObj?.nombre || '',\n        nuevoIdCurrentState: this.faseSeleccionada\n      });\n    }, 1000);\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center mb-6\">\n    <mat-icon class=\"text-blue-600 mr-3\">swap_horiz</mat-icon>\n    <h2 class=\"text-xl font-semibold text-gray-800\">Cambiar Estatus del Pedido</h2>\n  </div>\n\n  <!-- Información del cliente -->\n  <div class=\"bg-gray-50 rounded-lg p-4 mb-6\">\n    <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Información del Pedido</h3>\n    <div class=\"grid grid-cols-2 gap-4 text-sm\">\n      <div>\n        <span class=\"font-medium text-gray-600\">Cliente:</span>\n        <span class=\"ml-2\">{{ data.cliente.cliente }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">No. Pedido:</span>\n        <span class=\"ml-2\">{{ data.cliente.ndPedido }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Proceso:</span>\n        <span class=\"ml-2\">{{ data.cliente.proceso }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Fase Actual:</span>\n        <span class=\"ml-2\">{{ data.cliente.fase }}</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Formulario -->\n  <form (ngSubmit)=\"onConfirmar()\" #statusForm=\"ngForm\">\n    <div class=\"space-y-4\">\n      <!-- Selección de fase -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Nueva Fase</mat-label>\n        <mat-select \n          [(ngModel)]=\"faseSeleccionada\" \n          name=\"fase\"\n          required>\n          \n          <mat-option *ngFor=\"let fase of fasesDisponibles\" [value]=\"fase.id\">\n            {{ fase.nombre }}\n          </mat-option>\n        </mat-select>\n        <mat-hint>Selecciona la nueva fase para el pedido</mat-hint>\n        <mat-error *ngIf=\"!faseSeleccionada\">Debes seleccionar una fase</mat-error>\n        <mat-error *ngIf=\"faseSeleccionada === estadoActualId\">Debes seleccionar una fase diferente a la actual</mat-error>\n      </mat-form-field>\n\n      <!-- Información de la fase actual -->\n      <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <h4 class=\"text-sm font-medium text-blue-700 mb-2\">Información de Cambio</h4>\n        <div class=\"text-sm text-blue-600\">\n          <p><strong>Fase actual:</strong> {{ data.cliente.fase }}</p>\n          <p *ngIf=\"faseSeleccionada\">\n            <strong>Nueva fase:</strong> \n            {{ nombreFaseSeleccionada }}\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Botones -->\n    <div class=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancelar()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      \n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"primary\"\n        [disabled]=\"!isFormValid || loading\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"16\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\" class=\"mr-2\">swap_horiz</mat-icon>\n        {{ loading ? 'Procesando...' : 'Confirmar Cambio' }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FileExtraordinaryReasonService, FileExtraordinaryReason } from '../../../../core/services/file-extraordinary-reason.service';\n\nexport interface CancelarPedidoData {\n  cliente: any;\n}\n\nexport interface CancelarPedidoResult {\n  motivoId: number;\n  comentario: string;\n}\n\n@Component({\n  selector: 'app-cancelar-pedido-dialog',\n  templateUrl: './cancelar-pedido-dialog.component.html',\n  styleUrls: ['./cancelar-pedido-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class CancelarPedidoDialogComponent implements OnInit {\n  motivos: FileExtraordinaryReason[] = [];\n  motivoSeleccionado: number | null = null;\n  comentario: string = '';\n  loading = false;\n  loadingMotivos = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<CancelarPedidoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: CancelarPedidoData,\n    private fileExtraordinaryReasonService: FileExtraordinaryReasonService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.cargarMotivos();\n  }\n\n  cargarMotivos(): void {\n    this.loadingMotivos = true;\n    \n    // Cargar motivos extraordinarios con IdTypeReason = 2 (motivos de cancelación)\n    this.fileExtraordinaryReasonService.getFileExtraordinaryReasons({ \n      id_type_reason: 2,\n      limit: 1000 // Obtener todos los motivos de cancelación\n    }).subscribe({\n      next: (response) => {\n        this.motivos = response.data.file_extraordinary_reasons;\n        this.loadingMotivos = false;\n        console.log('Motivos extraordinarios de cancelación cargados:', this.motivos);\n      },\n      error: (error) => {\n        console.error('Error cargando motivos extraordinarios de cancelación:', error);\n        this.snackBar.open('Error al cargar los motivos de cancelación', 'Error', { duration: 3000 });\n        this.loadingMotivos = false;\n      }\n    });\n  }\n\n  /**\n   * Verificar si el formulario es válido para habilitar el botón\n   */\n  get isFormValid(): boolean {\n    return this.motivoSeleccionado !== null && \n           this.motivoSeleccionado !== undefined && \n           this.comentario.trim().length > 0;\n  }\n\n  onCancelar(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirmar(): void {\n    if (!this.motivoSeleccionado) {\n      this.snackBar.open('Por favor selecciona un motivo', 'Error', { duration: 3000 });\n      return;\n    }\n\n    if (!this.comentario.trim()) {\n      this.snackBar.open('Por favor ingresa un comentario', 'Error', { duration: 3000 });\n      return;\n    }\n\n    this.loading = true;\n\n    const result: CancelarPedidoResult = {\n      motivoId: this.motivoSeleccionado,\n      comentario: this.comentario.trim()\n    };\n\n    // Simular procesamiento\n    setTimeout(() => {\n      this.loading = false;\n      this.dialogRef.close(result);\n    }, 1000);\n  }\n\n  getMotivoSeleccionado(): string {\n    const motivo = this.motivos.find(m => m.Id === this.motivoSeleccionado);\n    return motivo ? motivo.Name : '';\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center mb-6\">\n    <mat-icon class=\"text-red-600 mr-3\">cancel</mat-icon>\n    <h2 class=\"text-xl font-semibold text-gray-800\">Cancelar Pedido</h2>\n  </div>\n\n  <!-- Información del cliente -->\n  <div class=\"bg-gray-50 rounded-lg p-4 mb-6\">\n    <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Información del Pedido</h3>\n    <div class=\"grid grid-cols-2 gap-4 text-sm\">\n      <div>\n        <span class=\"font-medium text-gray-600\">Cliente:</span>\n        <span class=\"ml-2\">{{ data.cliente.cliente }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">No. Pedido:</span>\n        <span class=\"ml-2\">{{ data.cliente.ndPedido }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Proceso:</span>\n        <span class=\"ml-2\">{{ data.cliente.proceso }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Fase Actual:</span>\n        <span class=\"ml-2\">{{ data.cliente.fase }}</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Formulario -->\n  <form (ngSubmit)=\"onConfirmar()\" #cancelForm=\"ngForm\">\n    <div class=\"space-y-4\">\n      <!-- Motivo -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Motivo de Cancelación</mat-label>\n        <mat-select \n          [(ngModel)]=\"motivoSeleccionado\" \n          name=\"motivo\"\n          required\n          [disabled]=\"loadingMotivos\">\n          \n          <mat-option *ngIf=\"loadingMotivos\" value=\"\" disabled>\n            <div class=\"flex items-center\">\n              <mat-spinner diameter=\"16\" class=\"mr-2\"></mat-spinner>\n              Cargando motivos...\n            </div>\n          </mat-option>\n          \n          <mat-option *ngIf=\"!loadingMotivos && motivos.length === 0\" value=\"\" disabled>\n            No hay motivos disponibles\n          </mat-option>\n          \n          <mat-option *ngFor=\"let motivo of motivos\" [value]=\"motivo.Id\">\n            {{ motivo.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-hint>Selecciona el motivo por el cual se cancela el pedido</mat-hint>\n        <mat-error *ngIf=\"!motivoSeleccionado && !loadingMotivos\">Debes seleccionar un motivo de cancelación</mat-error>\n      </mat-form-field>\n\n      <!-- Comentario -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Comentario</mat-label>\n        <textarea \n          matInput \n          [(ngModel)]=\"comentario\" \n          name=\"comentario\"\n          required\n          rows=\"4\"\n          placeholder=\"Describe los detalles de la cancelación...\"\n          maxlength=\"500\">\n        </textarea>\n        <mat-hint>{{ comentario.length }}/500 caracteres</mat-hint>\n        <mat-error *ngIf=\"!comentario.trim()\">Debes escribir un comentario explicando la cancelación</mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- Botones -->\n    <div class=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancelar()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      \n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"warn\"\n        [disabled]=\"!isFormValid || loading || loadingMotivos\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"16\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\" class=\"mr-2\">cancel</mat-icon>\n        {{ loading ? 'Procesando...' : 'Confirmar Cancelación' }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nexport interface EliminarPedidoData {\n  cliente: any;\n}\n\nexport interface EliminarPedidoResult {\n  confirmado: boolean;\n}\n\n@Component({\n  selector: 'app-eliminar-pedido-dialog',\n  templateUrl: './eliminar-pedido-dialog.component.html',\n  styleUrls: ['./eliminar-pedido-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class EliminarPedidoDialogComponent {\n  loading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<EliminarPedidoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EliminarPedidoData,\n    private snackBar: MatSnackBar\n  ) {}\n\n  onCancelar(): void {\n    this.dialogRef.close({ confirmado: false });\n  }\n\n  onConfirmar(): void {\n    this.loading = true;\n\n    // Simular procesamiento\n    setTimeout(() => {\n      this.loading = false;\n      this.dialogRef.close({ confirmado: true });\n    }, 1000);\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center mb-6\">\n    <mat-icon class=\"text-red-600 mr-3\">delete_forever</mat-icon>\n    <h2 class=\"text-xl font-semibold text-gray-800\">Eliminar Pedido</h2>\n  </div>\n\n  <!-- Información del cliente -->\n  <div class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n    <h3 class=\"text-sm font-medium text-red-700 mb-2\">⚠️ Advertencia: Acción Irreversible</h3>\n    <div class=\"grid grid-cols-2 gap-4 text-sm\">\n      <div>\n        <span class=\"font-medium text-gray-600\">Cliente:</span>\n        <span class=\"ml-2\">{{ data.cliente.cliente }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">No. Pedido:</span>\n        <span class=\"ml-2\">{{ data.cliente.ndPedido }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Proceso:</span>\n        <span class=\"ml-2\">{{ data.cliente.proceso }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Fase Actual:</span>\n        <span class=\"ml-2\">{{ data.cliente.fase }}</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Mensaje de confirmación -->\n  <div class=\"bg-gray-50 rounded-lg p-4 mb-6\">\n    <p class=\"text-sm text-gray-700 mb-2\">\n      <strong>¿Estás seguro de que deseas eliminar este pedido?</strong>\n    </p>\n    <p class=\"text-sm text-gray-600\">\n      Esta acción eliminará permanentemente:\n    </p>\n    <ul class=\"text-sm text-gray-600 mt-2 ml-4 list-disc\">\n      <li>El registro del pedido en la tabla File</li>\n      <li>Todos los documentos asociados (document_by_file)</li>\n      <li>Toda la información relacionada</li>\n    </ul>\n    <p class=\"text-sm text-red-600 font-medium mt-3\">\n      ⚠️ Esta acción no se puede deshacer.\n    </p>\n  </div>\n\n  <!-- Botones -->\n  <div class=\"flex justify-end gap-3\">\n    <button \n      type=\"button\" \n      mat-button \n      (click)=\"onCancelar()\"\n      [disabled]=\"loading\">\n      Cancelar\n    </button>\n    \n    <button \n      type=\"button\" \n      mat-raised-button \n      color=\"warn\"\n      (click)=\"onConfirmar()\"\n      [disabled]=\"loading\">\n      <mat-spinner *ngIf=\"loading\" diameter=\"16\" class=\"mr-2\"></mat-spinner>\n      <mat-icon *ngIf=\"!loading\" class=\"mr-2\">delete_forever</mat-icon>\n      {{ loading ? 'Eliminando...' : 'Confirmar Eliminación' }}\n    </button>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FileExtraordinaryReasonService, FileExtraordinaryReason } from '../../../../core/services/file-extraordinary-reason.service';\n\nexport interface ExcepcionPedidoData {\n  cliente: any;\n}\n\nexport interface ExcepcionPedidoResult {\n  motivoId: number;\n  comentario: string;\n}\n\n@Component({\n  selector: 'app-excepcion-pedido-dialog',\n  templateUrl: './excepcion-pedido-dialog.component.html',\n  styleUrls: ['./excepcion-pedido-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class ExcepcionPedidoDialogComponent implements OnInit {\n  motivos: FileExtraordinaryReason[] = [];\n  motivoSeleccionado: number | null = null;\n  comentario: string = '';\n  loading = false;\n  loadingMotivos = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ExcepcionPedidoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ExcepcionPedidoData,\n    private fileExtraordinaryReasonService: FileExtraordinaryReasonService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.cargarMotivos();\n  }\n\n  cargarMotivos(): void {\n    this.loadingMotivos = true;\n    \n    // Cargar motivos extraordinarios con IdTypeReason = 1 (motivos de excepción)\n    this.fileExtraordinaryReasonService.getFileExtraordinaryReasons({ \n      id_type_reason: 1,\n      limit: 1000 // Obtener todos los motivos de excepción\n    }).subscribe({\n      next: (response) => {\n        this.motivos = response.data.file_extraordinary_reasons;\n        this.loadingMotivos = false;\n        console.log('Motivos extraordinarios de excepción cargados:', this.motivos);\n      },\n      error: (error) => {\n        console.error('Error cargando motivos extraordinarios de excepción:', error);\n        this.snackBar.open('Error al cargar los motivos de excepción', 'Error', { duration: 3000 });\n        this.loadingMotivos = false;\n      }\n    });\n  }\n\n  /**\n   * Verificar si el formulario es válido para habilitar el botón\n   */\n  get isFormValid(): boolean {\n    return this.motivoSeleccionado !== null && \n           this.motivoSeleccionado !== undefined && \n           this.comentario.trim().length > 0;\n  }\n\n  onCancelar(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirmar(): void {\n    if (!this.motivoSeleccionado) {\n      this.snackBar.open('Por favor selecciona un motivo', 'Error', { duration: 3000 });\n      return;\n    }\n\n    if (!this.comentario.trim()) {\n      this.snackBar.open('Por favor escribe un comentario', 'Error', { duration: 3000 });\n      return;\n    }\n\n    this.loading = true;\n\n    // Simular procesamiento\n    setTimeout(() => {\n      this.loading = false;\n      this.dialogRef.close({\n        motivoId: this.motivoSeleccionado,\n        comentario: this.comentario.trim()\n      });\n    }, 1000);\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center mb-6\">\n    <mat-icon class=\"text-orange-600 mr-3\">warning</mat-icon>\n    <h2 class=\"text-xl font-semibold text-gray-800\">Excepción en el Pedido</h2>\n  </div>\n\n  <!-- Información del cliente -->\n  <div class=\"bg-gray-50 rounded-lg p-4 mb-6\">\n    <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Información del Pedido</h3>\n    <div class=\"grid grid-cols-2 gap-4 text-sm\">\n      <div>\n        <span class=\"font-medium text-gray-600\">Cliente:</span>\n        <span class=\"ml-2\">{{ data.cliente.cliente }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">No. Pedido:</span>\n        <span class=\"ml-2\">{{ data.cliente.ndPedido }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Proceso:</span>\n        <span class=\"ml-2\">{{ data.cliente.proceso }}</span>\n      </div>\n      <div>\n        <span class=\"font-medium text-gray-600\">Fase Actual:</span>\n        <span class=\"ml-2\">{{ data.cliente.fase }}</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Formulario -->\n  <form (ngSubmit)=\"onConfirmar()\" #exceptionForm=\"ngForm\">\n    <div class=\"space-y-4\">\n      <!-- Motivo -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Motivo de Excepción</mat-label>\n        <mat-select \n          [(ngModel)]=\"motivoSeleccionado\" \n          name=\"motivo\"\n          required\n          [disabled]=\"loadingMotivos\">\n          \n          <mat-option *ngIf=\"loadingMotivos\" value=\"\" disabled>\n            <div class=\"flex items-center\">\n              <mat-spinner diameter=\"16\" class=\"mr-2\"></mat-spinner>\n              Cargando motivos...\n            </div>\n          </mat-option>\n          \n          <mat-option *ngIf=\"!loadingMotivos && motivos.length === 0\" value=\"\" disabled>\n            No hay motivos disponibles\n          </mat-option>\n          \n          <mat-option *ngFor=\"let motivo of motivos\" [value]=\"motivo.Id\">\n            {{ motivo.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-hint>Selecciona el motivo por el cual se crea la excepción</mat-hint>\n        <mat-error *ngIf=\"!motivoSeleccionado && !loadingMotivos\">Debes seleccionar un motivo de excepción</mat-error>\n      </mat-form-field>\n\n      <!-- Comentario -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Comentario</mat-label>\n        <textarea \n          matInput \n          [(ngModel)]=\"comentario\" \n          name=\"comentario\"\n          required\n          rows=\"4\"\n          placeholder=\"Describe los detalles de la excepción...\"\n          maxlength=\"500\">\n        </textarea>\n        <mat-hint>{{ comentario.length }}/500 caracteres</mat-hint>\n        <mat-error *ngIf=\"!comentario.trim()\">Debes escribir un comentario explicando la excepción</mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- Botones -->\n    <div class=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancelar()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      \n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"accent\"\n        [disabled]=\"!isFormValid || loading || loadingMotivos\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"16\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\" class=\"mr-2\">warning</mat-icon>\n        {{ loading ? 'Procesando...' : 'Confirmar Excepción' }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CancelarPedidoDialogComponent, CancelarPedidoData, CancelarPedidoResult } from './cancelar-pedido-dialog/cancelar-pedido-dialog.component';\nimport { ExcepcionPedidoDialogComponent, ExcepcionPedidoData, ExcepcionPedidoResult } from './excepcion-pedido-dialog/excepcion-pedido-dialog.component';\nimport { EliminarPedidoDialogComponent, EliminarPedidoData, EliminarPedidoResult } from './eliminar-pedido-dialog/eliminar-pedido-dialog.component';\nimport { CambiarEstatusDialogComponent, CambiarEstatusData, CambiarEstatusResult } from './cambiar-estatus-dialog/cambiar-estatus-dialog.component';\nimport { VerDocumentoDialogComponent } from './ver-documento-dialog/ver-documento-dialog.component';\nimport { AprobarDocumentoDialogComponent, AprobarDocumentoData, AprobarDocumentoResult } from './aprobar-documento-dialog/aprobar-documento-dialog.component';\nimport { FASES_CATALOG, CatalogItem } from '../../../core/constants/catalogs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { Subject, takeUntil, catchError, of, timeout } from 'rxjs';\nimport { ValidacionService, Cliente, Documento, FiltrosValidacion } from './validacion.service';\nimport { DefaultAgencyService, Agencia } from '../../../core/services/default-agency.service';\n\n@Component({\n  selector: 'vex-validacion',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    ScrollingModule,\n    VerDocumentoDialogComponent,\n    AprobarDocumentoDialogComponent\n  ],\n  templateUrl: './validacion.component.html',\n  styleUrl: './validacion.component.scss'\n})\nexport class ValidacionComponent implements OnInit, OnDestroy, AfterViewInit {\n  private destroy$ = new Subject<void>();\n\n  // Estado del componente\n  loading = false;\n  loadingAgencias = false;\n  loadingProcesos = false; // Specific loading state for processes\n  error = '';\n\n  // Filtros principales\n  selectedAgency: number | null = null;\n  selectedProcess: number | null = null;\n  selectedFase: string = '';\n  showCancelledOrders: boolean = false;\n\n  // Datos de filtros disponibles\n  agencias: any[] = [];\n  procesos: any[] = [];\n  fases: CatalogItem[] = FASES_CATALOG;\n\n  // Tabla de clientes\n  clientesDisplayedColumns: string[] = [\n    'ndCliente', 'ndPedido', 'cliente', 'proceso', 'operacion', 'fase', 'fechaLiberacion', 'registro', 'acciones'\n  ];\n  clientesDataSource = new MatTableDataSource<any>([]);\n  \n  // Paginación\n  pageSize = 7;\n  pageSizeOptions = [5, 7, 10, 25, 50];\n  currentPage = 0;\n  totalRecords = 0;\n  allClientes: any[] = []; // Todos los clientes para paginación local\n  clientesOriginales: any[] = []; // Copia de respaldo de todos los clientes originales\n\n  // Tabla de documentos\n  documentosDisplayedColumns: string[] = [\n    'proceso', 'fase', 'documento', 'estatus', 'ver', 'validar', \n    'eliminar', 'requerido', 'requiereExpiracion', 'fecha', 'fechaExpiracion', 'comentario', 'asignado'\n  ];\n  documentosDataSource: any[] = [];\n  \n  // Cliente seleccionado\n  selectedCliente: any = null;\n\n  // Búsqueda\n  searchTerm: string = '';\n\n  // Verificar si el usuario es gerente o administrador\n  get isManagerOrAdmin(): boolean {\n    // Aquí deberías obtener el rol del usuario desde tu servicio de autenticación\n    // Por ahora retorno true para mostrar la opción, pero deberías implementar la lógica real\n    const userRole = this.getCurrentUserRole(); // Implementar esta función\n    return userRole === 'gerente' || userRole === 'administrador';\n  }\n\n  // Método auxiliar para el tooltip de fecha de expiración\n  getFechaExpiracionTooltip(fechaExpiracion: string | null): string {\n    return fechaExpiracion ? fechaExpiracion : '';\n  }\n\n\n  // Métodos para las acciones del menú\n  onDescargarArchivo(cliente: any): void {\n    console.log('Descargar archivo para cliente:', cliente);\n    // Implementar lógica de descarga\n    this.snackBar.open(`Descargando archivo para ${cliente.cliente}`, 'Cerrar', { duration: 3000 });\n  }\n\n  /**\n   * Validar documento - abrir dialog para aprobar/rechazar\n   */\n  onValidarDocumento(documento: any): void {\n    console.log('Validar documento:', documento);\n    \n    // Verificar que el estatus actual sea \"3\"\n    if (documento.idEstatus !== '3') {\n      this.snackBar.open('Solo se pueden validar documentos con estatus listo para validar', 'Cerrar', { duration: 3000 });\n      return;\n    }\n\n    // Crear dialog para aprobar/rechazar documento\n    const dialogData: AprobarDocumentoData = {\n      documento: documento\n    };\n\n    const dialogRef = this.dialog.open(AprobarDocumentoDialogComponent, {\n      width: '600px',\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result: AprobarDocumentoResult) => {\n      if (result) {\n        console.log('Resultado del dialog:', result);\n        this.procesarAprobacionDocumento(documento, result);\n      }\n    });\n  }\n\n  /**\n   * Ver documento - mostrar información del documento y validar si estatus es \"2\"\n   */\n  onVerDocumento(documento: any): void {\n    console.log('Ver documento:', documento);\n    \n    // Si el estatus es \"2\", validar el documento automáticamente\n    if (documento.idEstatus === '2') {\n      this.validarDocumentoInterno(documento);\n      return;\n    }\n    \n    // Crear un dialog para mostrar la información del documento\n    const dialogRef = this.dialog.open(VerDocumentoDialogComponent, {\n      width: '500px',\n      data: {\n        documento: documento\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log('Dialog cerrado:', result);\n      }\n    });\n  }\n\n  /**\n   * Procesar aprobación/rechazo de documento\n   */\n  private procesarAprobacionDocumento(documento: any, resultado: AprobarDocumentoResult): void {\n    console.log('Procesando aprobación de documento:', documento, resultado);\n    \n    const nuevoEstatus = resultado.aprobado ? 4 : 5; // 4 = Aprobado, 5 = Rechazado\n    \n    this.validacionService.aprobarDocumento(documento.idDocumentByFile, nuevoEstatus, resultado.comentario, resultado.fechaExpiracion)\n      .pipe(\n        takeUntil(this.destroy$),\n        timeout(10000)\n      )\n      .subscribe({\n        next: (response) => {\n          console.log('✅ Documento procesado exitosamente:', response);\n          const mensaje = resultado.aprobado ? 'Documento aprobado exitosamente' : 'Documento rechazado exitosamente';\n          this.snackBar.open(mensaje, 'Cerrar', { duration: 3000 });\n          \n          // Recargar documentos para reflejar el cambio\n          if (this.selectedCliente) {\n            this.cargarDocumentosCliente(this.selectedCliente.idFile);\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error procesando documento:', error);\n          this.snackBar.open(\n            `Error al procesar el documento: ${error.message || 'Error desconocido'}`, \n            'Cerrar', \n            { duration: 5000 }\n          );\n        }\n      });\n  }\n\n  /**\n   * Método interno para preparar documento (reutilizable)\n   */\n  private validarDocumentoInterno(documento: any): void {\n    console.log('Preparando documento desde botón Ver:', documento);\n    \n    this.validacionService.prepararDocumento(documento.idDocumentByFile)\n      .pipe(\n        takeUntil(this.destroy$),\n        timeout(10000)\n      )\n      .subscribe({\n        next: (response) => {\n          console.log('✅ Documento preparado exitosamente desde botón Ver:', response);\n          this.snackBar.open('Documento preparado para validación exitosamente', 'Cerrar', { duration: 3000 });\n          \n          // Recargar documentos para reflejar el cambio\n          if (this.selectedCliente) {\n            this.cargarDocumentosCliente(this.selectedCliente.idFile);\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error preparando documento desde botón Ver:', error);\n          this.snackBar.open(\n            `Error al preparar el documento: ${error.message || 'Error desconocido'}`, \n            'Cerrar', \n            { duration: 5000 }\n          );\n        }\n      });\n  }\n\n  // Método para prevenir la propagación del evento en el botón de acciones\n  onActionsClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  // Método para manejar el toggle de pedidos cancelados\n  onToggleCancelledOrders(): void {\n    console.log('🔄 ValidacionComponent - Toggle pedidos cancelados:', this.showCancelledOrders);\n    this.cargarClientes();\n  }\n\n  onCancelar(cliente: any): void {\n    console.log('Cancelar para cliente:', cliente);\n    \n    const dialogData: CancelarPedidoData = {\n      cliente: cliente\n    };\n\n    const dialogRef = this.dialog.open(CancelarPedidoDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe((result: CancelarPedidoResult) => {\n      if (result) {\n        console.log('Resultado de cancelación:', result);\n        this.procesarCancelacion(cliente, result);\n      }\n    });\n  }\n\n  private procesarCancelacion(cliente: any, result: CancelarPedidoResult): void {\n    console.log('Procesando cancelación:', {\n      cliente: cliente,\n      motivoId: result.motivoId,\n      comentario: result.comentario\n    });\n\n    // Llamar al servicio para cancelar el pedido\n    this.validacionService.cancelarPedido(\n      cliente.idFile, \n      result.motivoId, \n      result.comentario\n    ).subscribe({\n      next: (response) => {\n        console.log('Pedido cancelado exitosamente:', response);\n        this.snackBar.open(\n          `Pedido ${cliente.ndPedido} cancelado exitosamente`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n        \n        // Recargar los datos para reflejar el cambio\n        this.cargarClientes();\n      },\n      error: (error) => {\n        console.error('Error cancelando pedido:', error);\n        this.snackBar.open(\n          `Error al cancelar el pedido: ${error.message || 'Error desconocido'}`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n      }\n    });\n  }\n\n  onExcepcion(cliente: any): void {\n    console.log('Excepción para cliente:', cliente);\n\n    const dialogData: ExcepcionPedidoData = {\n      cliente: cliente\n    };\n\n    const dialogRef = this.dialog.open(ExcepcionPedidoDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe((result: ExcepcionPedidoResult) => {\n      if (result) {\n        console.log('Resultado de excepción:', result);\n        this.procesarExcepcion(cliente, result);\n      }\n    });\n  }\n\n  private procesarExcepcion(cliente: any, result: ExcepcionPedidoResult): void {\n    console.log('Procesando excepción:', {\n      cliente: cliente,\n      motivoId: result.motivoId,\n      comentario: result.comentario\n    });\n\n    // Llamar al servicio para crear la excepción\n    this.validacionService.excepcionPedido(\n      cliente.idFile, \n      result.motivoId, \n      result.comentario\n    ).subscribe({\n      next: (response) => {\n        console.log('Excepción creada exitosamente:', response);\n        this.snackBar.open(\n          `Excepción creada para el pedido ${cliente.ndPedido}`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n        \n        // Recargar los datos para reflejar el cambio\n        this.cargarClientes();\n      },\n      error: (error) => {\n        console.error('Error creando excepción:', error);\n        this.snackBar.open(\n          `Error al crear la excepción: ${error.message || 'Error desconocido'}`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n      }\n    });\n  }\n\n  onAdministrar(cliente: any): void {\n    console.log('Administrar para cliente:', cliente);\n    // Este método ya no se usa directamente, ahora abre el submenú\n  }\n\n  onEliminar(cliente: any): void {\n    console.log('Eliminar para cliente:', cliente);\n\n    const dialogData: EliminarPedidoData = {\n      cliente: cliente\n    };\n\n    const dialogRef = this.dialog.open(EliminarPedidoDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe((result: EliminarPedidoResult) => {\n      if (result && result.confirmado) {\n        console.log('Confirmación de eliminación:', result);\n        this.procesarEliminacion(cliente);\n      }\n    });\n  }\n\n  private procesarEliminacion(cliente: any): void {\n    console.log('Procesando eliminación:', cliente);\n\n    // Llamar al servicio para eliminar el pedido\n    this.validacionService.eliminarPedido(cliente.idFile).subscribe({\n      next: (response) => {\n        console.log('Pedido eliminado exitosamente:', response);\n        this.snackBar.open(\n          `Pedido ${cliente.ndPedido} eliminado exitosamente`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n        \n        // Recargar los datos para reflejar el cambio\n        this.cargarClientes();\n      },\n      error: (error) => {\n        console.error('Error eliminando pedido:', error);\n        this.snackBar.open(\n          `Error al eliminar el pedido: ${error.message || 'Error desconocido'}`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n      }\n    });\n  }\n\n  onCambiarEstatus(cliente: any): void {\n    console.log('Cambiar estatus para cliente:', cliente);\n\n    const dialogData: CambiarEstatusData = {\n      cliente: cliente\n    };\n\n    const dialogRef = this.dialog.open(CambiarEstatusDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe((result: CambiarEstatusResult) => {\n      if (result) {\n        console.log('Resultado de cambio de estatus:', result);\n        this.procesarCambioEstatus(cliente, result);\n      }\n    });\n  }\n\n  private procesarCambioEstatus(cliente: any, result: CambiarEstatusResult): void {\n    console.log('Procesando cambio de estatus:', {\n      cliente: cliente,\n      nuevoEstatus: result.nuevoEstatus,\n      nuevoIdCurrentState: result.nuevoIdCurrentState\n    });\n\n    // Llamar al servicio para cambiar el estatus\n    this.validacionService.cambiarEstatus(\n      cliente.idFile, \n      result.nuevoIdCurrentState\n    ).subscribe({\n      next: (response) => {\n        console.log('Estatus cambiado exitosamente:', response);\n        this.snackBar.open(\n          `Estatus del pedido ${cliente.ndPedido} cambiado a ${result.nuevoEstatus}`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n        \n        // Recargar los datos para reflejar el cambio\n        this.cargarClientes();\n      },\n      error: (error) => {\n        console.error('Error cambiando estatus:', error);\n        this.snackBar.open(\n          `Error al cambiar el estatus: ${error.message || 'Error desconocido'}`, \n          'Cerrar', \n          { duration: 5000 }\n        );\n      }\n    });\n  }\n\n  // Método temporal para obtener el rol del usuario\n  private getCurrentUserRole(): string {\n    // Implementar la lógica real para obtener el rol del usuario\n    // Por ahora retorno 'gerente' para mostrar la opción\n    return 'gerente';\n  }\n\n  // Verificar si las opciones de cancelar y excepción están disponibles\n  canCancelOrCreateException(cliente: any): boolean {\n    return cliente.IdCurrentState !== 3; // Liberado\n  }\n\n  // ViewChild para ordenamiento\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private validacionService: ValidacionService,\n    private defaultAgencyService: DefaultAgencyService,\n    private snackBar: MatSnackBar,\n    private dialog: MatDialog\n  ) {\n    console.log('🔧 ValidacionComponent - Constructor ejecutado');\n  }\n\n  ngOnInit() {\n    console.log('🔧 ValidacionComponent - ngOnInit ejecutado');\n    this.cargarAgencias();\n    this.cargarProcesos();\n    this.loadData();\n    \n    // Suscribirse a los cambios de agencia del servicio compartido\n    this.defaultAgencyService.selectedAgency$.subscribe(agenciaId => {\n      if (agenciaId !== null) {\n        this.selectedAgency = agenciaId;\n        console.log('🔄 ValidacionComponent - Agencia actualizada desde servicio:', agenciaId);\n        // Si hay proceso seleccionado, cargar clientes\n        if (this.selectedProcess !== null) {\n          this.cargarClientes();\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngAfterViewInit() {\n    // Configurar ordenamiento después de que la vista esté inicializada\n    console.log('🔧 ValidacionComponent - ngAfterViewInit ejecutado');\n    console.log('🔧 ValidacionComponent - MatSort disponible:', this.sort);\n    console.log('🔧 ValidacionComponent - Tipo de MatSort:', typeof this.sort);\n    console.log('🔧 ValidacionComponent - MatSort propiedades:', Object.keys(this.sort || {}));\n    \n    if (this.sort) {\n      console.log('✅ ValidacionComponent - MatSort configurado correctamente');\n      console.log('🔧 ValidacionComponent - Configurando suscripción a sortChange...');\n      \n      this.sort.sortChange.subscribe((sortEvent) => {\n        console.log('🔄 ValidacionComponent - Evento de ordenamiento detectado:', sortEvent);\n        console.log('🔧 ValidacionComponent - Evento completo:', JSON.stringify(sortEvent));\n        this.aplicarOrdenamiento();\n      });\n      \n      console.log('✅ ValidacionComponent - Suscripción a sortChange configurada');\n      \n      // Conectar MatSort al MatTableDataSource\n      this.clientesDataSource.sort = this.sort;\n      console.log('✅ ValidacionComponent - MatSort conectado al MatTableDataSource');\n      \n      // Configurar ordenamiento automático\n      this.clientesDataSource.sortingDataAccessor = (item, property) => {\n        switch (property) {\n          case 'ndCliente': return item.idFile;\n          case 'ndPedido': return item.ndPedido;\n          case 'cliente': return item.cliente;\n          case 'proceso': return item.proceso;\n          case 'operacion': return item.operacion;\n          case 'fase': return item.fase;\n          case 'registro': return new Date(item.registro);\n          case 'fechaLiberacion': return new Date(item.fechaLiberacion);\n          default: return item[property];\n        }\n      };\n      \n    } else {\n      console.error('❌ ValidacionComponent - MatSort no está disponible');\n    }\n  }\n\n  /**\n   * Manejar la selección de un cliente de la tabla superior\n   */\n  onClienteSelect(cliente: any): void {\n    console.log('🔍 ValidacionComponent - Cliente seleccionado:', cliente);\n    \n    // Guardar el cliente seleccionado\n    this.selectedCliente = cliente;\n    \n    // Cargar los documentos del archivo específico\n    this.cargarDocumentosCliente(cliente.idFile);\n  }\n\n  /**\n   * Seleccionar cliente programáticamente (para selección automática)\n   */\n  private seleccionarCliente(cliente: any): void {\n    console.log('🤖 ValidacionComponent - Selección automática del primer cliente:', cliente);\n    this.onClienteSelect(cliente);\n  }\n\n  /**\n   * Limpiar la selección del cliente\n   */\n  clearSelection(): void {\n    console.log('🧹 ValidacionComponent - Limpiando selección de cliente');\n    this.selectedCliente = null;\n    this.documentosDataSource = [];\n  }\n\n  /**\n   * Cargar documentos de un archivo específico\n   */\n  private cargarDocumentosCliente(idFile: number): void {\n    console.log('📄 ValidacionComponent - Cargando documentos para archivo:', idFile);\n    this.loading = true;\n    \n    this.validacionService.cargarDocumentos(idFile)\n      .pipe(\n        takeUntil(this.destroy$),\n        timeout(10000)\n      )\n      .subscribe({\n        next: (documentos) => {\n          console.log('📥 ValidacionComponent - Documentos recibidos:', documentos);\n          this.documentosDataSource = documentos;\n          this.loading = false;\n        },\n        error: (error) => {\n          console.error('❌ ValidacionComponent - Error cargando documentos:', error);\n          this.mostrarError('Error cargando documentos del archivo');\n          this.documentosDataSource = [];\n          this.loading = false;\n        }\n      });\n  }\n\n  /**\n   * Cargar procesos desde la API\n   */\n  private cargarProcesos() {\n    console.log('🔄 ValidacionComponent - Iniciando carga de procesos...');\n    this.loadingProcesos = true;\n    \n    this.validacionService.cargarProcesos()\n      .pipe(\n        takeUntil(this.destroy$),\n        timeout(10000), // 10 segundos de timeout\n        catchError(error => {\n          if (error.name === 'TimeoutError') {\n            console.error('⏰ ValidacionComponent - Timeout cargando procesos');\n            this.mostrarError('Timeout: La carga de procesos tardó demasiado');\n          } else {\n            console.error('❌ ValidacionComponent - Error cargando procesos:', error);\n            this.mostrarError('Error cargando procesos');\n          }\n          this.procesos = [];\n          this.loadingProcesos = false;\n          return of([]);\n        })\n      )\n      .subscribe({\n        next: (procesos) => {\n          console.log('📥 ValidacionComponent - Respuesta de procesos recibida:', procesos);\n          \n          // Verificar que procesos sea un array\n          if (!Array.isArray(procesos)) {\n            console.error('❌ ValidacionComponent - La respuesta no es un array:', procesos);\n            this.procesos = [];\n            this.loadingProcesos = false;\n            return;\n          }\n          \n          console.log('📊 ValidacionComponent - Total de procesos recibidos:', procesos.length);\n          \n          // Debug: mostrar el estado de cada proceso\n          procesos.forEach((proceso, index) => {\n            console.log(`🔍 Proceso ${index}:`, {\n              id: proceso.Id,\n              name: proceso.Name,\n              enabled: proceso.Enabled,\n              enabledType: typeof proceso.Enabled,\n              enabledString: String(proceso.Enabled),\n              enabledBoolean: Boolean(proceso.Enabled),\n              enabledNumber: Number(proceso.Enabled),\n              allFields: proceso\n            });\n          });\n          \n          // TEMPORAL: Mostrar todos los procesos para debugging\n          this.procesos = procesos.filter(proceso => proceso);\n          \n          // ORIGINAL: Mostrar solo procesos habilitados (Enabled = 1)\n          // this.procesos = procesos.filter(proceso => proceso && proceso.Enabled === 1);\n          \n          console.log('✅ ValidacionComponent - Procesos mostrados (todos):', this.procesos);\n          console.log('📊 ValidacionComponent - Total de procesos mostrados:', this.procesos.length);\n          \n          // Seleccionar el primer proceso por defecto si hay alguno\n          if (this.procesos.length > 0) {\n            this.selectedProcess = this.procesos[0].Id;\n            console.log('🎯 ValidacionComponent - Proceso seleccionado por defecto:', this.selectedProcess);\n            \n            // Si ya hay agencia seleccionada, cargar clientes automáticamente\n            if (this.selectedAgency !== null) {\n              console.log('🔄 ValidacionComponent - Cargando clientes automáticamente con proceso seleccionado');\n              this.cargarClientes();\n            }\n          } else {\n            console.warn('⚠️ ValidacionComponent - No se encontraron procesos habilitados');\n            this.selectedProcess = null;\n          }\n          \n          this.loadingProcesos = false;\n        },\n        error: (error) => {\n          console.error('❌ ValidacionComponent - Error en subscribe de procesos:', error);\n          this.procesos = [];\n          this.selectedProcess = null;\n          this.loadingProcesos = false;\n        }\n      });\n  }\n\n  /**\n   * Cargar agencias desde la API usando el servicio compartido\n   */\n  private cargarAgencias() {\n    console.log('🔄 ValidacionComponent - Iniciando carga de agencias...');\n    this.loadingAgencias = true;\n    \n    this.defaultAgencyService.obtenerAgencias()\n      .pipe(\n        takeUntil(this.destroy$),\n        timeout(10000) // 10 segundos de timeout\n      )\n      .subscribe({\n        next: (agencias) => {\n          console.log('📥 ValidacionComponent - Agencias cargadas desde servicio compartido:', agencias);\n          this.agencias = agencias;\n          this.loadingAgencias = false;\n          \n          // Esperar un momento para asegurar que las agencias estén disponibles en el servicio\n          setTimeout(() => {\n            // Establecer agencia predeterminada usando el servicio compartido\n            this.defaultAgencyService.establecerAgenciaPredeterminada(true).subscribe({\n              next: (agenciaId) => {\n                if (agenciaId) {\n                  console.log('✅ ValidacionComponent - Agencia predeterminada establecida:', agenciaId);\n                } else {\n                  console.warn('⚠️ ValidacionComponent - No se pudo establecer agencia predeterminada');\n                }\n              },\n              error: (error) => {\n                console.error('❌ ValidacionComponent - Error estableciendo agencia predeterminada:', error);\n                // Si falla, intentar seleccionar la primera agencia disponible\n                if (this.agencias.length > 0) {\n                  const primeraAgencia = this.agencias[0];\n                  console.log('🔄 ValidacionComponent - Seleccionando primera agencia disponible como fallback:', primeraAgencia);\n                  this.selectedAgency = primeraAgencia.Id;\n                  this.defaultAgencyService.seleccionarAgencia(primeraAgencia.Id);\n                }\n              }\n            });\n          }, 100);\n        },\n        error: (error) => {\n          console.error('❌ ValidacionComponent - Error cargando agencias:', error);\n          this.mostrarError('Error cargando agencias');\n          this.agencias = [];\n          this.selectedAgency = null;\n          this.loadingAgencias = false;\n        }\n      });\n  }\n\n  /**\n   * Recargar todos los datos del componente\n   */\n  recargarDatos() {\n    console.log('🔄 ValidacionComponent - Recargando todos los datos...');\n    \n    // Resetear estados de carga\n    this.loading = true;\n    this.loadingAgencias = true;\n    this.loadingProcesos = true;\n    \n    // Limpiar datos existentes\n    this.allClientes = [];\n    this.clientesOriginales = [];\n    this.clientesDataSource.data = [];\n    this.procesos = [];\n    this.selectedAgency = null;\n    this.selectedProcess = null;\n    this.selectedFase = '';\n    this.searchTerm = '';\n    \n    // Recargar agencias y procesos\n    this.cargarAgencias();\n    this.cargarProcesos();\n    \n    // Limpiar selección de cliente y documentos\n    this.clearSelection();\n    \n    // Mostrar mensaje de recarga\n    this.snackBar.open('Recargando datos...', 'Cerrar', {\n      duration: 2000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n\n  loadData() {\n    // Los datos se cargarán cuando se seleccione agencia y proceso\n    console.log('🔄 ValidacionComponent - loadData() llamado, esperando selección de agencia y proceso');\n  }\n\n  // Métodos para estadísticas\n  getIntegradosCount(): number {\n    return this.clientesDataSource.data.filter(item => item.integracion).length;\n  }\n\n  getPendientesCount(): number {\n    return this.clientesDataSource.data.filter(item => !item.integracion).length;\n  }\n\n  // Métodos de acción\n  validarDocumento(id: number) {\n    console.log('Validando documento:', id);\n    // Implementar lógica de validación\n  }\n\n  rechazarDocumento(id: number) {\n    console.log('Rechazando documento:', id);\n    // Implementar lógica de rechazo\n  }\n\n  descargarArchivo() {\n    console.log('Descargando archivo...');\n    // Implementar lógica de descarga\n  }\n\n  cancelarProceso() {\n    console.log('Cancelando proceso...');\n    // Implementar lógica de cancelación\n  }\n\n  crearExcepcion() {\n    console.log('Creando excepción...');\n    // Implementar lógica de excepción\n  }\n\n  /**\n   * Manejar cambio en la selección de agencia\n   */\n  onAgenciaChange() {\n    console.log('🏢 ValidacionComponent - Agencia seleccionada:', this.selectedAgency);\n    \n    // Limpiar filtros y búsqueda cuando se cambia la agencia\n    this.selectedFase = '';\n    this.searchTerm = '';\n    \n    // Actualizar la agencia en el servicio compartido\n    if (this.selectedAgency !== null) {\n      this.defaultAgencyService.seleccionarAgencia(this.selectedAgency);\n    }\n    // Si ya hay un proceso seleccionado, cargar clientes\n    if (this.selectedProcess) {\n      this.cargarClientes();\n    }\n    // Limpiar selección de cliente y documentos\n    this.clearSelection();\n  }\n\n  /**\n   * Manejar cambio en la selección de proceso\n   */\n  onProcesoChange() {\n    console.log('⚙️ ValidacionComponent - Proceso seleccionado:', this.selectedProcess);\n    \n    // Limpiar filtros y búsqueda cuando se cambia el proceso\n    this.selectedFase = '';\n    this.searchTerm = '';\n    \n    if (this.selectedProcess !== null) {\n      this.cargarClientes();\n    }\n    // Limpiar selección de cliente y documentos\n    this.clearSelection();\n  }\n\n  /**\n   * Manejar cambio en la selección de fase\n   */\n  onFaseChange(): void {\n    console.log('🔄 ValidacionComponent - Fase seleccionada:', this.selectedFase);\n    console.log('🔄 ValidacionComponent - Tipo de fase seleccionada:', typeof this.selectedFase);\n    console.log('🔄 ValidacionComponent - Clientes originales disponibles:', this.clientesOriginales.length);\n    console.log('🔄 ValidacionComponent - Búsqueda activa:', this.searchTerm);\n    \n    // Si hay búsqueda activa, aplicar búsqueda (que incluye filtro de fase)\n    if (this.searchTerm && this.searchTerm.trim() !== '') {\n      console.log('🔄 ValidacionComponent - Aplicando búsqueda con filtro de fase');\n      this.aplicarBusqueda();\n    } else {\n      // Solo aplicar filtro de fase\n      console.log('🔄 ValidacionComponent - Aplicando solo filtro de fase');\n      this.aplicarFiltroFase();\n    }\n    \n    // Si hay un cliente seleccionado, recargar sus documentos\n    if (this.selectedCliente) {\n      this.cargarDocumentosCliente(this.selectedCliente.idFile);\n    }\n  }\n\n  /**\n   * Aplicar filtro de fase a la tabla de clientes\n   */\n  private aplicarFiltroFase(): void {\n    console.log('🔍 ValidacionComponent - Aplicando filtro de fase:', this.selectedFase);\n    console.log('🔍 ValidacionComponent - Clientes originales:', this.clientesOriginales.length);\n    \n    if (!this.selectedFase || this.selectedFase === '') {\n      console.log('🔍 ValidacionComponent - Sin filtro de fase, restaurando todos los clientes');\n      // Sin filtro, restaurar todos los clientes originales\n      let clientesRestaurados = [...this.clientesOriginales];\n      \n      // Aplicar filtro de cancelados\n      if (this.showCancelledOrders) {\n        // Solo mostrar cancelados\n        clientesRestaurados = clientesRestaurados.filter(cliente => String(cliente.IdCurrentState) === '5');\n        console.log('🔍 ValidacionComponent - Mostrando solo cancelados (sin filtro de fase):', clientesRestaurados.length);\n      } else {\n        // Excluir cancelados\n        clientesRestaurados = clientesRestaurados.filter(cliente => String(cliente.IdCurrentState) !== '5');\n        console.log('🔍 ValidacionComponent - Excluyendo cancelados (sin filtro de fase):', clientesRestaurados.length);\n      }\n      \n      this.allClientes = clientesRestaurados;\n      this.totalRecords = this.allClientes.length;\n      this.currentPage = 0;\n      this.updatePaginatedData();\n      \n      // Seleccionar automáticamente el primer registro si hay clientes\n      if (this.allClientes.length > 0) {\n        this.seleccionarCliente(this.allClientes[0]);\n      } else {\n        this.selectedCliente = null;\n      }\n      return;\n    }\n\n    console.log('🔍 ValidacionComponent - Filtrando clientes por fase:', this.selectedFase);\n    // Filtrar clientes por fase desde los datos originales usando ID\n    const clientesFiltrados = this.clientesOriginales.filter(cliente => {\n      console.log(`🔍 ValidacionComponent - Cliente ${cliente.idFile} - IdCurrentState: ${cliente.IdCurrentState} (tipo: ${typeof cliente.IdCurrentState})`);\n      \n      // Aplicar filtro de cancelados\n      if (this.showCancelledOrders) {\n        // Solo mostrar cancelados\n        if (String(cliente.IdCurrentState) !== '5') {\n          console.log(`🔍 ValidacionComponent - Excluyendo cliente no cancelado ${cliente.idFile} (toggle activado)`);\n          return false;\n        }\n      } else {\n        // Excluir cancelados\n        if (String(cliente.IdCurrentState) === '5') {\n          console.log(`🔍 ValidacionComponent - Excluyendo cliente cancelado ${cliente.idFile} (toggle desactivado)`);\n          return false;\n        }\n      }\n      \n      let resultado = false;\n      switch (this.selectedFase) {\n        case '1':\n          resultado = String(cliente.IdCurrentState) === '1'; // Integración\n          console.log(`🔍 ValidacionComponent - Integración: ${cliente.IdCurrentState} === '1' = ${resultado}`);\n          break;\n        case '2':\n          resultado = String(cliente.IdCurrentState) === '2'; // Liquidación\n          console.log(`🔍 ValidacionComponent - Liquidación: ${cliente.IdCurrentState} === '2' = ${resultado}`);\n          break;\n        case '3':\n          resultado = String(cliente.IdCurrentState) === '3'; // Liberación\n          console.log(`🔍 ValidacionComponent - Liberación: ${cliente.IdCurrentState} === '3' = ${resultado}`);\n          break;\n        case '4':\n          resultado = String(cliente.IdCurrentState) === '4'; // Liberado\n          console.log(`🔍 ValidacionComponent - Liberado: ${cliente.IdCurrentState} === '4' = ${resultado}`);\n          break;\n        case '5':\n          resultado = String(cliente.IdCurrentState) === '5'; // Cancelado\n          console.log(`🔍 ValidacionComponent - Cancelado: ${cliente.IdCurrentState} === '5' = ${resultado}`);\n          break;\n        case '6':\n          resultado = String(cliente.IdCurrentState) === '6'; // Liberado por Excepción\n          console.log(`🔍 ValidacionComponent - Excepción: ${cliente.IdCurrentState} === '6' = ${resultado}`);\n          break;\n        default:\n          resultado = true;\n          console.log(`🔍 ValidacionComponent - Default: ${resultado}`);\n          break;\n      }\n      return resultado;\n    });\n\n    console.log('📊 ValidacionComponent - Clientes filtrados:', clientesFiltrados.length, 'de', this.clientesOriginales.length);\n    \n    // Actualizar los datos filtrados y aplicar paginación\n    this.allClientes = [...clientesFiltrados];\n    this.totalRecords = clientesFiltrados.length;\n    this.currentPage = 0; // Volver a la primera página\n    this.updatePaginatedData(); // Aplicar paginación con el tamaño de página configurado\n    \n    // Seleccionar automáticamente el primer registro filtrado si hay resultados\n    if (clientesFiltrados.length > 0) {\n      this.seleccionarCliente(clientesFiltrados[0]);\n    } else {\n      this.selectedCliente = null;\n    }\n  }\n\n  /**\n   * Cargar clientes desde la API\n   */\n  private cargarClientes() {\n    if (this.selectedAgency === null || this.selectedProcess === null) {\n      console.log('⚠️ ValidacionComponent - No se puede cargar clientes: agencia o proceso no seleccionado');\n      return;\n    }\n\n    console.log('🔄 ValidacionComponent - Cargando clientes para agencia:', this.selectedAgency, 'proceso:', this.selectedProcess);\n    this.loading = true;\n\n    const filtros: FiltrosValidacion = {\n      agencia: this.selectedAgency,\n      proceso: this.selectedProcess,\n      showCancelled: this.showCancelledOrders\n    };\n\n    this.validacionService.cargarClientes(filtros)\n      .pipe(\n        takeUntil(this.destroy$),\n        timeout(10000),\n        catchError(error => {\n          console.error('❌ ValidacionComponent - Error cargando clientes:', error);\n          this.mostrarError('Error cargando clientes');\n          this.clientesDataSource.data = [];\n          this.loading = false;\n          return of([]);\n        })\n      )\n      .subscribe({\n        next: (clientes) => {\n          console.log('✅ ValidacionComponent - Clientes cargados:', clientes);\n          console.log('🔍 ValidacionComponent - Primer cliente (si existe):', clientes.length > 0 ? clientes[0] : 'No hay clientes');\n          console.log('🔍 ValidacionComponent - Campos del primer cliente:', clientes.length > 0 ? Object.keys(clientes[0]) : 'No hay clientes');\n          \n          // Verificar específicamente el campo IdCurrentState\n          if (clientes.length > 0) {\n            console.log('🔍 ValidacionComponent - IdCurrentState del primer cliente:', clientes[0].IdCurrentState);\n            console.log('🔍 ValidacionComponent - Tipo de IdCurrentState:', typeof clientes[0].IdCurrentState);\n            \n            // Mostrar todos los IdCurrentState únicos\n            const estadosUnicos = [...new Set(clientes.map(c => c.IdCurrentState))];\n            console.log('🔍 ValidacionComponent - Estados únicos encontrados:', estadosUnicos);\n          }\n          \n          this.clientesOriginales = [...clientes]; // Guardar copia de respaldo\n          this.allClientes = [...clientes]; // Guardar todos los clientes\n          this.currentPage = 0; // Volver a la primera página\n          \n          // Aplicar filtro de fase si está seleccionado\n          if (this.selectedFase && this.selectedFase !== '') {\n            this.aplicarFiltroFase();\n          } else {\n            // Aplicar filtro de cancelados\n            if (this.showCancelledOrders) {\n              // Solo mostrar cancelados\n              this.allClientes = this.allClientes.filter(cliente => String(cliente.IdCurrentState) === '5');\n              console.log('🔍 ValidacionComponent - Mostrando solo cancelados:', this.allClientes.length);\n            } else {\n              // Excluir cancelados\n              this.allClientes = this.allClientes.filter(cliente => String(cliente.IdCurrentState) !== '5');\n              console.log('🔍 ValidacionComponent - Excluyendo cancelados:', this.allClientes.length);\n            }\n            this.updatePaginatedData(); // Aplicar paginación normal\n          }\n          \n          // Seleccionar automáticamente el primer registro si hay clientes (usar datos filtrados)\n          if (this.allClientes.length > 0) {\n            this.seleccionarCliente(this.allClientes[0]);\n          } else {\n            this.selectedCliente = null;\n          }\n          \n          this.loading = false;\n        },\n        error: (error) => {\n          console.error('❌ ValidacionComponent - Error en subscribe de clientes:', error);\n          this.clientesDataSource.data = [];\n          this.loading = false;\n        }\n      });\n  }\n\n  /**\n   * Mostrar mensaje de error\n   */\n  private mostrarError(mensaje: string) {\n    this.snackBar.open(mensaje, 'Cerrar', {\n      duration: 5000,\n      horizontalPosition: 'end',\n      verticalPosition: 'top',\n      panelClass: ['error-snackbar']\n    });\n  }\n\n  /**\n   * Manejar cambio de página\n   */\n  onPageChange(event: any) {\n    console.log('🔄 ValidacionComponent - Cambio de página:', event);\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    console.log('📊 ValidacionComponent - Nueva página:', this.currentPage, 'Tamaño:', this.pageSize);\n    this.updatePaginatedData();\n  }\n\n  /**\n   * Actualizar datos paginados\n   */\n  private updatePaginatedData() {\n    const startIndex = this.currentPage * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    this.clientesDataSource.data = this.allClientes.slice(startIndex, endIndex);\n    this.totalRecords = this.allClientes.length;\n    \n    // Aplicar ordenamiento si está configurado\n    if (this.sort) {\n      this.clientesDataSource.sort = this.sort;\n    }\n  }\n\n  /**\n   * Cambiar tamaño de página\n   */\n  onPageSizeChange(event: any) {\n    this.pageSize = event.value;\n    this.currentPage = 0; // Volver a la primera página\n    this.updatePaginatedData();\n  }\n\n  /**\n   * Aplicar ordenamiento a los datos\n   */\n  private aplicarOrdenamiento() {\n    console.log('🔄 ValidacionComponent - Aplicando ordenamiento...');\n    console.log('🔧 ValidacionComponent - MatSort disponible:', !!this.sort);\n    console.log('🔧 ValidacionComponent - Total de clientes:', this.allClientes.length);\n    \n    if (!this.sort || !this.allClientes.length) {\n      console.warn('⚠️ ValidacionComponent - No se puede aplicar ordenamiento:', {\n        sort: !!this.sort,\n        clientes: this.allClientes.length\n      });\n      return;\n    }\n\n    const direction = this.sort.direction;\n    const active = this.sort.active;\n    \n    console.log('🔧 ValidacionComponent - Columna activa:', active);\n    console.log('🔧 ValidacionComponent - Dirección:', direction);\n\n    if (direction === '') {\n      console.log('🔄 ValidacionComponent - Sin dirección, actualizando paginación');\n      this.updatePaginatedData();\n      return;\n    }\n\n    console.log('🔄 ValidacionComponent - Iniciando ordenamiento de', this.allClientes.length, 'registros');\n    \n    // Ordenar todos los datos\n    this.allClientes.sort((a, b) => {\n      let aValue = this.getSortValue(a, active);\n      let bValue = this.getSortValue(b, active);\n\n      if (aValue === null || aValue === undefined) aValue = '';\n      if (bValue === null || bValue === undefined) bValue = '';\n\n      if (typeof aValue === 'string') aValue = aValue.toLowerCase();\n      if (typeof bValue === 'string') bValue = bValue.toLowerCase();\n\n      if (aValue < bValue) return direction === 'asc' ? -1 : 1;\n      if (aValue > bValue) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    console.log('✅ ValidacionComponent - Ordenamiento completado');\n    console.log('🔧 ValidacionComponent - Primer registro después del ordenamiento:', this.allClientes[0]);\n    console.log('🔧 ValidacionComponent - Último registro después del ordenamiento:', this.allClientes[this.allClientes.length - 1]);\n\n    // Actualizar datos paginados\n    this.currentPage = 0;\n    this.updatePaginatedData();\n  }\n\n  /**\n   * Obtener valor para ordenamiento de una columna específica\n   */\n  private getSortValue(item: any, column: string): any {\n    switch (column) {\n      case 'ndCliente':\n        return item.idFile;\n      case 'ndPedido':\n        return item.ndPedido;\n      case 'cliente':\n        return item.cliente;\n      case 'proceso':\n        return item.proceso;\n      case 'operacion':\n        return item.operacion;\n      case 'fase':\n        return item.fase;\n      case 'registro':\n        return new Date(item.registro);\n      case 'fechaLiberacion':\n        return new Date(item.fechaLiberacion);\n      default:\n        return item[column];\n    }\n  }\n\n  /**\n   * Método de prueba para verificar que el ordenamiento funciona\n   */\n  probarOrdenamiento() {\n    console.log('🧪 ValidacionComponent - Probando ordenamiento...');\n    console.log('🔧 ValidacionComponent - MatSort disponible:', !!this.sort);\n    console.log('🔧 ValidacionComponent - Total de clientes:', this.allClientes.length);\n    \n    if (this.sort) {\n      // Simular un evento de ordenamiento\n      console.log('🧪 ValidacionComponent - Simulando ordenamiento por ND Cliente ascendente');\n      \n      // Opción 1: Intentar con el método sort\n      try {\n        this.sort.sort({\n          id: 'ndCliente',\n          start: 'asc',\n          disableClear: false\n        });\n        console.log('✅ ValidacionComponent - Método sort() ejecutado');\n      } catch (error) {\n        console.error('❌ ValidacionComponent - Error en sort():', error);\n      }\n      \n      // Opción 2: Llamar directamente al método de ordenamiento\n      console.log('🧪 ValidacionComponent - Llamando directamente a aplicarOrdenamiento()');\n      this.aplicarOrdenamiento();\n      \n    } else {\n      console.error('❌ ValidacionComponent - MatSort no está disponible para la prueba');\n    }\n    \n    // Mostrar información sobre la selección actual\n    if (this.selectedCliente) {\n      console.log('👤 ValidacionComponent - Cliente seleccionado:', this.selectedCliente);\n      console.log('📄 ValidacionComponent - Documentos cargados:', this.documentosDataSource.length);\n      console.log('🔍 ValidacionComponent - Filtros aplicados: File ID:', this.selectedCliente.idFile, 'Pedido ID:', this.selectedCliente.ndPedido);\n    } else {\n      console.log('ℹ️ ValidacionComponent - No hay cliente seleccionado');\n    }\n  }\n\n  /**\n   * Manejar cambio en el término de búsqueda\n   */\n  onSearchChange(): void {\n    console.log('🔍 ValidacionComponent - Término de búsqueda:', this.searchTerm);\n    this.aplicarBusqueda();\n  }\n\n  /**\n   * Limpiar búsqueda\n   */\n  clearSearch(): void {\n    console.log('🧹 ValidacionComponent - Limpiando búsqueda');\n    this.searchTerm = '';\n    this.aplicarBusqueda();\n  }\n\n  /**\n   * Aplicar búsqueda a los datos\n   */\n  private aplicarBusqueda(): void {\n    console.log('🔍 ValidacionComponent - Aplicando búsqueda:', this.searchTerm);\n    \n    if (!this.searchTerm || this.searchTerm.trim() === '') {\n      // Sin búsqueda, aplicar solo filtro de fase si existe\n      if (this.selectedFase && this.selectedFase !== '') {\n        this.aplicarFiltroFase();\n      } else {\n        this.updatePaginatedData();\n      }\n      return;\n    }\n\n    const terminoBusqueda = this.searchTerm.toLowerCase().trim();\n    console.log('🔍 ValidacionComponent - Término de búsqueda normalizado:', terminoBusqueda);\n\n    // Filtrar clientes por término de búsqueda\n    let clientesFiltrados = this.clientesOriginales.filter(cliente => {\n      // Buscar en ID de archivo\n      const idFile = String(cliente.idFile).toLowerCase();\n      if (idFile.includes(terminoBusqueda)) {\n        return true;\n      }\n\n      // Buscar en número de pedido\n      const ndPedido = String(cliente.ndPedido).toLowerCase();\n      if (ndPedido.includes(terminoBusqueda)) {\n        return true;\n      }\n\n      // Buscar en nombre del cliente\n      const nombreCliente = cliente.cliente.toLowerCase();\n      if (nombreCliente.includes(terminoBusqueda)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    console.log('📊 ValidacionComponent - Clientes encontrados en búsqueda:', clientesFiltrados.length);\n\n    // Si hay filtro de fase, aplicarlo también\n    if (this.selectedFase && this.selectedFase !== '') {\n      clientesFiltrados = clientesFiltrados.filter(cliente => {\n        // Aplicar filtro de cancelados\n        if (this.showCancelledOrders) {\n          // Solo mostrar cancelados\n          if (String(cliente.IdCurrentState) !== '5') {\n            return false;\n          }\n        } else {\n          // Excluir cancelados\n          if (String(cliente.IdCurrentState) === '5') {\n            return false;\n          }\n        }\n        \n        switch (this.selectedFase) {\n          case '1':\n            return String(cliente.IdCurrentState) === '1'; // Integración\n          case '2':\n            return String(cliente.IdCurrentState) === '2'; // Liquidación\n          case '3':\n            return String(cliente.IdCurrentState) === '3'; // Liberación\n          case '4':\n            return String(cliente.IdCurrentState) === '4'; // Liberado\n          case '5':\n            return String(cliente.IdCurrentState) === '5'; // Cancelado\n          case '6':\n            return String(cliente.IdCurrentState) === '6'; // Liberado por Excepción\n          default:\n            return true;\n        }\n      });\n      console.log('📊 ValidacionComponent - Clientes después de filtro de fase:', clientesFiltrados.length);\n    } else {\n      // Si no hay filtro de fase, aplicar filtro de cancelados\n      if (this.showCancelledOrders) {\n        // Solo mostrar cancelados\n        clientesFiltrados = clientesFiltrados.filter(cliente => String(cliente.IdCurrentState) === '5');\n        console.log('📊 ValidacionComponent - Mostrando solo cancelados (sin filtro de fase):', clientesFiltrados.length);\n      } else {\n        // Excluir cancelados\n        clientesFiltrados = clientesFiltrados.filter(cliente => String(cliente.IdCurrentState) !== '5');\n        console.log('📊 ValidacionComponent - Excluyendo cancelados (sin filtro de fase):', clientesFiltrados.length);\n      }\n    }\n\n    // Actualizar datos paginados con los resultados de búsqueda\n    this.allClientes = [...clientesFiltrados];\n    this.totalRecords = clientesFiltrados.length;\n    this.currentPage = 0; // Volver a la primera página\n    this.updatePaginatedData();\n  }\n}\n","<div class=\"min-h-screen bg-gray-50 p-2\">\n  <style>\n    /* Ocultar completamente los hints de los combos para que no ocupen espacio */\n    .mat-mdc-form-field-subscript-wrapper,\n    .mat-mdc-form-field-hint-wrapper,\n    .mat-mdc-form-field-hint-spacer,\n    .mat-mdc-form-field-bottom-align {\n      display: none !important;\n      height: 0 !important;\n      min-height: 0 !important;\n      max-height: 0 !important;\n      margin: 0 !important;\n      padding: 0 !important;\n      overflow: hidden !important;\n      visibility: hidden !important;\n      opacity: 0 !important;\n      position: absolute !important;\n      pointer-events: none !important;\n      display: none !important;\n    }\n    \n    /* Asegurar que los campos no tengan espacio residual */\n    .mat-mdc-form-field {\n      margin-bottom: 0 !important;\n      padding-bottom: 0 !important;\n    }\n    \n    /* Reducir el padding interno de los campos */\n    .mat-mdc-form-field-infix {\n      padding-top: 4px !important;\n      padding-bottom: 4px !important;\n      min-height: 16px !important;\n    }\n    \n    /* Cambiar padding de todas las celdas de tabla de py-2 a py-0 */\n    .py-2 {\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n    \n    /* Asegurar que todas las celdas de tabla no tengan padding vertical */\n    th.mat-header-cell,\n    td.mat-cell {\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n    \n    /* Estilos ultra compactos para TODOS los combos del filtro */\n    .filtro-container .mat-mdc-form-field-infix {\n      padding-top: 1px !important;\n      padding-bottom: 1px !important;\n      min-height: 8px !important;\n      height: 8px !important;\n      max-height: 8px !important;\n    }\n    \n    /* Forzar altura en todos los campos del filtro */\n    .filtro-container .mat-mdc-form-field {\n      height: 32px !important;\n      min-height: 32px !important;\n      max-height: 32px !important;\n    }\n    \n    /* Reducir altura del wrapper del campo */\n    .filtro-container .mat-mdc-text-field-wrapper {\n      height: 32px !important;\n      min-height: 32px !important;\n      max-height: 32px !important;\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n    \n    /* Estilos específicos para todos los mat-select dentro del filtro */\n    .filtro-container .mat-mdc-select {\n      height: 24px !important;\n      min-height: 24px !important;\n      max-height: 24px !important;\n      line-height: 24px !important;\n    }\n    \n    /* Reducir altura de las opciones del select */\n    .filtro-container .mat-mdc-option {\n      height: 28px !important;\n      min-height: 28px !important;\n      max-height: 28px !important;\n      line-height: 28px !important;\n    }\n    \n    /* Estilos ultra compactos para el combo de fase */\n    .combo-fase .mat-mdc-form-field-infix {\n      padding-top: 1px !important;\n      padding-bottom: 1px !important;\n      min-height: 8px !important;\n      height: 8px !important;\n      max-height: 8px !important;\n    }\n    \n    .combo-fase .mat-mdc-form-field {\n      height: 32px !important;\n      min-height: 32px !important;\n      max-height: 32px !important;\n    }\n\n    /* Animación de spinner para el botón de recarga */\n    .animate-spin {\n      animation: spin 1s linear infinite;\n    }\n    \n    @keyframes spin {\n      from {\n        transform: rotate(0deg);\n      }\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    \n    .combo-fase .mat-mdc-text-field-wrapper {\n      height: 32px !important;\n      min-height: 32px !important;\n      max-height: 32px !important;\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n    \n    .combo-fase .mat-mdc-select {\n      height: 24px !important;\n      min-height: 24px !important;\n      max-height: 24px !important;\n      line-height: 24px !important;\n    }\n    \n    .combo-fase .mat-mdc-option {\n      height: 28px !important;\n      min-height: 28px !important;\n      max-height: 28px !important;\n      line-height: 28px !important;\n    }\n    \n    /* Estilos para iconos de la sección de filtros de estado - reducidos a la mitad */\n    .filtros-estado .mat-icon {\n      font-size: 14px !important;\n      width: 14px !important;\n      height: 14px !important;\n      line-height: 14px !important;\n    }\n    \n    .filtros-estado .mat-icon-button {\n      width: 24px !important;\n      height: 24px !important;\n      min-width: 24px !important;\n      min-height: 24px !important;\n      line-height: 24px !important;\n    }\n    \n    /* Reducir también el padding del contenedor del filtro */\n    .filtro-container {\n      padding: 8px !important;\n      margin-bottom: 16px !important;\n    }\n    \n    /* Reducir el gap entre elementos del grid */\n    .filtro-grid {\n      gap: 1px !important;\n    }\n    \n    /* Estilos ultra compactos para los filtros principales */\n    .filtro-container .mat-mdc-form-field-infix {\n      padding-top: 1px !important;\n      padding-bottom: 1px !important;\n      min-height: 8px !important;\n      height: 8px !important;\n      max-height: 8px !important;\n    }\n    \n    .filtro-container .mat-mdc-form-field {\n      height: 32px !important;\n      min-height: 32px !important;\n      max-height: 32px !important;\n    }\n    \n    .filtro-container .mat-mdc-text-field-wrapper {\n      height: 32px !important;\n      min-height: 32px !important;\n      max-height: 32px !important;\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n    \n    .filtro-container .mat-mdc-select {\n      height: 24px !important;\n      min-height: 24px !important;\n      max-height: 24px !important;\n      line-height: 24px !important;\n    }\n    \n    .filtro-container .mat-mdc-option {\n      height: 28px !important;\n      min-height: 28px !important;\n      max-height: 28px !important;\n      line-height: 28px !important;\n    }\n  </style>\n  \n          <!-- Header Principal -->\n    <div class=\"mb-2\">\n      <!-- Título y detalle removidos - ahora se muestran en el toolbar -->\n    </div>\n\n        <!-- Filtros Principales -->\n    <div class=\"bg-white rounded-lg shadow-sm border mb-1 filtro-container\" style=\"padding: 20px !important; min-height: 80px;\">\n      <div class=\"flex flex-wrap items-center justify-between gap-3 filtro-grid\">\n        <mat-form-field appearance=\"outline\" class=\"min-w-0 mr-2.5 compact-field\" style=\"width: 250px;\">\n          <mat-label>Agencia</mat-label>\n          <mat-select [(ngModel)]=\"selectedAgency\" [disabled]=\"loadingAgencias || agencias.length === 0\" (selectionChange)=\"onAgenciaChange()\">\n            <mat-option *ngIf=\"loadingAgencias\" value=\"\" disabled>\n              <mat-spinner diameter=\"16\" class=\"inline mr-2\"></mat-spinner>\n              Cargando agencias...\n            </mat-option>\n            <mat-option *ngIf=\"!loadingAgencias && agencias.length === 0\" value=\"\" disabled>\n              No hay agencias disponibles (debugging)\n            </mat-option>\n            <mat-option *ngFor=\"let agencia of agencias\" [value]=\"agencia.Id\">\n              {{ agencia.Name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" class=\"min-w-0 mr-2.5 compact-field\" style=\"width: 206px;\">\n          <mat-label>Proceso</mat-label>\n          <mat-select [(ngModel)]=\"selectedProcess\" [disabled]=\"loadingProcesos || procesos.length === 0\" (selectionChange)=\"onProcesoChange()\">\n            <mat-option *ngIf=\"loadingProcesos\" value=\"\" disabled>\n              <mat-spinner diameter=\"16\" class=\"inline mr-2\"></mat-spinner>\n              Cargando procesos...\n            </mat-option>\n            <mat-option *ngIf=\"!loadingProcesos && procesos.length === 0\" value=\"\" disabled>\n              No hay procesos disponibles\n            </mat-option>\n            <mat-option *ngFor=\"let proceso of procesos\" [value]=\"proceso.Id\">\n              {{ proceso.Name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" class=\"min-w-0 mr-2.5 compact-field\" style=\"width: 206px;\">\n          <mat-label>Fase</mat-label>\n          <mat-select [(ngModel)]=\"selectedFase\" (selectionChange)=\"onFaseChange()\">\n            <mat-option value=\"\">Todas las fases</mat-option>\n            <mat-option *ngFor=\"let fase of fases\" [value]=\"fase.value\">\n              {{ fase.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- Buscador integrado -->\n        <mat-form-field appearance=\"outline\" class=\"flex-1 min-w-0 mr-2.5 compact-field\">\n          <mat-label>Buscar</mat-label>\n          <input matInput \n                 [(ngModel)]=\"searchTerm\" \n                 (input)=\"onSearchChange()\"\n                 placeholder=\"Pedido, cliente o nombre\"\n                 class=\"text-sm\">\n          <mat-icon matSuffix class=\"text-gray-400\">search</mat-icon>\n        </mat-form-field>\n\n        <div class=\"flex items-center justify-center gap-2\">\n          <button mat-icon-button\n                  *ngIf=\"searchTerm\"\n                  (click)=\"clearSearch()\"\n                  class=\"text-gray-500 hover:text-red-600 !w-8 !h-8\"\n                  matTooltip=\"Limpiar búsqueda\">\n            <mat-icon>clear</mat-icon>\n          </button>\n          <!-- Toggle para mostrar pedidos cancelados -->\n          <div class=\"flex items-center mr-3\">\n            <mat-slide-toggle \n              [(ngModel)]=\"showCancelledOrders\" \n              (change)=\"onToggleCancelledOrders()\"\n              class=\"text-sm\">\n              <span class=\"ml-2 text-xs text-gray-600\">Mostrar cancelados</span>\n            </mat-slide-toggle>\n          </div>\n          \n          <button mat-icon-button\n                  class=\"text-gray-600 hover:text-blue-600 transition-colors\"\n                  (click)=\"recargarDatos()\"\n                  [disabled]=\"loading || loadingAgencias || loadingProcesos\"\n                  matTooltip=\"Recargar datos\">\n            <mat-icon [class.animate-spin]=\"loading || loadingAgencias || loadingProcesos\">refresh</mat-icon>\n          </button>\n        </div>\n      </div>\n\n      <!-- Contador de resultados de búsqueda -->\n      <div class=\"text-xs text-gray-500 mt-1 px-1\" *ngIf=\"searchTerm\">\n        Mostrando {{ clientesDataSource.data.length }} de {{ totalRecords }} registros\n      </div>\n    </div>\n\n      <!-- Tabla de Clientes/Procesos -->\n      <mat-card class=\"mb-2\">\n        <div class=\"p-2\">\n          <!-- Título de tabla removido -->\n          \n          \n          <div *ngIf=\"loading\" class=\"flex justify-center items-center py-8\">\n            <mat-spinner diameter=\"40\"></mat-spinner>\n          </div>\n\n                        <div matSort>\n                          <table mat-table [dataSource]=\"clientesDataSource\" class=\"w-full compact-table\" *ngIf=\"!loading\">\n            <!-- Columna ND Cliente -->\n            <ng-container matColumnDef=\"ndCliente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"ndCliente\" class=\"w-40 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                ND Cliente\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                <div class=\"flex items-center\">\n                  <span *ngIf=\"item.tieneDocumentosPendientes == 1\" class=\"text-yellow-500 mr-1\">★</span>\n                  {{ item.ndCliente }}\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- Columna ND Pedido -->\n            <ng-container matColumnDef=\"ndPedido\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"ndPedido\" class=\"w-40 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                ND Pedido\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                {{ item.ndPedido }}\n              </td>\n            </ng-container>\n\n            <!-- Columna Cliente -->\n            <ng-container matColumnDef=\"cliente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"cliente\" class=\"min-w-0 flex-1 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Cliente\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs text-gray-700 text-center\">\n                <span class=\"block truncate\" [matTooltip]=\"item.cliente\" matTooltipPosition=\"above\">\n                  {{ item.cliente }}\n                </span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Proceso -->\n            <ng-container matColumnDef=\"proceso\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"proceso\" class=\"w-40 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Proceso\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs text-gray-700 text-center\">\n                {{ item.proceso }}\n              </td>\n            </ng-container>\n\n            <!-- Columna Operación -->\n            <ng-container matColumnDef=\"operacion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"operacion\" class=\"w-40 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Operación\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs text-gray-700 text-center\">\n                {{ item.operacion }}\n              </td>\n            </ng-container>\n\n            <!-- Columna Fase -->\n            <ng-container matColumnDef=\"fase\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"fase\" class=\"w-48 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Fase\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <span class=\"px-2 py-1 rounded-full text-xs font-medium\"\n                      [ngClass]=\"{\n                        'bg-green-100 text-green-800': item.fase === 'Integración',\n                        'bg-blue-100 text-blue-800': item.fase === 'Liquidación',\n                        'bg-purple-100 text-purple-800': item.fase === 'Liberación',\n                        'bg-red-100 text-red-800': item.fase === 'Excepción',\n                        'bg-indigo-100 text-indigo-800': item.fase === 'Liberado'\n                      }\">\n                  {{ item.fase }}\n                </span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Fecha de Liberación -->\n            <ng-container matColumnDef=\"fechaLiberacion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"fechaLiberacion\" class=\"w-48 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-left\">\n                Fecha de Liberación\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs text-gray-700 text-left\">\n                {{ item.fechaLiberacion | date:'yyyy-MM-dd' }}\n              </td>\n            </ng-container>\n\n            <!-- Columna Registro -->\n            <ng-container matColumnDef=\"registro\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"registro\" class=\"w-48 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-left\">\n                Registro\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs text-gray-700 text-left\">\n                {{ item.registro }}\n              </td>\n            </ng-container>\n\n            <!-- Columna Acciones -->\n            <ng-container matColumnDef=\"acciones\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-24 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                <span class=\"flex items-center\">Acciones</span>\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <button mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" class=\"text-gray-600 hover:text-blue-600\" (click)=\"onActionsClick($event)\">\n                  <mat-icon class=\"text-sm\">more_vert</mat-icon>\n                </button>\n                <mat-menu #actionsMenu=\"matMenu\">\n                  <button mat-menu-item (click)=\"onDescargarArchivo(item); $event.stopPropagation()\">\n                    <mat-icon>download</mat-icon>\n                    <span>Descargar archivo</span>\n                  </button>\n                  <button mat-menu-item *ngIf=\"item.fase !== 'Liberado'\" (click)=\"onCancelar(item); $event.stopPropagation()\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancelar pedido</span>\n                  </button>\n                  <button mat-menu-item *ngIf=\"item.fase !== 'Liberado'\" (click)=\"onExcepcion(item); $event.stopPropagation()\">\n                    <mat-icon>warning</mat-icon>\n                    <span>Excepción en el pedido</span>\n                  </button>\n                  <button mat-menu-item *ngIf=\"isManagerOrAdmin\" [matMenuTriggerFor]=\"adminSubMenu\">\n                    <mat-icon>admin_panel_settings</mat-icon>\n                    <span>Administrar</span>\n                    <mat-icon class=\"ml-auto\">keyboard_arrow_right</mat-icon>\n                  </button>\n                  \n                  <mat-menu #adminSubMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"onEliminar(item); $event.stopPropagation()\">\n                      <mat-icon>delete</mat-icon>\n                      <span>Eliminar</span>\n                    </button>\n                    <button mat-menu-item (click)=\"onCambiarEstatus(item); $event.stopPropagation()\">\n                      <mat-icon>swap_horiz</mat-icon>\n                      <span>Cambiar estatus</span>\n                    </button>\n                  </mat-menu>\n                </mat-menu>\n              </td>\n            </ng-container>\n\n                              <tr mat-header-row *matHeaderRowDef=\"clientesDisplayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: clientesDisplayedColumns;\" \n                      (click)=\"onClienteSelect(row)\"\n                      [ngClass]=\"{'!min-h-0 !h-10 cursor-pointer hover:bg-blue-50 transition-colors': true, 'bg-blue-100 border-l-4 border-blue-500': selectedCliente?.idFile === row.idFile}\"></tr>\n                </table>\n                \n                <!-- Paginador -->\n                <mat-paginator \n                  [length]=\"totalRecords\"\n                  [pageSize]=\"pageSize\"\n                  [pageSizeOptions]=\"pageSizeOptions\"\n                  [pageIndex]=\"currentPage\"\n                  (page)=\"onPageChange($event)\"\n                  (pageSizeChange)=\"onPageSizeChange($event)\"\n                  showFirstLastButtons\n                  aria-label=\"Seleccionar página de clientes\">\n                </mat-paginator>\n                          </div>\n        </div>\n      </mat-card>\n\n\n      <!-- Tabla de Documentos -->\n      <mat-card class=\"mb-4\">\n        <div class=\"p-2\">\n          <!-- Título de tabla removido -->\n          \n          <!-- Mensaje cuando no hay cliente seleccionado -->\n          <div *ngIf=\"!selectedCliente\" class=\"flex justify-center items-center py-8 text-gray-500\">\n            <div class=\"text-center\">\n              <mat-icon class=\"text-gray-400 text-4xl mb-2\">info</mat-icon>\n              <p class=\"text-sm\">Selecciona un cliente/pedido de la tabla superior para ver sus documentos</p>\n            </div>\n          </div>\n          \n          <!-- Loading cuando se están cargando documentos -->\n          <div *ngIf=\"loading && selectedCliente\" class=\"flex justify-center items-center py-8\">\n            <mat-spinner diameter=\"40\"></mat-spinner>\n          </div>\n          \n          <!-- Tabla de documentos cuando hay cliente seleccionado -->\n          <div *ngIf=\"selectedCliente && !loading\">\n            <!-- Información de documentos -->\n            <div class=\"mb-3 px-2 py-1 bg-gray-50 border-b text-sm text-gray-600\">\n              Mostrando {{ documentosDataSource.length }} documentos para el cliente {{ selectedCliente.cliente }} (Pedido: {{ selectedCliente.ndPedido }})\n            </div>\n\n                      <table mat-table [dataSource]=\"documentosDataSource\" class=\"w-full compact-table\" *ngIf=\"documentosDataSource.length > 0\">\n            <!-- Columna Proceso -->\n            <ng-container matColumnDef=\"proceso\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-32 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Proceso\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                {{ item.proceso }}\n              </td>\n            </ng-container>\n\n            <!-- Columna Fase -->\n            <ng-container matColumnDef=\"fase\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-24 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Fase\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                {{ item.fase }}\n              </td>\n            </ng-container>\n\n            <!-- Columna Documento -->\n            <ng-container matColumnDef=\"documento\">\n              <th mat-header-cell *matHeaderCellDef class=\"min-w-0 flex-1 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Documento\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                <span class=\"block truncate\" [matTooltip]=\"item.documento\" matTooltipPosition=\"above\">\n                  {{ item.documento }}\n                </span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Estatus -->\n            <ng-container matColumnDef=\"estatus\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-20 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Estatus\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <!-- Icono según el estatus del documento -->\n                <div *ngIf=\"item.idEstatus === '2'\" class=\"flex items-center justify-center mx-auto cursor-help\" \n                     matTooltip=\"Documento pendiente de validación\" \n                     matTooltipPosition=\"above\">\n                  <mat-icon class=\"text-orange-500\" style=\"font-size: 20px; width: 20px; height: 20px;\">pending_actions</mat-icon>\n                </div>\n                <div *ngIf=\"item.idEstatus === '4'\" class=\"flex items-center justify-center mx-auto cursor-help\" \n                     matTooltip=\"Documento validado y aprobado\" \n                     matTooltipPosition=\"above\">\n                  <mat-icon class=\"text-green-500\" style=\"font-size: 20px; width: 20px; height: 20px;\">verified</mat-icon>\n                </div>\n                <div *ngIf=\"item.idEstatus !== '2' && item.idEstatus !== '4'\" class=\"flex items-center justify-center mx-auto cursor-help\" \n                     matTooltip=\"Documento en proceso de revisión\" \n                     matTooltipPosition=\"above\">\n                  <mat-icon class=\"text-blue-500\" style=\"font-size: 20px; width: 20px; height: 20px;\">hourglass_empty</mat-icon>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- Columna Ver -->\n            <ng-container matColumnDef=\"ver\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-16 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Ver\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <button mat-icon-button color=\"primary\" class=\"!w-6 !h-6 !min-h-6 !p-0\"\n                        (click)=\"onVerDocumento(item); $event.stopPropagation()\"\n                        matTooltip=\"Ver información del documento\">\n                  <mat-icon class=\"!text-sm\">visibility</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n\n            <!-- Columna Validar -->\n            <ng-container matColumnDef=\"validar\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-20 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Validar\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <div class=\"relative\" *ngIf=\"item.idEstatus === '3'\">\n                  <button mat-icon-button class=\"!w-6 !h-6 !min-h-6 !p-0 text-gray-400\" \n                          (click)=\"onValidarDocumento(item); $event.stopPropagation()\"\n                          matTooltip=\"Validar documento\">\n                    <mat-icon class=\"!text-sm\">mail</mat-icon>\n                  </button>\n                  <mat-icon *ngIf=\"item.validado\" class=\"absolute -top-1 -right-1 text-green-600 text-sm\">check_circle</mat-icon>\n                </div>\n                <span *ngIf=\"item.idEstatus !== '3'\" class=\"text-xs text-gray-400\">-</span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Eliminar -->\n            <ng-container matColumnDef=\"eliminar\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-20 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Eliminar\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <button *ngIf=\"isManagerOrAdmin\" mat-icon-button color=\"warn\" class=\"!w-6 !h-6 !min-h-6 !p-0\">\n                  <mat-icon class=\"!text-sm\">remove_circle</mat-icon>\n                </button>\n                <span *ngIf=\"!isManagerOrAdmin\" class=\"text-xs text-gray-400\">-</span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Requerido -->\n            <ng-container matColumnDef=\"requerido\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-24 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Requerido\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <span class=\"text-xs font-medium\" [ngClass]=\"item.requerido == 1 ? 'text-green-600' : 'text-gray-400'\">\n                  {{ item.requerido == 1 ? 'Sí' : 'No' }}\n                </span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Requiere Expiración -->\n            <ng-container matColumnDef=\"requiereExpiracion\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-28 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Requiere Expiración\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-center\">\n                <span class=\"px-2 py-1 rounded-full text-xs font-medium\" \n                      [class]=\"item.ReqExpiration == 1 || item.ReqExpiration === '1' ? 'bg-orange-100 text-orange-800' : 'bg-gray-100 text-gray-800'\">\n                  {{ item.ReqExpiration == 1 || item.ReqExpiration === '1' ? 'Sí' : 'No' }}\n                </span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Fecha -->\n            <ng-container matColumnDef=\"fecha\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-34 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Fecha\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                <span class=\"truncate block\" [matTooltip]=\"item.fecha\" matTooltipPosition=\"above\">\n                  {{ item.fecha }}\n                </span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Fecha de Expiración -->\n            <ng-container matColumnDef=\"fechaExpiracion\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-34 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Fecha Expiración\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                <span *ngIf=\"item.fechaExpiracion; else noFechaExpiracion\" class=\"text-blue-600 font-medium truncate block\" [matTooltip]=\"getFechaExpiracionTooltip(item.fechaExpiracion)\" matTooltipPosition=\"above\">\n                  {{ item.fechaExpiracion | date:'dd/MM/yyyy' }}\n                </span>\n                <ng-template #noFechaExpiracion>\n                  <span class=\"text-gray-400\">-</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Columna Comentario -->\n            <ng-container matColumnDef=\"comentario\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-51 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Comentario\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                <span class=\"block truncate\" [matTooltip]=\"item.comentario\" matTooltipPosition=\"above\">\n                  {{ item.comentario }}\n                </span>\n              </td>\n            </ng-container>\n\n            <!-- Columna Asignado -->\n            <ng-container matColumnDef=\"asignado\">\n              <th mat-header-cell *matHeaderCellDef class=\"w-45 py-2 bg-gray-50 text-xs font-medium text-gray-700 text-center\">\n                Asignado\n              </th>\n              <td mat-cell *matCellDef=\"let item\" class=\"py-2 text-xs font-medium text-gray-700 text-center\">\n                <span class=\"block truncate\" [matTooltip]=\"item.asignado\" matTooltipPosition=\"above\">\n                  {{ item.asignado }}\n                </span>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"documentosDisplayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: documentosDisplayedColumns;\" class=\"!min-h-0 !h-10\"></tr>\n          </table>\n          \n          <!-- Mensaje cuando no hay documentos -->\n          <div *ngIf=\"documentosDataSource.length === 0\" class=\"flex justify-center items-center py-8 text-gray-500\">\n            <div class=\"text-center\">\n              <mat-icon class=\"text-gray-400 text-4xl mb-2\">folder_open</mat-icon>\n              <p class=\"text-sm\">No hay documentos disponibles para este cliente y pedido</p>\n            </div>\n          </div>\n          </div>\n        </div>\n      </mat-card>\n\n                    <!-- Dashboard de estadísticas removido -->\n    </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\n\nexport interface Cliente {\n  idFile: number;\n  ndCliente: number;\n  ndPedido: number;\n  cliente: string;\n  proceso: string;\n  operacion: string;\n  fase: string;\n  registro: string;\n  IdCurrentState: number;\n  tieneDocumentosPendientes: number;\n}\n\nexport interface Documento {\n  proceso: string;\n  fase: string;\n  documento: string;\n  estatus: string;\n  ver: boolean;\n  validado: boolean;\n  eliminar: boolean;\n  requerido: boolean;\n  fecha: string;\n  comentario: string;\n  asignado: string;\n  idEstatus: number;\n}\n\nexport interface FiltrosValidacion {\n  agencia?: number | null;\n  proceso?: number | null;\n  fase?: string;\n  estado?: string;\n  showCancelled?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidacionService {\n  private apiUrl = environment.apiBaseUrl;\n  \n  // BehaviorSubjects para mantener el estado de los datos\n  private clientesSubject = new BehaviorSubject<Cliente[]>([]);\n  private documentosSubject = new BehaviorSubject<Documento[]>([]);\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n\n  // Observables públicos\n  public clientes$ = this.clientesSubject.asObservable();\n  public documentos$ = this.documentosSubject.asObservable();\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Cargar agencias disponibles (solo activas y con permisos del usuario)\n   */\n  cargarAgencias(): Observable<any[]> {\n    const url = `${this.apiUrl}/api/agency`;\n    \n    return this.http.get<any>(url).pipe(\n      map((response: any) => {\n        if (response && response.success && response.data && response.data.agencies) {\n          return response.data.agencies;\n        } else if (response && Array.isArray(response)) {\n          return response;\n        } else if (response && response.agencies) {\n          return response.agencies;\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n\n  /**\n   * Obtener agencia predeterminada del usuario\n   */\n  obtenerAgenciaUsuario(): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/api/user/profile`).pipe(\n      map(response => {\n        if (response && response.success && response.data) {\n          return response.data.DefaultAgency;\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Cargar clientes/procesos con filtros\n   */\n  cargarClientes(filtros: FiltrosValidacion = {}): Observable<Cliente[]> {\n    this.loadingSubject.next(true);\n    \n    let params = new HttpParams();\n    if (filtros.agencia) params = params.set('id', filtros.agencia);\n    if (filtros.proceso) params = params.set('idProcess', filtros.proceso);\n    if (filtros.showCancelled !== undefined) params = params.set('showCancelled', filtros.showCancelled.toString());\n    params = params.set('page', '1');\n    params = params.set('limit', '10000'); // Obtener más registros para paginación local\n\n    return this.http.get<any>(`${this.apiUrl}/api/clients-validation/clientes`, { params }).pipe(\n      map(response => {\n        console.log('🔍 ValidacionService - Respuesta completa del API:', response);\n        console.log('🔍 ValidacionService - URL llamada:', `${this.apiUrl}/api/clients-validation/clientes`);\n        console.log('🔍 ValidacionService - Parámetros:', params.toString());\n        \n        if (response && response.success && response.data && response.data.clientes) {\n          console.log('✅ ValidacionService - Clientes extraídos:', response.data.clientes);\n          console.log('🔍 ValidacionService - Primer cliente:', response.data.clientes.length > 0 ? response.data.clientes[0] : 'No hay clientes');\n          return response.data.clientes;\n        }\n        console.log('⚠️ ValidacionService - No se encontraron clientes en la respuesta');\n        return [];\n      })\n    );\n  }\n\n  /**\n   * Cargar documentos de un archivo específico\n   */\n  cargarDocumentos(idFile: number): Observable<Documento[]> {\n    this.loadingSubject.next(true);\n    \n    let params = new HttpParams();\n    params = params.set('idFile', idFile.toString());\n    \n    return this.http.get<any>(`${this.apiUrl}/api/clients-validation/documentos`, { params }).pipe(\n      map(response => {\n        if (response && response.success && response.data) {\n          return response.data;\n        }\n        return [];\n      })\n    );\n  }\n\n\n  /**\n   * Cargar procesos disponibles\n   */\n  cargarProcesos(): Observable<any[]> {\n    const url = `${this.apiUrl}/api/process`;\n    \n    return this.http.get<any>(url).pipe(\n      map((response: any) => {\n        if (response && response.success && response.data && response.data.processes) {\n          return response.data.processes;\n        } else if (response && Array.isArray(response)) {\n          return response;\n        } else if (response && response.processes) {\n          return response.processes;\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n\n  /**\n   * Cargar fases disponibles\n   */\n  cargarFases(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/api/validacion/fases`);\n  }\n\n  /**\n   * Validar un documento - cambiar estatus de \"2\" a \"3\"\n   */\n  validarDocumento(idDocumentByFile: number): Observable<any> {\n    const data = {\n      idDocumentByFile: idDocumentByFile\n    };\n    \n    return this.http.post<any>(`${this.apiUrl}/api/clients-validation/validar-documento`, data).pipe(\n      map(response => {\n        if (response && response.success) {\n          return response.data;\n        }\n        throw new Error(response.message || 'Error al validar el documento');\n      }),\n      catchError(error => {\n        console.error('Error en validarDocumento:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Preparar documento para validación - cambiar estatus de \"2\" a \"3\"\n   */\n  prepararDocumento(idDocumentByFile: number): Observable<any> {\n    const data = {\n      idDocumentByFile: idDocumentByFile\n    };\n    \n    return this.http.post<any>(`${this.apiUrl}/api/clients-validation/preparar-documento`, data).pipe(\n      map(response => {\n        if (response && response.success) {\n          return response.data;\n        }\n        throw new Error(response.message || 'Error al preparar el documento');\n      }),\n      catchError(error => {\n        console.error('Error en prepararDocumento:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Aprobar/Rechazar documento - cambiar estatus a \"4\" (aprobado) o \"5\" (rechazado)\n   */\n  aprobarDocumento(idDocumentByFile: number, nuevoEstatus: number, comentario?: string, fechaExpiracion?: Date): Observable<any> {\n    const data: any = {\n      idDocumentByFile: idDocumentByFile,\n      nuevoEstatus: nuevoEstatus,\n      comentario: comentario\n    };\n\n    // Si hay fecha de expiración, agregarla al payload\n    if (fechaExpiracion) {\n      data.fechaExpiracion = fechaExpiracion.toISOString().split('T')[0]; // Formato YYYY-MM-DD\n    }\n    \n    return this.http.post<any>(`${this.apiUrl}/api/clients-validation/aprobar-documento`, data).pipe(\n      map(response => {\n        if (response && response.success) {\n          return response.data;\n        }\n        throw new Error(response.message || 'Error al procesar el documento');\n      }),\n      catchError(error => {\n        console.error('Error en aprobarDocumento:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Rechazar un documento\n   */\n  rechazarDocumento(documentoId: string, motivo: string, comentario?: string): Observable<any> {\n    return this.http.post(`${this.apiUrl}/api/validacion/rechazar`, {\n      documentoId,\n      motivo,\n      comentario\n    });\n  }\n\n  /**\n   * Descargar archivo\n   */\n  descargarArchivo(documentoId: string): Observable<Blob> {\n    return this.http.get(`${this.apiUrl}/api/validacion/descargar/${documentoId}`, {\n      responseType: 'blob'\n    });\n  }\n\n  /**\n   * Cancelar proceso\n   */\n  cancelarProceso(clienteId: string, motivo: string): Observable<any> {\n    return this.http.post(`${this.apiUrl}/api/validacion/cancelar`, {\n      clienteId,\n      motivo\n    });\n  }\n\n  /**\n   * Cancelar pedido\n   */\n  cancelarPedido(clienteId: number, motivoId: number, comentario: string): Observable<any> {\n    const data = {\n      clienteId: clienteId,\n      motivoId: motivoId,\n      comentario: comentario\n    };\n\n    return this.http.post<any>(`${this.apiUrl}/api/clients-validation/cancelar-pedido`, data).pipe(\n      map(response => {\n        if (response && response.success) {\n          return response.data;\n        } else {\n          throw new Error(response.message || 'Error al cancelar el pedido');\n        }\n      }),\n      catchError(error => {\n        console.error('Error cancelando pedido:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Crear excepción en pedido\n   */\n  excepcionPedido(clienteId: number, motivoId: number, comentario: string): Observable<any> {\n    const data = {\n      clienteId: clienteId,\n      motivoId: motivoId,\n      comentario: comentario\n    };\n\n    return this.http.post<any>(`${this.apiUrl}/api/clients-validation/excepcion-pedido`, data).pipe(\n      map(response => {\n        if (response && response.success) {\n          return response.data;\n        } else {\n          throw new Error(response.message || 'Error al crear la excepción');\n        }\n      }),\n      catchError(error => {\n        console.error('Error creando excepción:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Eliminar pedido y sus relaciones\n   */\n  eliminarPedido(clienteId: number): Observable<any> {\n    const data = {\n      clienteId: clienteId\n    };\n\n    return this.http.delete<any>(`${this.apiUrl}/api/clients-validation/eliminar-pedido`, { body: data }).pipe(\n      map(response => {\n        if (response && response.success) {\n          return response.data;\n        } else {\n          throw new Error(response.message || 'Error al eliminar el pedido');\n        }\n      }),\n      catchError(error => {\n        console.error('Error eliminando pedido:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Cambiar estatus del pedido\n   */\n  cambiarEstatus(clienteId: number, nuevoIdCurrentState: number): Observable<any> {\n    const data = {\n      clienteId: clienteId,\n      nuevoIdCurrentState: nuevoIdCurrentState\n    };\n\n    return this.http.put<any>(`${this.apiUrl}/api/clients-validation/cambiar-estatus`, data).pipe(\n      map(response => {\n        if (response && response.success) {\n          return response.data;\n        } else {\n          throw new Error(response.message || 'Error al cambiar el estatus');\n        }\n      }),\n      catchError(error => {\n        console.error('Error cambiando estatus:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Crear excepción (método legacy)\n   */\n  crearExcepcion(clienteId: string, datos: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/api/validacion/excepcion`, {\n      clienteId,\n      ...datos\n    });\n  }\n\n  /**\n   * Actualizar datos locales\n   */\n  actualizarClientes(clientes: Cliente[]): void {\n    this.clientesSubject.next(clientes);\n  }\n\n  actualizarDocumentos(documentos: Documento[]): void {\n    this.documentosSubject.next(documentos);\n  }\n\n  setLoading(loading: boolean): void {\n    this.loadingSubject.next(loading);\n  }\n\n  /**\n   * Obtener estadísticas\n   */\n  obtenerEstadisticas(filtros: FiltrosValidacion = {}): Observable<any> {\n    let params = new HttpParams();\n    if (filtros.agencia) params = params.set('id', filtros.agencia);\n    if (filtros.proceso) params = params.set('idProcess', filtros.proceso);\n\n    return this.http.get<any>(`${this.apiUrl}/api/clients-validation/estadisticas`, { params }).pipe(\n      map(response => {\n        if (response && response.success && response.data) {\n          return response.data;\n        }\n        return [];\n      })\n    );\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-ver-documento-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  templateUrl: './ver-documento-dialog.component.html',\n  styleUrls: ['./ver-documento-dialog.component.scss']\n})\nexport class VerDocumentoDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<VerDocumentoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { documento: any }\n  ) {}\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  getEstatusIcon(): string {\n    const estatus = this.data.documento.idEstatus;\n    switch (estatus) {\n      case '2':\n        return 'warning';\n      case '4':\n        return 'verified';\n      default:\n        return 'hourglass_empty';\n    }\n  }\n\n  getEstatusColor(): string {\n    const estatus = this.data.documento.idEstatus;\n    switch (estatus) {\n      case '2':\n        return 'text-orange-500';\n      case '4':\n        return 'text-green-500';\n      default:\n        return 'text-blue-500';\n    }\n  }\n\n  getEstatusText(): string {\n    const estatus = this.data.documento.idEstatus;\n    switch (estatus) {\n      case '2':\n        return 'Pendiente de validación';\n      case '4':\n        return 'Validado y aprobado';\n      default:\n        return 'En proceso de revisión';\n    }\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <h2 class=\"text-xl font-semibold text-gray-800\">Información del Documento</h2>\n    <button mat-icon-button (click)=\"onClose()\" class=\"text-gray-500 hover:text-gray-700\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Contenido -->\n  <div class=\"space-y-4\">\n    <!-- Información básica -->\n    <div class=\"grid grid-cols-2 gap-4\">\n      <div class=\"bg-gray-50 p-3 rounded-lg\">\n        <label class=\"text-sm font-medium text-gray-600\">Documento</label>\n        <p class=\"text-gray-800 font-medium\">{{ data.documento.documento }}</p>\n      </div>\n      \n      <div class=\"bg-gray-50 p-3 rounded-lg\">\n        <label class=\"text-sm font-medium text-gray-600\">Proceso</label>\n        <p class=\"text-gray-800 font-medium\">{{ data.documento.proceso }}</p>\n      </div>\n      \n      <div class=\"bg-gray-50 p-3 rounded-lg\">\n        <label class=\"text-sm font-medium text-gray-600\">Fase</label>\n        <p class=\"text-gray-800 font-medium\">{{ data.documento.fase }}</p>\n      </div>\n      \n      <div class=\"bg-gray-50 p-3 rounded-lg\">\n        <label class=\"text-sm font-medium text-gray-600\">Fecha</label>\n        <p class=\"text-gray-800 font-medium\">{{ data.documento.fecha }}</p>\n      </div>\n    </div>\n\n    <!-- Estatus con icono -->\n    <div class=\"bg-gray-50 p-3 rounded-lg\">\n      <label class=\"text-sm font-medium text-gray-600\">Estatus</label>\n      <div class=\"flex items-center mt-1\">\n        <mat-icon [class]=\"getEstatusColor()\" class=\"mr-2\">{{ getEstatusIcon() }}</mat-icon>\n        <span class=\"text-gray-800 font-medium\">{{ getEstatusText() }}</span>\n      </div>\n    </div>\n\n    <!-- Asignado -->\n    <div class=\"bg-gray-50 p-3 rounded-lg\">\n      <label class=\"text-sm font-medium text-gray-600\">Asignado a</label>\n      <p class=\"text-gray-800 font-medium\">{{ data.documento.asignado || 'No asignado' }}</p>\n    </div>\n\n    <!-- Comentario -->\n    <div class=\"bg-gray-50 p-3 rounded-lg\">\n      <label class=\"text-sm font-medium text-gray-600\">Comentario</label>\n      <p class=\"text-gray-800 font-medium\">{{ data.documento.comentario || 'Sin comentarios' }}</p>\n    </div>\n\n    <!-- Información adicional -->\n    <div class=\"grid grid-cols-2 gap-4\">\n      <div class=\"bg-gray-50 p-3 rounded-lg\">\n        <label class=\"text-sm font-medium text-gray-600\">Requerido</label>\n        <p class=\"text-gray-800 font-medium\">{{ data.documento.requerido == 1 ? 'Sí' : 'No' }}</p>\n      </div>\n      \n      <div class=\"bg-gray-50 p-3 rounded-lg\">\n        <label class=\"text-sm font-medium text-gray-600\">ID Documento</label>\n        <p class=\"text-gray-800 font-medium\">{{ data.documento.idDocumentByFile }}</p>\n      </div>\n    </div>\n  </div>\n\n  <!-- Botones de acción -->\n  <div class=\"flex justify-end mt-6 pt-4 border-t border-gray-200\">\n    <button mat-button (click)=\"onClose()\" class=\"text-gray-600\">\n      Cerrar\n    </button>\n  </div>\n</div>\n","import { asyncScheduler } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport const TimeoutError = createErrorClass((_super) => function TimeoutErrorImpl(info = null) {\n    _super(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    this.info = info;\n});\nexport function timeout(config, schedulerArg) {\n    const { first, each, with: _with = timeoutErrorFactory, scheduler = schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : asyncScheduler, meta = null, } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config);\n    if (first == null && each == null) {\n        throw new TypeError('No timeout provided.');\n    }\n    return operate((source, subscriber) => {\n        let originalSourceSubscription;\n        let timerSubscription;\n        let lastValue = null;\n        let seen = 0;\n        const startTimer = (delay) => {\n            timerSubscription = executeSchedule(subscriber, scheduler, () => {\n                try {\n                    originalSourceSubscription.unsubscribe();\n                    innerFrom(_with({\n                        meta,\n                        lastValue,\n                        seen,\n                    })).subscribe(subscriber);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }, delay);\n        };\n        originalSourceSubscription = source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n            seen++;\n            subscriber.next((lastValue = value));\n            each > 0 && startTimer(each);\n        }, undefined, undefined, () => {\n            if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {\n                timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n            }\n            lastValue = null;\n        }));\n        !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler.now()) : each);\n    });\n}\nfunction timeoutErrorFactory(info) {\n    throw new TimeoutError(info);\n}\n"],"names":["FASES_CATALOG","id","name","value","getFaseNameById","fase","find","f","getFaseValueById","getFaseIdByValue","getFasesForFilter","map","Observable","BehaviorSubject","tap","environment","DefaultAgencyService","constructor","http","apiUrl","apiBaseUrl","selectedAgencySubject","selectedAgency$","asObservable","agenciasSubject","agencias$","obtenerAgencias","get","pipe","response","success","data","agencies","Array","isArray","agencias","next","obtenerAgenciaUsuario","DefaultAgency","obtenerAgenciaUsuarioConReintentos","maxReintentos","delayMs","observer","intentos","intentarObtener","console","log","subscribe","defaultAgencyId","complete","error","warn","status","statusText","message","setTimeout","establecerAgenciaPredeterminada","autoSelect","agenciaSeleccionada","length","agenciaPredeterminada","ag","Id","seleccionarAgencia","agenciaId","getAgenciaSeleccionada","getAgencias","limpiarSeleccion","esAgenciaHabilitada","agencia","esHabilitado","Enabled","valor","undefined","valorStr","String","toLowerCase","getAgenciasHabilitadas","filter","getAgenciasPorEstado","habilitadas","tieneAgencias","tieneAgenciasHabilitadas","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn","CommonModule","FormsModule","MatDialogModule","MAT_DIALOG_DATA","MatButtonModule","MatIconModule","MatFormFieldModule","MatSelectModule","MatInputModule","MatDatepickerModule","MatNativeDateModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","opcion_r3","ɵɵadvance","ɵɵtextInterpolate1","label","ɵɵlistener","AprobarDocumentoDialogComponent_mat_form_field_47_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","fechaExpiracion","ɵɵelement","_r4","ctx_r1","AprobarDocumentoDialogComponent_mat_form_field_48_Template_textarea_ngModelChange_3_listener","_r8","ctx_r7","comentario","ctx_r2","AprobarDocumentoDialogComponent","dialogRef","estatusSeleccionado","opcionesEstatus","onCancelar","close","onConfirmar","requiereExpiracion","trim","result","aprobado","estatus","puedeConfirmar","documento","ReqExpiration","ɵɵdirectiveInject","MatDialogRef","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AprobarDocumentoDialogComponent_Template","rf","ctx","AprobarDocumentoDialogComponent_Template_button_click_4_listener","AprobarDocumentoDialogComponent_Template_mat_select_ngModelChange_45_listener","ɵɵtemplate","AprobarDocumentoDialogComponent_mat_option_46_Template","AprobarDocumentoDialogComponent_mat_form_field_47_Template","AprobarDocumentoDialogComponent_mat_form_field_48_Template","AprobarDocumentoDialogComponent_Template_button_click_50_listener","AprobarDocumentoDialogComponent_Template_button_click_52_listener","ɵɵtextInterpolate","proceso","fecha","requerido","i2","NgForOf","NgIf","i3","DefaultValueAccessor","NgControlStatus","RequiredValidator","NgModel","i4","MatButton","MatIconButton","i5","MatIcon","i6","MatFormField","MatLabel","MatHint","MatSuffix","i7","MatSelect","i8","MatOption","i9","MatInput","i10","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","styles","MatSnackBarModule","MatProgressSpinnerModule","fase_r7","nombre","ctx_r4","nombreFaseSeleccionada","CambiarEstatusDialogComponent","snackBar","fasesDisponibles","faseSeleccionada","loading","ngOnInit","parseInt","cliente","IdCurrentState","estadoActualId","isFormValid","open","duration","faseSeleccionadaObj","nuevoEstatus","nuevoIdCurrentState","MatSnackBar","CambiarEstatusDialogComponent_Template","CambiarEstatusDialogComponent_Template_form_ngSubmit_30_listener","CambiarEstatusDialogComponent_Template_mat_select_ngModelChange_36_listener","CambiarEstatusDialogComponent_mat_option_37_Template","CambiarEstatusDialogComponent_mat_error_40_Template","CambiarEstatusDialogComponent_mat_error_41_Template","CambiarEstatusDialogComponent_p_50_Template","CambiarEstatusDialogComponent_Template_button_click_52_listener","CambiarEstatusDialogComponent_mat_spinner_55_Template","CambiarEstatusDialogComponent_mat_icon_56_Template","ndPedido","ɵNgNoValidate","NgControlStatusGroup","NgForm","MatError","MatProgressSpinner","motivo_r8","Name","CancelarPedidoDialogComponent","fileExtraordinaryReasonService","motivos","motivoSeleccionado","loadingMotivos","cargarMotivos","getFileExtraordinaryReasons","id_type_reason","limit","file_extraordinary_reasons","motivoId","getMotivoSeleccionado","motivo","m","FileExtraordinaryReasonService","CancelarPedidoDialogComponent_Template","CancelarPedidoDialogComponent_Template_form_ngSubmit_30_listener","CancelarPedidoDialogComponent_Template_mat_select_ngModelChange_36_listener","CancelarPedidoDialogComponent_mat_option_37_Template","CancelarPedidoDialogComponent_mat_option_38_Template","CancelarPedidoDialogComponent_mat_option_39_Template","CancelarPedidoDialogComponent_mat_error_42_Template","CancelarPedidoDialogComponent_Template_textarea_ngModelChange_46_listener","CancelarPedidoDialogComponent_mat_error_50_Template","CancelarPedidoDialogComponent_Template_button_click_52_listener","CancelarPedidoDialogComponent_mat_spinner_55_Template","CancelarPedidoDialogComponent_mat_icon_56_Template","MaxLengthValidator","i11","i12","EliminarPedidoDialogComponent","confirmado","EliminarPedidoDialogComponent_Template","EliminarPedidoDialogComponent_Template_button_click_46_listener","EliminarPedidoDialogComponent_Template_button_click_48_listener","EliminarPedidoDialogComponent_mat_spinner_49_Template","EliminarPedidoDialogComponent_mat_icon_50_Template","ExcepcionPedidoDialogComponent","ExcepcionPedidoDialogComponent_Template","ExcepcionPedidoDialogComponent_Template_form_ngSubmit_30_listener","ExcepcionPedidoDialogComponent_Template_mat_select_ngModelChange_36_listener","ExcepcionPedidoDialogComponent_mat_option_37_Template","ExcepcionPedidoDialogComponent_mat_option_38_Template","ExcepcionPedidoDialogComponent_mat_option_39_Template","ExcepcionPedidoDialogComponent_mat_error_42_Template","ExcepcionPedidoDialogComponent_Template_textarea_ngModelChange_46_listener","ExcepcionPedidoDialogComponent_mat_error_50_Template","ExcepcionPedidoDialogComponent_Template_button_click_52_listener","ExcepcionPedidoDialogComponent_mat_spinner_55_Template","ExcepcionPedidoDialogComponent_mat_icon_56_Template","ReactiveFormsModule","MatCardModule","MatTableModule","MatPaginatorModule","MatSort","MatSortModule","MatTableDataSource","MatTooltipModule","MatChipsModule","MatCheckboxModule","MatMenuModule","MatSlideToggleModule","VerDocumentoDialogComponent","ScrollingModule","Subject","takeUntil","catchError","of","timeout","agencia_r14","proceso_r15","fase_r16","ValidacionComponent_button_32_Template_button_click_0_listener","_r18","ctx_r17","clearSearch","ɵɵtextInterpolate2","ctx_r8","clientesDataSource","totalRecords","ValidacionComponent_table_45_td_3_span_2_Template","item_r39","tieneDocumentosPendientes","ndCliente","item_r41","item_r42","item_r43","item_r44","operacion","ɵɵpureFunction5","_c0","item_r45","ɵɵpipeBind2","item_r46","fechaLiberacion","item_r47","registro","ValidacionComponent_table_45_td_27_button_11_Template_button_click_0_listener","_r56","item_r48","$implicit","ctx_r54","stopPropagation","ValidacionComponent_table_45_td_27_button_12_Template_button_click_0_listener","_r59","ctx_r57","onExcepcion","_r53","ValidacionComponent_table_45_td_27_Template_button_click_1_listener","_r61","ctx_r60","onActionsClick","ValidacionComponent_table_45_td_27_Template_button_click_6_listener","restoredCtx","ctx_r62","onDescargarArchivo","ValidacionComponent_table_45_td_27_button_11_Template","ValidacionComponent_table_45_td_27_button_12_Template","ValidacionComponent_table_45_td_27_button_13_Template","ValidacionComponent_table_45_td_27_Template_button_click_16_listener","ctx_r63","onEliminar","ValidacionComponent_table_45_td_27_Template_button_click_21_listener","ctx_r64","onCambiarEstatus","_r49","ctx_r36","isManagerOrAdmin","ValidacionComponent_table_45_tr_29_Template_tr_click_0_listener","_r67","row_r65","ctx_r66","onClienteSelect","ɵɵpureFunction1","_c1","ctx_r38","selectedCliente","idFile","ɵɵelementContainerStart","ValidacionComponent_table_45_th_2_Template","ValidacionComponent_table_45_td_3_Template","ɵɵelementContainerEnd","ValidacionComponent_table_45_th_5_Template","ValidacionComponent_table_45_td_6_Template","ValidacionComponent_table_45_th_8_Template","ValidacionComponent_table_45_td_9_Template","ValidacionComponent_table_45_th_11_Template","ValidacionComponent_table_45_td_12_Template","ValidacionComponent_table_45_th_14_Template","ValidacionComponent_table_45_td_15_Template","ValidacionComponent_table_45_th_17_Template","ValidacionComponent_table_45_td_18_Template","ValidacionComponent_table_45_th_20_Template","ValidacionComponent_table_45_td_21_Template","ValidacionComponent_table_45_th_23_Template","ValidacionComponent_table_45_td_24_Template","ValidacionComponent_table_45_th_26_Template","ValidacionComponent_table_45_td_27_Template","ValidacionComponent_table_45_tr_28_Template","ValidacionComponent_table_45_tr_29_Template","ctx_r10","clientesDisplayedColumns","item_r98","item_r99","item_r100","ValidacionComponent_div_51_table_3_td_12_div_1_Template","ValidacionComponent_div_51_table_3_td_12_div_2_Template","ValidacionComponent_div_51_table_3_td_12_div_3_Template","item_r101","idEstatus","ValidacionComponent_div_51_table_3_td_15_Template_button_click_1_listener","_r107","item_r105","ctx_r106","onVerDocumento","ValidacionComponent_div_51_table_3_td_18_div_1_Template_button_click_1_listener","_r114","item_r108","ctx_r112","onValidarDocumento","ValidacionComponent_div_51_table_3_td_18_div_1_mat_icon_4_Template","validado","ValidacionComponent_div_51_table_3_td_18_div_1_Template","ValidacionComponent_div_51_table_3_td_18_span_2_Template","ValidacionComponent_div_51_table_3_td_21_button_1_Template","ValidacionComponent_div_51_table_3_td_21_span_2_Template","ctx_r83","item_r119","ɵɵclassMap","item_r120","item_r121","ctx_r123","getFechaExpiracionTooltip","item_r122","ValidacionComponent_div_51_table_3_td_33_span_1_Template","ValidacionComponent_div_51_table_3_td_33_ng_template_2_Template","ɵɵtemplateRefExtractor","_r125","item_r127","item_r128","asignado","ValidacionComponent_div_51_table_3_th_2_Template","ValidacionComponent_div_51_table_3_td_3_Template","ValidacionComponent_div_51_table_3_th_5_Template","ValidacionComponent_div_51_table_3_td_6_Template","ValidacionComponent_div_51_table_3_th_8_Template","ValidacionComponent_div_51_table_3_td_9_Template","ValidacionComponent_div_51_table_3_th_11_Template","ValidacionComponent_div_51_table_3_td_12_Template","ValidacionComponent_div_51_table_3_th_14_Template","ValidacionComponent_div_51_table_3_td_15_Template","ValidacionComponent_div_51_table_3_th_17_Template","ValidacionComponent_div_51_table_3_td_18_Template","ValidacionComponent_div_51_table_3_th_20_Template","ValidacionComponent_div_51_table_3_td_21_Template","ValidacionComponent_div_51_table_3_th_23_Template","ValidacionComponent_div_51_table_3_td_24_Template","ValidacionComponent_div_51_table_3_th_26_Template","ValidacionComponent_div_51_table_3_td_27_Template","ValidacionComponent_div_51_table_3_th_29_Template","ValidacionComponent_div_51_table_3_td_30_Template","ValidacionComponent_div_51_table_3_th_32_Template","ValidacionComponent_div_51_table_3_td_33_Template","ValidacionComponent_div_51_table_3_th_35_Template","ValidacionComponent_div_51_table_3_td_36_Template","ValidacionComponent_div_51_table_3_th_38_Template","ValidacionComponent_div_51_table_3_td_39_Template","ValidacionComponent_div_51_table_3_tr_40_Template","ValidacionComponent_div_51_table_3_tr_41_Template","ctx_r68","documentosDataSource","documentosDisplayedColumns","ValidacionComponent_div_51_table_3_Template","ValidacionComponent_div_51_div_4_Template","ɵɵtextInterpolate3","ctx_r13","ValidacionComponent","userRole","getCurrentUserRole","dialogData","dialog","width","afterClosed","procesarAprobacionDocumento","validarDocumentoInterno","resultado","validacionService","aprobarDocumento","idDocumentByFile","destroy$","mensaje","cargarDocumentosCliente","prepararDocumento","event","preventDefault","onToggleCancelledOrders","showCancelledOrders","cargarClientes","disableClose","procesarCancelacion","cancelarPedido","procesarExcepcion","excepcionPedido","onAdministrar","procesarEliminacion","eliminarPedido","procesarCambioEstatus","cambiarEstatus","canCancelOrCreateException","defaultAgencyService","loadingAgencias","loadingProcesos","selectedAgency","selectedProcess","selectedFase","procesos","fases","pageSize","pageSizeOptions","currentPage","allClientes","clientesOriginales","searchTerm","cargarAgencias","cargarProcesos","loadData","ngOnDestroy","ngAfterViewInit","sort","Object","keys","sortChange","sortEvent","JSON","stringify","aplicarOrdenamiento","sortingDataAccessor","item","property","Date","seleccionarCliente","clearSelection","cargarDocumentos","documentos","mostrarError","forEach","index","enabled","enabledType","enabledString","enabledBoolean","Boolean","enabledNumber","Number","allFields","primeraAgencia","recargarDatos","horizontalPosition","verticalPosition","getIntegradosCount","integracion","getPendientesCount","validarDocumento","rechazarDocumento","descargarArchivo","cancelarProceso","crearExcepcion","onAgenciaChange","onProcesoChange","onFaseChange","aplicarBusqueda","aplicarFiltroFase","clientesRestaurados","updatePaginatedData","clientesFiltrados","filtros","showCancelled","clientes","estadosUnicos","Set","c","panelClass","onPageChange","pageIndex","startIndex","endIndex","slice","onPageSizeChange","direction","active","a","b","aValue","getSortValue","bValue","column","probarOrdenamiento","start","disableClear","onSearchChange","terminoBusqueda","includes","nombreCliente","ValidacionService","MatDialog","viewQuery","ValidacionComponent_Query","ValidacionComponent_Template_mat_select_ngModelChange_7_listener","ValidacionComponent_Template_mat_select_selectionChange_7_listener","ValidacionComponent_mat_option_8_Template","ValidacionComponent_mat_option_9_Template","ValidacionComponent_mat_option_10_Template","ValidacionComponent_Template_mat_select_ngModelChange_14_listener","ValidacionComponent_Template_mat_select_selectionChange_14_listener","ValidacionComponent_mat_option_15_Template","ValidacionComponent_mat_option_16_Template","ValidacionComponent_mat_option_17_Template","ValidacionComponent_Template_mat_select_ngModelChange_21_listener","ValidacionComponent_Template_mat_select_selectionChange_21_listener","ValidacionComponent_mat_option_24_Template","ValidacionComponent_Template_input_ngModelChange_28_listener","ValidacionComponent_Template_input_input_28_listener","ValidacionComponent_button_32_Template","ValidacionComponent_Template_mat_slide_toggle_ngModelChange_34_listener","ValidacionComponent_Template_mat_slide_toggle_change_34_listener","ValidacionComponent_Template_button_click_37_listener","ValidacionComponent_div_40_Template","ValidacionComponent_div_43_Template","ValidacionComponent_table_45_Template","ValidacionComponent_Template_mat_paginator_page_46_listener","ValidacionComponent_Template_mat_paginator_pageSizeChange_46_listener","ValidacionComponent_div_49_Template","ValidacionComponent_div_50_Template","ValidacionComponent_div_51_Template","ɵɵclassProp","NgClass","DatePipe","MatCard","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatPaginator","i13","MatSortHeader","i14","i15","i16","i17","i18","MatTooltip","i19","MatMenu","MatMenuItem","MatMenuTrigger","i20","MatSlideToggle","HttpParams","clientesSubject","documentosSubject","loadingSubject","clientes$","documentos$","loading$","url","params","set","toString","processes","cargarFases","post","Error","toISOString","split","documentoId","responseType","clienteId","delete","body","put","datos","actualizarClientes","actualizarDocumentos","setLoading","obtenerEstadisticas","onClose","getEstatusIcon","getEstatusColor","getEstatusText","VerDocumentoDialogComponent_Template","VerDocumentoDialogComponent_Template_button_click_4_listener","VerDocumentoDialogComponent_Template_button_click_59_listener","asyncScheduler","isValidDate","operate","innerFrom","createErrorClass","createOperatorSubscriber","executeSchedule","TimeoutError","_super","TimeoutErrorImpl","info","config","schedulerArg","first","each","with","_with","timeoutErrorFactory","scheduler","meta","TypeError","source","subscriber","originalSourceSubscription","timerSubscription","lastValue","seen","startTimer","delay","unsubscribe","err","closed","now"],"sourceRoot":"webpack:///","x_google_ignoreList":[17]}