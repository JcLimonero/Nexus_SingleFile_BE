{"version":3,"file":"src_app_pages_apps_contacts_contacts-table_contacts-table_component_ts.js","mappings":"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","sources":["./src/app/pages/apps/contacts/contacts-table/contacts-data-table/contacts-data-table.component.ts","./src/app/pages/apps/contacts/contacts-table/contacts-data-table/contacts-data-table.component.html","./src/app/pages/apps/contacts/contacts-table/contacts-table-menu/contacts-table-menu.component.ts","./src/app/pages/apps/contacts/contacts-table/contacts-table-menu/contacts-table-menu.component.html","./src/app/pages/apps/contacts/contacts-table/contacts-table.component.ts","./src/app/pages/apps/contacts/contacts-table/contacts-table.component.html"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\nimport {\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\n  MatFormFieldDefaultOptions\n} from '@angular/material/form-field';\nimport { stagger20ms } from '@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\nimport { Contact } from '../../interfaces/contact.interface';\nimport { scaleFadeIn400ms } from '@vex/animations/scale-fade-in.animation';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { VexScrollbarComponent } from '@vex/components/vex-scrollbar/vex-scrollbar.component';\n\n@Component({\n  selector: 'vex-contacts-data-table',\n  templateUrl: './contacts-data-table.component.html',\n  styleUrls: ['./contacts-data-table.component.scss'],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'fill'\n      } as MatFormFieldDefaultOptions\n    }\n  ],\n  animations: [stagger20ms, fadeInUp400ms, scaleFadeIn400ms],\n  standalone: true,\n  imports: [\n    VexScrollbarComponent,\n    MatTableModule,\n    MatSortModule,\n    NgFor,\n    NgIf,\n    NgClass,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatPaginatorModule\n  ]\n})\nexport class ContactsDataTableComponent<T>\n  implements OnInit, OnChanges, AfterViewInit\n{\n  @Input({ required: true }) data!: T[];\n  @Input({ required: true }) columns!: TableColumn<T>[];\n  @Input() pageSize = 20;\n  @Input() pageSizeOptions = [10, 20, 50];\n  @Input() searchStr: string = '';\n\n  @Output() toggleStar = new EventEmitter<Contact['id']>();\n  @Output() openContact = new EventEmitter<Contact['id']>();\n\n  visibleColumns: Array<keyof T | string> = [];\n  dataSource = new MatTableDataSource<T>();\n\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['columns']) {\n      this.visibleColumns = this.columns.map((column) => column.property);\n    }\n\n    if (changes['data']) {\n      this.dataSource.data = this.data;\n    }\n\n    if (changes['searchStr']) {\n      this.dataSource.filter = (this.searchStr || '').trim().toLowerCase();\n    }\n  }\n\n  emitToggleStar(event: Event, id: Contact['id']) {\n    event.stopPropagation();\n    this.toggleStar.emit(id);\n  }\n\n  ngAfterViewInit() {\n    if (this.paginator) {\n      this.dataSource.paginator = this.paginator;\n    }\n    if (this.sort) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n}\n","<vex-scrollbar class=\"h-full relative\">\n  <div class=\"flex flex-col justify-between\">\n    <table\n      [@stagger]=\"dataSource.filteredData\"\n      [dataSource]=\"dataSource\"\n      class=\"w-full flex-auto\"\n      mat-table\n      matSort>\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n      <!-- Model Properties Column -->\n      <ng-container *ngFor=\"let column of columns\">\n        <ng-container\n          *ngIf=\"column.type === 'text'\"\n          [matColumnDef]=\"column.property\">\n          <th *matHeaderCellDef mat-header-cell mat-sort-header>\n            {{ column.label }}\n          </th>\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\n            {{ row[column.property] }}\n          </td>\n        </ng-container>\n\n        <ng-container\n          *ngIf=\"column.type === 'checkbox'\"\n          [matColumnDef]=\"column.property\">\n          <th *matHeaderCellDef mat-header-cell mat-sort-header>\n            {{ column.label }}\n          </th>\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\n            <mat-checkbox\n              (click)=\"$event.stopPropagation()\"\n              [checked]=\"row[column.property]\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <ng-container\n          *ngIf=\"column.type === 'image'\"\n          [matColumnDef]=\"column.property\">\n          <th *matHeaderCellDef mat-header-cell mat-sort-header>\n            {{ column.label }}\n          </th>\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\n            <img\n              [src]=\"row[column.property]\"\n              class=\"avatar h-9 w-9 align-middle my-2\" />\n          </td>\n        </ng-container>\n\n        <ng-container\n          *ngIf=\"column.type === 'button'\"\n          [matColumnDef]=\"column.property\">\n          <ng-container *ngIf=\"column.property === 'starred'\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header>\n              {{ column.label }}\n            </th>\n            <td\n              *matCellDef=\"let row\"\n              [ngClass]=\"column.cssClasses\"\n              class=\"w-10\"\n              mat-cell>\n              <button\n                (click)=\"emitToggleStar($event, row.id)\"\n                mat-icon-button\n                type=\"button\">\n                <mat-icon\n                  *ngIf=\"row[column.property]\"\n                  class=\"text-amber-600\"\n                  svgIcon=\"mat:star\"></mat-icon>\n                <mat-icon\n                  *ngIf=\"!row[column.property]\"\n                  svgIcon=\"mat:star_border\"></mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container *ngIf=\"column.property === 'menu'\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header>\n              {{ column.label }}\n            </th>\n            <td\n              *matCellDef=\"let row\"\n              [ngClass]=\"column.cssClasses\"\n              class=\"w-10\"\n              mat-cell>\n              <button\n                (click)=\"$event.stopPropagation()\"\n                [matMenuTriggerFor]=\"contactMenu\"\n                mat-icon-button\n                type=\"button\">\n                <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\n              </button>\n            </td>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"visibleColumns; sticky: true\" mat-header-row></tr>\n      <!--suppress UnnecessaryLabelJS -->\n      <tr\n        (click)=\"openContact.emit(row.id)\"\n        *matRowDef=\"let row; columns: visibleColumns\"\n        @fadeInUp\n        class=\"hover:bg-hover cursor-pointer\"\n        mat-row></tr>\n    </table>\n\n    <div\n      *ngIf=\"dataSource.filteredData.length === 0\"\n      @scaleFadeIn\n      class=\"flex-auto flex flex-col items-center justify-center\">\n      <img class=\"m-12 h-64\" src=\"assets/img/illustrations/idea.svg\" />\n      <h2 class=\"headline m-0 text-center\">\n        No contacts matching your filters\n      </h2>\n    </div>\n\n    <mat-paginator\n      [class.hidden]=\"dataSource.filteredData.length === 0\"\n      [pageSizeOptions]=\"pageSizeOptions\"\n      [pageSize]=\"pageSize\"\n      class=\"sticky bottom-0 left-0 right-0 border-t flex-none\"></mat-paginator>\n  </div>\n</vex-scrollbar>\n\n<mat-menu #contactMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n  <button mat-menu-item>\n    <mat-icon svgIcon=\"mat:edit\"></mat-icon>\n    <span>Edit Contact</span>\n  </button>\n\n  <button mat-menu-item>\n    <mat-icon svgIcon=\"mat:delete_forever\"></mat-icon>\n    <span>Delete Contact</span>\n  </button>\n</mat-menu>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { contactsData } from '../../../../../../static-data/contacts';\nimport { Contact } from '../../interfaces/contact.interface';\nimport { fadeInRight400ms } from '@vex/animations/fade-in-right.animation';\nimport { stagger40ms } from '@vex/animations/stagger.animation';\nimport { MatRippleModule } from '@angular/material/core';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface ContactsTableMenu {\n  type: 'link' | 'subheading';\n  id?:\n    | 'frequently'\n    | 'starred'\n    | 'all'\n    | 'family'\n    | 'friends'\n    | 'colleagues'\n    | 'business';\n  icon?: string;\n  label: string;\n  classes?: {\n    icon?: string;\n  };\n}\n\n@Component({\n  selector: 'vex-contacts-table-menu',\n  templateUrl: './contacts-table-menu.component.html',\n  animations: [fadeInRight400ms, stagger40ms],\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    NgFor,\n    NgIf,\n    MatRippleModule,\n    NgClass\n  ]\n})\nexport class ContactsTableMenuComponent implements OnInit {\n  @Input() items: ContactsTableMenu[] = [\n    {\n      type: 'link',\n      id: 'all',\n      icon: 'mat:view_headline',\n      label: 'All Contacts'\n    },\n    {\n      type: 'link',\n      id: 'frequently',\n      icon: 'mat:history',\n      label: 'Frequently contacted'\n    },\n    {\n      type: 'link',\n      id: 'starred',\n      icon: 'mat:star',\n      label: 'Starred'\n    },\n    {\n      type: 'subheading',\n      label: 'Labels'\n    },\n    {\n      type: 'link',\n      id: 'family',\n      icon: 'mat:label',\n      label: 'Family',\n      classes: {\n        icon: 'text-primary-600'\n      }\n    },\n    {\n      type: 'link',\n      id: 'friends',\n      icon: 'mat:label',\n      label: 'Friends',\n      classes: {\n        icon: 'text-green-600'\n      }\n    },\n    {\n      type: 'link',\n      id: 'colleagues',\n      icon: 'mat:label',\n      label: 'Colleagues',\n      classes: {\n        icon: 'text-amber-600'\n      }\n    },\n    {\n      type: 'link',\n      id: 'business',\n      icon: 'mat:label',\n      label: 'Business',\n      classes: {\n        icon: 'text-gray-600'\n      }\n    }\n  ];\n\n  @Output() filterChange = new EventEmitter<Contact[]>();\n  @Output() openAddNew = new EventEmitter<void>();\n\n  activeCategory: ContactsTableMenu['id'] = 'all';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  setFilter(category: ContactsTableMenu['id']) {\n    this.activeCategory = category;\n\n    if (category === 'starred') {\n      return this.filterChange.emit(contactsData.filter((c) => c.starred));\n    }\n\n    if (category === 'all') {\n      return this.filterChange.emit(contactsData);\n    }\n\n    if (\n      category === 'frequently' ||\n      category === 'family' ||\n      category === 'friends' ||\n      category === 'colleagues' ||\n      category === 'business'\n    ) {\n      return this.filterChange.emit([]);\n    }\n  }\n\n  isActive(category: ContactsTableMenu['id']) {\n    return this.activeCategory === category;\n  }\n}\n","<div @stagger class=\"max-w-3xs w-full\">\n  <div class=\"h-14 mb-6 flex px-6 sm:px-0 flex items-center\">\n    <button\n      (click)=\"openAddNew.emit()\"\n      class=\"flex-auto\"\n      color=\"primary\"\n      mat-raised-button\n      type=\"button\">\n      <mat-icon\n        class=\"ltr:-ml-4 ltr:mr-2 rtl:ml-2 icon-sm\"\n        svgIcon=\"mat:add\"></mat-icon>\n      <span>Add Contact</span>\n    </button>\n  </div>\n\n  <div class=\"px-6 sm:px-0\">\n    <ng-container *ngFor=\"let item of items\">\n      <a\n        (click)=\"setFilter(item.id)\"\n        *ngIf=\"item.type === 'link'\"\n        @fadeInRight\n        [ngClass]=\"{ 'bg-primary-600/10 text-primary-600': isActive(item.id) }\"\n        class=\"rounded h-10 px-4 cursor-pointer hover:bg-primary-600/10 mt-1 font-medium flex items-center transition duration-200 ease-out\"\n        matRipple>\n        <mat-icon\n          *ngIf=\"item.icon\"\n          [ngClass]=\"item.classes?.icon\"\n          [svgIcon]=\"item.icon\"\n          class=\"ltr:mr-3 rtl:ml-3\"></mat-icon>\n        <span>{{ item.label }}</span>\n      </a>\n\n      <h3\n        *ngIf=\"item.type === 'subheading'\"\n        @fadeInRight\n        class=\"caption text-secondary font-medium mb-0 mt-6\">\n        {{ item.label }}\n      </h3>\n    </ng-container>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { scaleIn400ms } from '@vex/animations/scale-in.animation';\nimport { fadeInRight400ms } from '@vex/animations/fade-in-right.animation';\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\nimport { contactsData } from '../../../../../static-data/contacts';\nimport { ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { stagger40ms } from '@vex/animations/stagger.animation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ContactsEditComponent } from '../components/contacts-edit/contacts-edit.component';\nimport { Contact } from '../interfaces/contact.interface';\nimport { AsyncPipe } from '@angular/common';\nimport { ContactsDataTableComponent } from './contacts-data-table/contacts-data-table.component';\nimport { ContactsTableMenuComponent } from './contacts-table-menu/contacts-table-menu.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'vex-contacts-table',\n  templateUrl: './contacts-table.component.html',\n  animations: [stagger40ms, scaleIn400ms, fadeInRight400ms],\n  styles: [\n    `\n      .mat-drawer-container {\n        background: transparent !important;\n      }\n    `\n  ],\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatSidenavModule,\n    ContactsTableMenuComponent,\n    ContactsDataTableComponent,\n    AsyncPipe\n  ]\n})\nexport class ContactsTableComponent implements OnInit {\n  searchCtrl = new UntypedFormControl();\n\n  searchStr$ = this.searchCtrl.valueChanges.pipe(debounceTime(10));\n\n  menuOpen = false;\n\n  activeCategory:\n    | 'frequently'\n    | 'starred'\n    | 'all'\n    | 'family'\n    | 'friends'\n    | 'colleagues'\n    | 'business' = 'all';\n  tableData = contactsData;\n  tableColumns: TableColumn<Contact>[] = [\n    {\n      label: '',\n      property: 'selected',\n      type: 'checkbox',\n      cssClasses: ['w-6']\n    },\n    {\n      label: '',\n      property: 'imageSrc',\n      type: 'image',\n      cssClasses: ['min-w-9']\n    },\n    {\n      label: 'NAME',\n      property: 'name',\n      type: 'text',\n      cssClasses: ['font-medium']\n    },\n    {\n      label: 'EMAIL',\n      property: 'email',\n      type: 'text',\n      cssClasses: ['text-secondary']\n    },\n    {\n      label: 'PHONE',\n      property: 'phone',\n      type: 'text',\n      cssClasses: ['text-secondary']\n    },\n    {\n      label: '',\n      property: 'starred',\n      type: 'button',\n      cssClasses: ['text-secondary', 'w-10']\n    },\n    {\n      label: '',\n      property: 'menu',\n      type: 'button',\n      cssClasses: ['text-secondary', 'w-10']\n    }\n  ];\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openContact(id?: Contact['id']) {\n    this.dialog.open(ContactsEditComponent, {\n      data: id || null,\n      width: '600px'\n    });\n  }\n\n  toggleStar(id: Contact['id']) {\n    const contact = this.tableData.find((c) => c.id === id);\n\n    if (contact) {\n      contact.starred = !contact.starred;\n    }\n  }\n\n  setData(data: Contact[]) {\n    this.tableData = data;\n    this.menuOpen = false;\n  }\n\n  openMenu() {\n    this.menuOpen = true;\n  }\n}\n","<div class=\"w-full h-full flex flex-col\">\n  <div class=\"px-6 pt-6 pb-20 bg-primary-600/10 flex-none\">\n    <div class=\"flex items-center container px-0\">\n      <button\n        (click)=\"openMenu()\"\n        @scaleIn\n        class=\"sm:hidden text-on-primary-600\"\n        mat-icon-button\n        type=\"button\">\n        <mat-icon svgIcon=\"mat:menu\"></mat-icon>\n      </button>\n      <h2\n        class=\"display-1 font-bold m-0 flex items-center w-full max-w-3xs mr-6\">\n        <span\n          @scaleIn\n          class=\"w-12 h-12 rounded-full text-primary-600 ltr:mr-4 rtl:ml-4 bg-primary-600/10 hidden sm:flex items-center justify-center\">\n          <mat-icon svgIcon=\"mat:contacts\"></mat-icon>\n        </span>\n        <span @fadeInRight class=\"block\">Contacts</span>\n      </h2>\n\n      <div\n        class=\"hidden sm:flex items-center bg-foreground rounded-full overflow-hidden relative ltr:pl-5 rtl:pr-5 h-12 max-w-md w-full shadow-xl mx-auto\">\n        <mat-icon\n          class=\"text-secondary flex-none\"\n          svgIcon=\"mat:search\"></mat-icon>\n        <input\n          [formControl]=\"searchCtrl\"\n          class=\"border-0 h-12 outline-none ltr:pl-4 rtl:pr-4 placeholder:text-secondary bg-foreground flex-auto\"\n          placeholder=\"Search Contacts...\"\n          type=\"text\" />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"-mt-14 pt-0 overflow-hidden flex-1 flex container px-0\">\n    <mat-drawer-container class=\"bg-transparent flex-auto flex\">\n      <mat-drawer [(opened)]=\"menuOpen\" mode=\"over\">\n        <vex-contacts-table-menu\n          (filterChange)=\"setData($event)\"\n          (openAddNew)=\"openContact()\"\n          class=\"sm:hidden\"></vex-contacts-table-menu>\n      </mat-drawer>\n      <mat-drawer-content class=\"p-6 pt-0 flex-auto flex items-start\">\n        <vex-contacts-table-menu\n          (filterChange)=\"setData($event)\"\n          (openAddNew)=\"openContact()\"\n          class=\"hidden sm:block ltr:mr-6 rtl:ml-6\"></vex-contacts-table-menu>\n\n        <div class=\"card h-full overflow-hidden flex-auto\">\n          <vex-contacts-data-table\n            (openContact)=\"openContact($event)\"\n            (toggleStar)=\"toggleStar($event)\"\n            [columns]=\"tableColumns\"\n            [data]=\"tableData\"\n            [searchStr]=\"searchStr$ | async\"></vex-contacts-data-table>\n        </div>\n      </mat-drawer-content>\n    </mat-drawer-container>\n  </div>\n</div>\n"],"names":["EventEmitter","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","MAT_FORM_FIELD_DEFAULT_OPTIONS","stagger20ms","fadeInUp400ms","scaleFadeIn400ms","MatMenuModule","MatIconModule","MatButtonModule","MatCheckboxModule","NgClass","NgFor","NgIf","VexScrollbarComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","column_r5","label","ɵɵproperty","cssClasses","row_r13","property","ɵɵelementContainerStart","ɵɵtemplate","ContactsDataTableComponent_ng_container_3_ng_container_1_th_1_Template","ContactsDataTableComponent_ng_container_3_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ɵɵlistener","ContactsDataTableComponent_ng_container_3_ng_container_2_td_2_Template_mat_checkbox_click_1_listener","$event","stopPropagation","row_r19","ContactsDataTableComponent_ng_container_3_ng_container_2_th_1_Template","ContactsDataTableComponent_ng_container_3_ng_container_2_td_2_Template","ɵɵelement","row_r26","ɵɵsanitizeUrl","ContactsDataTableComponent_ng_container_3_ng_container_3_th_1_Template","ContactsDataTableComponent_ng_container_3_ng_container_3_td_2_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_1_td_2_Template_button_click_1_listener","restoredCtx","ɵɵrestoreView","_r38","row_r34","$implicit","ctx_r37","ɵɵnextContext","ɵɵresetView","emitToggleStar","id","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_1_td_2_mat_icon_2_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_1_td_2_mat_icon_3_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_1_th_1_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_1_td_2_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_2_td_2_Template_button_click_1_listener","_r4","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_2_th_1_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_2_td_2_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_1_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_ng_container_2_Template","ContactsDataTableComponent_ng_container_3_ng_container_1_Template","ContactsDataTableComponent_ng_container_3_ng_container_2_Template","ContactsDataTableComponent_ng_container_3_ng_container_3_Template","ContactsDataTableComponent_ng_container_3_ng_container_4_Template","type","ContactsDataTableComponent_tr_5_Template_tr_click_0_listener","_r49","row_r47","ctx_r48","openContact","emit","undefined","ContactsDataTableComponent","constructor","pageSize","pageSizeOptions","searchStr","toggleStar","visibleColumns","dataSource","ngOnInit","ngOnChanges","changes","columns","map","column","data","filter","trim","toLowerCase","event","ngAfterViewInit","paginator","sort","_","_2","selectors","viewQuery","ContactsDataTableComponent_Query","rf","ctx","provide","useValue","appearance","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","ContactsDataTableComponent_Template","ContactsDataTableComponent_ng_container_3_Template","ContactsDataTableComponent_tr_4_Template","ContactsDataTableComponent_tr_5_Template","ContactsDataTableComponent_div_6_Template","filteredData","length","ɵɵclassProp","i1","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i2","MatSortHeader","i3","MatCheckbox","i4","MatIconButton","i5","MatIcon","i6","MatMenu","MatMenuItem","MatMenuTrigger","i7","styles","animation","contactsData","fadeInRight400ms","stagger40ms","MatRippleModule","item_r1","classes","icon","ContactsTableMenuComponent_ng_container_7_a_1_Template_a_click_0_listener","_r8","ctx_r6","setFilter","ContactsTableMenuComponent_ng_container_7_a_1_mat_icon_1_Template","ɵɵpureFunction1","_c0","ctx_r2","isActive","ɵɵtextInterpolate","ContactsTableMenuComponent_ng_container_7_a_1_Template","ContactsTableMenuComponent_ng_container_7_h3_2_Template","ContactsTableMenuComponent","items","filterChange","openAddNew","activeCategory","category","c","starred","inputs","outputs","standalone","features","ContactsTableMenuComponent_Template","ContactsTableMenuComponent_Template_button_click_2_listener","ContactsTableMenuComponent_ng_container_7_Template","MatButton","MatRipple","encapsulation","scaleIn400ms","ReactiveFormsModule","UntypedFormControl","debounceTime","ContactsEditComponent","AsyncPipe","MatSidenavModule","ContactsTableComponent","dialog","searchCtrl","searchStr$","valueChanges","pipe","menuOpen","tableData","tableColumns","open","width","contact","find","setData","openMenu","ɵɵdirectiveInject","MatDialog","ContactsTableComponent_Template","ContactsTableComponent_Template_button_click_3_listener","ContactsTableComponent_Template_mat_drawer_openedChange_15_listener","ContactsTableComponent_Template_vex_contacts_table_menu_filterChange_16_listener","ContactsTableComponent_Template_vex_contacts_table_menu_openAddNew_16_listener","ContactsTableComponent_Template_vex_contacts_table_menu_filterChange_18_listener","ContactsTableComponent_Template_vex_contacts_table_menu_openAddNew_18_listener","ContactsTableComponent_Template_vex_contacts_data_table_openContact_20_listener","ContactsTableComponent_Template_vex_contacts_data_table_toggleStar_20_listener","ɵɵpipeBind1","DefaultValueAccessor","NgControlStatus","FormControlDirective","MatDrawer","MatDrawerContainer","MatDrawerContent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}