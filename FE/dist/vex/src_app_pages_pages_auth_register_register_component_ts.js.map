{"version":3,"file":"src_app_pages_pages_auth_register_register_component_ts.js","mappings":"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","sources":["./src/@vex/animations/fade-in-up.animation.ts","./src/app/pages/pages/auth/register/register.component.ts","./src/app/pages/pages/auth/register/register.component.html"],"sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInUpAnimation(duration: number) {\n  return trigger('fadeInUp', [\n    transition(':enter', [\n      style({\n        transform: 'translateY(20px)',\n        opacity: 0\n      }),\n      animate(\n        `${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`,\n        style({\n          transform: 'translateY(0)',\n          opacity: 1\n        })\n      )\n    ])\n  ]);\n}\n\nexport const fadeInUp400ms = fadeInUpAnimation(400);\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators\n} from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgIf } from '@angular/common';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'vex-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  animations: [fadeInUp400ms],\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTooltipModule,\n    NgIf,\n    MatIconModule,\n    MatCheckboxModule,\n    RouterLink\n  ]\n})\nexport class RegisterComponent {\n  form: UntypedFormGroup = this.fb.group({\n    name: ['', Validators.required],\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n    passwordConfirm: ['', Validators.required]\n  });\n\n  inputType = 'password';\n  visible = false;\n\n  constructor(\n    private router: Router,\n    private fb: UntypedFormBuilder,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  send() {\n    this.router.navigate(['/']);\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n}\n","<div class=\"w-full h-full bg-pattern flex flex-col items-center justify-center\">\n  <div @fadeInUp class=\"card overflow-hidden w-full max-w-md\">\n    <div class=\"p-6 pb-0 flex flex-col items-center justify-center\">\n      <div class=\"fill-current text-center\">\n        <img class=\"w-16\" src=\"assets/img/icons/logos/nexusQtech.svg\" />\n      </div>\n    </div>\n\n    <div class=\"text-center mt-4\">\n      <h2 class=\"title m-0\">Register for an account</h2>\n      <h4 class=\"body-2 text-secondary m-0\">Simply fill out the form below</h4>\n    </div>\n\n    <div\n      [formGroup]=\"form\"\n      class=\"p-6 flex flex-col gap-4 flex-auto flex flex-col\">\n      <div>\n        <mat-form-field class=\"flex-1 block\">\n          <mat-label>Name</mat-label>\n          <input formControlName=\"name\" matInput required />\n        </mat-form-field>\n\n        <mat-form-field class=\"flex-1 block\">\n          <mat-label>E-Mail</mat-label>\n          <input formControlName=\"email\" matInput required />\n        </mat-form-field>\n\n        <mat-form-field class=\"flex-1 block\">\n          <mat-label>Password</mat-label>\n          <input\n            [type]=\"inputType\"\n            formControlName=\"password\"\n            matInput\n            required />\n          <button\n            (click)=\"toggleVisibility()\"\n            mat-icon-button\n            matIconSuffix\n            matTooltip=\"Toggle Visibility\"\n            type=\"button\">\n            <mat-icon *ngIf=\"visible\" svgIcon=\"mat:visibility\"></mat-icon>\n            <mat-icon *ngIf=\"!visible\" svgIcon=\"mat:visibility_off\"></mat-icon>\n          </button>\n        </mat-form-field>\n\n        <mat-form-field class=\"flex-1 block\">\n          <mat-label>Password (Confirm)</mat-label>\n          <input\n            [type]=\"inputType\"\n            formControlName=\"passwordConfirm\"\n            matInput\n            required />\n          <button\n            (click)=\"toggleVisibility()\"\n            mat-icon-button\n            matIconSuffix\n            matTooltip=\"Toggle Visibility\"\n            type=\"button\">\n            <mat-icon *ngIf=\"visible\" svgIcon=\"mat:visibility\"></mat-icon>\n            <mat-icon *ngIf=\"!visible\" svgIcon=\"mat:visibility_off\"></mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <div class=\"flex items-center justify-center\">\n        <mat-checkbox class=\"caption\"\n        >I accept the <a>terms and conditions.</a></mat-checkbox\n        >\n      </div>\n      <button (click)=\"send()\" color=\"primary\" mat-raised-button type=\"button\">\n        CREATE ACCOUNT\n      </button>\n      <p class=\"text-secondary text-center\">\n        Already have an account?<br />\n        <a [routerLink]=\"['/login']\">Sign in here</a>\n      </p>\n    </div>\n  </div>\n</div>\n"],"names":["animate","style","transition","trigger","fadeInUpAnimation","duration","transform","opacity","fadeInUp400ms","ReactiveFormsModule","Validators","RouterLink","MatCheckboxModule","MatIconModule","NgIf","MatTooltipModule","MatButtonModule","MatInputModule","MatFormFieldModule","i0","ɵɵelement","RegisterComponent","constructor","router","fb","cd","form","group","name","required","email","password","passwordConfirm","inputType","visible","send","navigate","toggleVisibility","markForCheck","_","ɵɵdirectiveInject","i1","Router","i2","UntypedFormBuilder","ChangeDetectorRef","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵlistener","RegisterComponent_Template_button_click_24_listener","ɵɵtemplate","RegisterComponent_mat_icon_25_Template","RegisterComponent_mat_icon_26_Template","RegisterComponent_Template_button_click_31_listener","RegisterComponent_mat_icon_32_Template","RegisterComponent_mat_icon_33_Template","RegisterComponent_Template_button_click_39_listener","ɵɵadvance","ɵɵproperty","undefined","ɵɵpureFunction0","_c0","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i3","MatFormField","MatLabel","MatSuffix","i4","MatInput","i5","MatButton","MatIconButton","i6","MatTooltip","i7","MatIcon","i8","MatCheckbox","styles","data","animation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}