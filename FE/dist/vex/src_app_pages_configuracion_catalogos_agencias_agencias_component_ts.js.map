{"version":3,"file":"src_app_pages_configuracion_catalogos_agencias_agencias_component_ts.js","mappings":"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","sources":["./src/app/core/services/agency.service.ts","./src/app/pages/configuracion/catalogos/agencias/agencia-edit-dialog/agencia-edit-dialog.component.ts","./src/app/pages/configuracion/catalogos/agencias/agencia-edit-dialog/agencia-edit-dialog.component.html","./src/app/pages/configuracion/catalogos/agencias/agencias.component.ts","./src/app/pages/configuracion/catalogos/agencias/agencias.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiBaseService } from './api-base.service';\n\nexport interface Agency {\n  Id: number;\n  Name: string;\n  IdAgency?: string;\n  Enabled: number;\n  RegistrationDate?: string;\n  UpdateDate?: string;\n  IdLastUserUpdate?: number;\n  // Campo adicional siempre incluido\n  LastUserUpdateName?: string;\n}\n\nexport interface AgencyFilters {\n  name?: string;\n  enabled?: number;\n  date_from?: string;\n  date_to?: string;\n}\n\nexport interface AgencySearchParams {\n  enabled?: boolean;\n  search?: string;\n  limit?: number;\n  offset?: number;\n  sort_by?: string;\n  sort_order?: 'ASC' | 'DESC';\n}\n\nexport interface AgencyResponse {\n  success: boolean;\n  message: string;\n  data?: any;\n}\n\nexport interface AgencyListResponse extends AgencyResponse {\n  data: {\n    agencies: Agency[];\n    total: number;\n    limit?: number;\n    offset?: number;\n    count: number;\n    sort_by?: string;\n    sort_order?: string;\n  };\n}\n\nexport interface AgencyStatsResponse extends AgencyResponse {\n  data: {\n    total: number;\n    enabled: number;\n    disabled: number;\n  };\n}\n\nexport interface PaginatedAgencyResponse {\n  agencies: Agency[];\n  total: number;\n  per_page: number;\n  current_page: number;\n  total_pages: number;\n  has_next: boolean;\n  has_prev: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgencyService {\n  private readonly API_URL = 'agency';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) {}\n\n  /**\n   * Obtener todas las agencias con filtros y paginación\n   */\n  getAgencies(params: AgencySearchParams = {}): Observable<AgencyListResponse> {\n    let httpParams = new HttpParams();\n\n    if (params.enabled !== undefined) {\n      httpParams = httpParams.set('enabled', params.enabled.toString());\n    }\n\n    if (params.search) {\n      httpParams = httpParams.set('search', params.search);\n    }\n\n    if (params.limit) {\n      httpParams = httpParams.set('limit', params.limit.toString());\n    }\n\n    if (params.offset) {\n      httpParams = httpParams.set('offset', params.offset.toString());\n    }\n\n    if (params.sort_by) {\n      httpParams = httpParams.set('sort_by', params.sort_by);\n    }\n\n    if (params.sort_order) {\n      httpParams = httpParams.set('sort_order', params.sort_order);\n    }\n\n    const url = this.apiBaseService.buildApiUrl(this.API_URL);\n    console.log('🏢 AgencyService - URL construida:', url);\n    console.log('🏢 AgencyService - Parámetros:', httpParams);\n    \n    return this.http.get<AgencyListResponse>(url, { params: httpParams });\n  }\n\n  /**\n   * Obtener agencias con paginación avanzada\n   */\n  getAgenciesPaginated(\n    page: number = 1,\n    perPage: number = 20,\n    filters: AgencyFilters = {},\n    sortBy: string = 'Name',\n    sortOrder: 'ASC' | 'DESC' = 'ASC'\n  ): Observable<PaginatedAgencyResponse> {\n    const offset = (page - 1) * perPage;\n    \n    let httpParams = new HttpParams()\n      .set('limit', perPage.toString())\n      .set('offset', offset.toString())\n      .set('sort_by', sortBy)\n      .set('sort_order', sortOrder);\n\n    // Aplicar filtros\n    if (filters.name) {\n      httpParams = httpParams.set('search', filters.name);\n    }\n\n    if (filters.enabled !== undefined) {\n      httpParams = httpParams.set('enabled', filters.enabled.toString());\n    }\n\n    return this.http.get<AgencyListResponse>(this.apiBaseService.buildApiUrl(this.API_URL), { params: httpParams })\n      .pipe(\n        map(response => {\n          if (response.success && response.data) {\n            const totalPages = Math.ceil(response.data.total / perPage);\n            return {\n              agencies: response.data.agencies,\n              total: response.data.total,\n              per_page: perPage,\n              current_page: page,\n              total_pages: totalPages,\n              has_next: page < totalPages,\n              has_prev: page > 1\n            };\n          }\n          throw new Error(response.message || 'Error al obtener agencias');\n        })\n      );\n  }\n\n  /**\n   * Obtener agencia por ID\n   */\n  getAgencyById(id: number): Observable<AgencyResponse> {\n    return this.http.get<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  /**\n   * Crear nueva agencia\n   */\n  createAgency(agency: Partial<Agency>): Observable<AgencyResponse> {\n    return this.http.post<AgencyResponse>(this.apiBaseService.buildApiUrl(this.API_URL), agency);\n  }\n\n  /**\n   * Actualizar agencia existente\n   */\n  updateAgency(id: number, agency: Partial<Agency>): Observable<AgencyResponse> {\n    return this.http.put<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, agency);\n  }\n\n  /**\n   * Eliminar agencia (soft delete por defecto)\n   */\n  deleteAgency(id: number, force: boolean = false): Observable<AgencyResponse> {\n    const params = force ? new HttpParams().set('force', 'true') : new HttpParams();\n    return this.http.delete<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, { params });\n  }\n\n  /**\n   * Cambiar estado de habilitación de una agencia\n   */\n  toggleAgencyStatus(id: number): Observable<AgencyResponse> {\n    return this.http.patch<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/toggle-status`, {});\n  }\n\n  /**\n   * Buscar agencias por nombre\n   */\n  searchAgencies(query: string): Observable<AgencyResponse> {\n    const params = new HttpParams().set('q', query);\n    return this.http.get<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/search`, { params });\n  }\n\n\n\n  /**\n   * Obtener estadísticas de agencias\n   */\n  getAgencyStats(): Observable<AgencyStatsResponse> {\n    return this.http.get<AgencyStatsResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/stats`);\n  }\n\n  /**\n   * Obtener agencias habilitadas (para dropdowns, etc.)\n   */\n  getEnabledAgencies(): Observable<AgencyListResponse> {\n    return this.getAgencies({ enabled: true, sort_by: 'Name', sort_order: 'ASC' });\n  }\n\n  /**\n   * Validar datos de agencia antes de enviar\n   */\n  validateAgencyData(agency: Partial<Agency>): { valid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    if (!agency.Name || agency.Name.trim().length < 3) {\n      errors.push('El nombre debe tener al menos 3 caracteres');\n    }\n\n    if (agency.Name && agency.Name.length > 600) {\n      errors.push('El nombre no puede exceder 600 caracteres');\n    }\n\n    if (agency.IdAgency && agency.IdAgency.length > 50) {\n      errors.push('El IdAgency no puede exceder 50 caracteres');\n    }\n\n    if (agency.Enabled !== undefined && ![0, 1].includes(agency.Enabled)) {\n      errors.push('El estado debe ser 0 o 1');\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors\n    };\n  }\n\n  /**\n   * Preparar datos de agencia para envío\n   */\n  prepareAgencyData(agency: Partial<Agency>, isUpdate: boolean = false): Partial<Agency> {\n    const preparedData: Partial<Agency> = {};\n\n    if (agency.Name) {\n      preparedData.Name = agency.Name.trim();\n    }\n\n    if (agency.IdAgency !== undefined) {\n      preparedData.IdAgency = agency.IdAgency || undefined;\n    }\n\n    if (agency.IdAgency !== undefined) {\n      preparedData.IdAgency = agency.IdAgency || undefined;\n    }\n\n    if (agency.Enabled !== undefined) {\n      preparedData.Enabled = agency.Enabled;\n    }\n\n    return preparedData;\n  }\n\n  /**\n   * Mapear respuesta de agencia a interfaz local\n   */\n  mapAgencyResponse(response: any): Agency {\n    return {\n      Id: response.Id,\n      Name: response.Name,\n      IdAgency: response.IdAgency || undefined,\n      Enabled: response.Enabled,\n      RegistrationDate: response.RegistrationDate || undefined,\n      UpdateDate: response.UpdateDate || undefined,\n      IdLastUserUpdate: response.IdLastUserUpdate || undefined,\n      LastUserUpdateName: response.LastUserUpdateName || undefined\n    };\n  }\n\n  /**\n   * Mapear múltiples respuestas de agencias\n   */\n  mapAgenciesResponse(response: any[]): Agency[] {\n    return response.map(agency => this.mapAgencyResponse(agency));\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { Agency } from '../../../../../core/services/agency.service';\nimport { AgencyService } from '../../../../../core/services/agency.service';\n\nexport interface AgenciaEditDialogData {\n  agencia: Agency;\n  mode: 'edit' | 'create';\n}\n\n@Component({\n  selector: 'app-agencia-edit-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ],\n  templateUrl: './agencia-edit-dialog.component.html'\n})\nexport class AgenciaEditDialogComponent implements OnInit {\n  agenciaForm!: FormGroup;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private agencyService: AgencyService,\n    private snackBar: MatSnackBar,\n    private dialogRef: MatDialogRef<AgenciaEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AgenciaEditDialogData\n  ) {\n    this.initializeForm();\n  }\n\n  ngOnInit(): void {\n    if (this.data.mode === 'edit') {\n      this.populateForm();\n    }\n  }\n\n  private initializeForm(): void {\n    this.agenciaForm = this.fb.group({\n      Name: ['', [Validators.required, Validators.minLength(3)]],\n      IdAgency: ['', [Validators.required, Validators.minLength(1)]],\n      Enabled: ['1', Validators.required]\n    });\n  }\n\n  private populateForm(): void {\n    if (this.data.agencia) {\n      this.agenciaForm.patchValue({\n        Name: this.data.agencia.Name,\n        IdAgency: this.data.agencia.IdAgency,\n        Enabled: this.data.agencia.Enabled\n      });\n    }\n  }\n\n\n\n  onSubmit(): void {\n    if (this.agenciaForm.valid) {\n      this.loading = true;\n      \n      if (this.data.mode === 'edit') {\n        this.updateAgencia();\n      } else {\n        this.createAgencia();\n      }\n    } else {\n      this.markFormGroupTouched();\n    }\n  }\n\n  private updateAgencia(): void {\n    const updateData = {\n      Id: this.data.agencia.Id,\n      ...this.agenciaForm.value\n    };\n\n    this.agencyService.updateAgency(Number(updateData.Id), updateData).subscribe({\n      next: (response) => {\n        this.loading = false;\n        if (response.success) {\n          this.snackBar.open('Agencia actualizada exitosamente', 'Éxito', {\n            duration: 3000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al actualizar agencia', 'Error', {\n            duration: 3000\n          });\n        }\n      },\n      error: (error) => {\n        this.loading = false;\n        this.snackBar.open('Error de conexión al actualizar agencia', 'Error', {\n          duration: 3000\n        });\n      }\n    });\n  }\n\n  private createAgencia(): void {\n    const createData = this.agenciaForm.value;\n\n    this.agencyService.createAgency(createData).subscribe({\n      next: (response) => {\n        this.loading = false;\n        if (response.success) {\n          this.snackBar.open('Agencia creada exitosamente', 'Éxito', {\n            duration: 3000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al crear agencia', 'Error', {\n            duration: 3000\n          });\n        }\n      },\n      error: (error) => {\n        this.loading = false;\n        this.snackBar.open('Error de conexión al crear agencia', 'Error', {\n          duration: 3000\n        });\n      }\n    });\n  }\n\n  private markFormGroupTouched(): void {\n    Object.keys(this.agenciaForm.controls).forEach(key => {\n      const control = this.agenciaForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n","<div class=\"p-6 min-w-[500px]\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <h2 class=\"text-2xl font-bold text-gray-900\">\n      {{ data.mode === 'edit' ? 'Editar Agencia' : 'Nueva Agencia' }}\n    </h2>\n    <button mat-icon-button (click)=\"onCancel()\" matTooltip=\"Cerrar\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Formulario -->\n  <form [formGroup]=\"agenciaForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-4\">\n    <!-- Nombre -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Nombre de la Agencia</mat-label>\n      <input \n        matInput \n        formControlName=\"Name\" \n        placeholder=\"Ej: HONDA GALERIAS\"\n        maxlength=\"100\">\n      <mat-hint>Nombre completo de la agencia</mat-hint>\n      <mat-error *ngIf=\"agenciaForm.get('Name')?.hasError('required')\">\n        El nombre es requerido\n      </mat-error>\n      <mat-error *ngIf=\"agenciaForm.get('Name')?.hasError('minlength')\">\n        El nombre debe tener al menos 3 caracteres\n      </mat-error>\n    </mat-form-field>\n\n    <!-- Código de Agencia -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Nd de Agencia</mat-label>\n      <input \n        matInput \n        formControlName=\"IdAgency\" \n        placeholder=\"Ej: 10017\"\n        maxlength=\"20\">\n      <mat-hint>Código único de identificación</mat-hint>\n      <mat-error *ngIf=\"agenciaForm.get('IdAgency')?.hasError('required')\">\n        El código es requerido\n      </mat-error>\n      <mat-error *ngIf=\"agenciaForm.get('IdAgency')?.hasError('minlength')\">\n        El código debe tener al menos 1 carácter\n      </mat-error>\n    </mat-form-field>\n\n    <!-- Estado -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Estado</mat-label>\n      <mat-select formControlName=\"Enabled\">\n        <mat-option value=\"1\">Activo</mat-option>\n        <mat-option value=\"0\">Inactivo</mat-option>\n      </mat-select>\n      <mat-hint>Estado actual de la agencia</mat-hint>\n    </mat-form-field>\n\n    <!-- Información adicional (solo lectura en modo edición) -->\n    <div *ngIf=\"data.mode === 'edit'\" class=\"bg-gray-50 p-4 rounded-lg\">\n      <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Información del Sistema</h3>\n      <div class=\"grid grid-cols-2 gap-4 text-sm\">\n        <div>\n          <span class=\"text-gray-500\">ID:</span>\n          <span class=\"ml-2 font-mono\">{{ data.agencia.Id }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Último Usuario:</span>\n          <span class=\"ml-2\">{{ data.agencia.LastUserUpdateName || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Fecha Registro:</span>\n          <span class=\"ml-2\">{{ data.agencia.RegistrationDate || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Última Actualización:</span>\n          <span class=\"ml-2\">{{ data.agencia.UpdateDate || 'N/A' }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"flex justify-end space-x-3 pt-4 border-t\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancel()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"primary\"\n        [disabled]=\"agenciaForm.invalid || loading\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\">{{ data.mode === 'edit' ? 'save' : 'add' }}</mat-icon>\n        {{ data.mode === 'edit' ? 'Guardar Cambios' : 'Crear Agencia' }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule, PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, Sort, MatSort } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { Agency } from '../../../../core/services/agency.service';\nimport { AgencyService } from '../../../../core/services/agency.service';\nimport { AuthService } from '../../../../core/services/auth.service';\nimport { AgenciaEditDialogComponent, AgenciaEditDialogData } from './agencia-edit-dialog/agencia-edit-dialog.component';\n\n@Component({\n  selector: 'app-agencias',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatCardModule,\n    MatDividerModule\n  ],\n  templateUrl: './agencias.component.html'\n})\nexport class AgenciasComponent implements OnInit, AfterViewInit {\n  agencias: Agency[] = [];\n  dataSource = new MatTableDataSource<Agency>([]);\n  totalAgencias = 0;\n  searchTerm = '';\n  statusFilter = '';\n  \n  displayedColumns: string[] = ['Id', 'IdAgency', 'Name', 'Enabled', 'acciones'];\n  \n  loading = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private agencyService: AgencyService,\n    private authService: AuthService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    // Verificar autenticación antes de cargar datos\n    if (this.checkAuthentication()) {\n      this.loadAgencias();\n    }\n  }\n\n  /**\n   * Verificar si el usuario está autenticado\n   */\n  private checkAuthentication(): boolean {\n    const isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getToken();\n    \n    if (!isAuthenticated || !token) {\n      this.snackBar.open('Debes iniciar sesión para acceder a esta funcionalidad', 'Error', {\n        duration: 5000\n      });\n      \n      // Aquí podrías redirigir al login\n      // this.router.navigate(['/login']);\n      \n      return false;\n    }\n    \n    return true;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    \n    // Configurar filtro personalizado\n    this.dataSource.filterPredicate = (data: Agency, filter: string) => {\n      const searchTerm = filter.toLowerCase();\n      const matches = data.Name.toLowerCase().includes(searchTerm) ||\n             (data.IdAgency ? data.IdAgency.toLowerCase().includes(searchTerm) : false);\n      \n      return matches;\n    };\n  }\n\n  loadAgencias(): void {\n    this.loading = true;\n    \n    this.agencyService.getAgencies().subscribe({\n      next: (response: any) => {\n        \n        if (response.success && response.data?.agencies) {\n          \n          // Convertir a array si no lo es\n          const agenciasArray = Array.isArray(response.data.agencies) \n            ? response.data.agencies \n            : Object.values(response.data.agencies);\n          \n          this.agencias = agenciasArray;\n          this.totalAgencias = response.data.total;\n          \n          // Asignar al DataSource usando setData o creando un nuevo DataSource\n          this.dataSource = new MatTableDataSource<Agency>(this.agencias);\n          \n          // Reconfigurar paginator y sort\n          if (this.paginator) {\n            this.dataSource.paginator = this.paginator;\n          }\n          if (this.sort) {\n            this.dataSource.sort = this.sort;\n          }\n          \n          this.applyFilter();\n        } else {\n          this.snackBar.open(response.message || 'Error al cargar agencias', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error: any) => {\n        \n        this.snackBar.open('Error de conexión al cargar agencias', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n        this.cdr.markForCheck();\n      }\n    });\n    \n  }\n\n  applyFilter(): void {\n    \n    // Combinar filtros\n    let filterValue = '';\n    \n    if (this.searchTerm) {\n      filterValue = this.searchTerm;\n    }\n    \n    // Aplicar filtro de búsqueda\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    \n    // Aplicar filtro de estado si existe\n    if (this.statusFilter !== '') {\n      const status = this.statusFilter === 'true' ? 1 : 0;\n      \n      this.dataSource.data = this.agencias.filter(agencia => \n        agencia.Enabled === status &&\n        (filterValue === '' || \n         agencia.Name.toLowerCase().includes(filterValue.toLowerCase()) ||\n         (agencia.IdAgency && agencia.IdAgency.toLowerCase().includes(filterValue.toLowerCase())))\n      );\n      \n    } else {\n      this.dataSource.data = this.agencias;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n    \n    // Reset paginator to first page\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n    \n  }\n\n  refreshData(): void {\n    \n    // Mostrar mensaje de recarga\n    this.snackBar.open('Recargando datos...', 'Info', {\n      duration: 1000\n    });\n    \n    // Recargar datos\n    this.loadAgencias();\n  }\n\n  /**\n   * Limpiar todos los filtros aplicados\n   */\n  clearFilters(): void {\n    \n    // Verificar si hay filtros activos\n    const hasActiveFilters = this.searchTerm || this.statusFilter;\n    \n    if (!hasActiveFilters) {\n      this.snackBar.open('No hay filtros activos para limpiar', 'Info', {\n        duration: 2000\n      });\n      return;\n    }\n    \n    // Limpiar filtros\n    this.searchTerm = '';\n    this.statusFilter = '';\n    \n    // Resetear la tabla a su estado original\n    this.dataSource.data = this.agencias;\n    this.dataSource.filter = '';\n    \n    // Resetear paginador a la primera página\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n    \n    // Mostrar mensaje de confirmación\n    this.snackBar.open('Filtros limpiados exitosamente', 'Éxito', {\n      duration: 2000\n    });\n    \n    // Forzar detección de cambios\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Verificar si hay filtros activos\n   */\n  hasActiveFilters(): boolean {\n    return !!(this.searchTerm || this.statusFilter);\n  }\n\n  /**\n   * Recargar datos con confirmación\n   */\n  refreshDataWithConfirmation(): void {\n    if (confirm('¿Estás seguro de que quieres recargar los datos? Esto sobrescribirá cualquier cambio no guardado.')) {\n      this.refreshData();\n    }\n  }\n\n  /**\n   * Recargar datos silenciosamente (sin mensajes)\n   */\n  refreshDataSilent(): void {\n    this.loadAgencias();\n  }\n\n  openCreateDialog(): void {\n    const dialogData: AgenciaEditDialogData = {\n      agencia: {} as Agency,\n      mode: 'create'\n    };\n\n    const dialogRef = this.dialog.open(AgenciaEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  openEditDialog(agencia: Agency): void {\n    const dialogData: AgenciaEditDialogData = {\n      agencia: agencia,\n      mode: 'edit'\n    };\n\n    const dialogRef = this.dialog.open(AgenciaEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n\n\n  deleteAgencia(agencia: Agency): void {\n    if (confirm(`¿Estás seguro de que quieres eliminar PERMANENTEMENTE la agencia \"${agencia.Name}\"?\\n\\nEsta acción no se puede deshacer.`)) {\n      console.log('🗑️ Intentando eliminar agencia:', agencia);\n      \n      this.agencyService.deleteAgency(Number(agencia.Id), true).subscribe({\n        next: (response: any) => {\n          console.log('📡 Respuesta del API:', response);\n          \n          if (response.success) {\n            console.log('✅ Agencia eliminada exitosamente');\n            this.agencias = this.agencias.filter(a => a.Id !== agencia.Id);\n            this.applyFilter();\n            this.snackBar.open('Agencia eliminada exitosamente', 'Éxito', {\n              duration: 2000\n            });\n          } else {\n            console.log('❌ Error en la respuesta:', response.message);\n            this.snackBar.open(response.message || 'Error al eliminar agencia', 'Error', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error: any) => {\n          console.log('💥 Error en la petición:', error);\n          this.snackBar.open('Error al eliminar agencia', 'Error', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n  getPageRange(): string {\n    if (!this.paginator || this.dataSource.filteredData.length === 0) {\n      return '0-0';\n    }\n    \n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize + 1;\n    const endIndex = Math.min(startIndex + this.paginator.pageSize - 1, this.dataSource.filteredData.length);\n    \n    return `${startIndex}-${endIndex}`;\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-4\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900\">Gestión de Agencias</h1>\n      <p class=\"text-gray-600 mt-1\">Administra las agencias del sistema</p>\n    </div>\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"openCreateDialog()\"\n      class=\"flex items-center gap-2\">\n      <mat-icon>add_circle</mat-icon>\n      Nueva Agencia \n    </button>\n  </div>\n\n  <!-- Filtros -->\n  <div class=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      \n      <!-- Espacio vacío a la izquierda -->\n      <div></div>\n      \n      <!-- Botones de acción a la derecha -->\n      <div class=\"flex items-center gap-3\">\n        <!-- Botón de Limpiar Filtros -->\n        <button \n          mat-stroked-button \n          color=\"warn\" \n          (click)=\"clearFilters()\"\n          [disabled]=\"!searchTerm && !statusFilter\"\n          matTooltip=\"Limpiar filtros\"\n          class=\"flex items-center gap-2\">\n          <mat-icon>clear_all</mat-icon>\n          Limpiar Filtros\n        </button>\n        \n        <!-- Botón de Reload en filtros -->\n        <button \n          mat-stroked-button \n          color=\"accent\" \n          (click)=\"refreshData()\"\n          [disabled]=\"loading\"\n          matTooltip=\"Recargar datos\"\n          class=\"flex items-center gap-2\">\n          <mat-icon [class.animate-spin]=\"loading\">refresh</mat-icon>\n          Recargar\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <!-- Búsqueda por texto -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Buscar agencias</mat-label>\n        <input \n          matInput \n          [(ngModel)]=\"searchTerm\" \n          (ngModelChange)=\"applyFilter()\"\n          placeholder=\"Buscar por nombre o código...\"\n          maxlength=\"100\">\n        <mat-icon matSuffix>🔍</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por estado -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Estado</mat-label>\n        <mat-select [(ngModel)]=\"statusFilter\" (ngModelChange)=\"applyFilter()\">\n          <mat-option value=\"\">Todos</mat-option>\n          <mat-option value=\"1\">Activas</mat-option>\n          <mat-option value=\"0\">Inactivas</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <!-- Tabla -->\n  <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\" style=\"line-height: 1;\">\n      <!-- Columna ID -->\n      <ng-container matColumnDef=\"Id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-16 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          ID\n        </th>\n        <td mat-cell *matCellDef=\"let agencia\" class=\"text-xs font-mono text-gray-600 py-0\">\n          {{ agencia.Id }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Código de Agencia -->\n      <ng-container matColumnDef=\"IdAgency\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-32 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Código\n        </th>\n        <td mat-cell *matCellDef=\"let agencia\" class=\"px-1.5 py-0 rounded-full text-xs font-medium\">\n          {{ agencia.IdAgency }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Nombre -->\n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Nombre\n        </th>\n        <td mat-cell *matCellDef=\"let agencia\" class=\"text-xs py-0\">\n          {{ agencia.Name }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Estado -->\n      <ng-container matColumnDef=\"Enabled\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-24 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Estado\n        </th>\n        <td mat-cell *matCellDef=\"let agencia\" class=\"text-center\">\n          <span class=\"px-1.5 py-0.5 rounded-full text-xs font-medium\"\n                [ngClass]=\"agencia.Enabled === '1' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\">\n            {{ agencia.Enabled === '1' ? 'Activa' : 'Inactiva' }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Columna Acciones -->\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef class=\"w-28 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Acciones\n        </th>\n        <td mat-cell *matCellDef=\"let agencia\" class=\"text-center py-0\">\n          <div class=\"flex gap-0.5 justify-center items-center\">\n            <button\n              (click)=\"openEditDialog(agencia)\"\n              mat-icon-button\n              color=\"primary\"\n              matTooltip=\"Editar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">edit</mat-icon>\n            </button>\n            <button\n              (click)=\"deleteAgencia(agencia)\"\n              mat-icon-button\n              color=\"warn\"\n              matTooltip=\"Eliminar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">delete</mat-icon>\n            </button>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"!min-h-0 !h-8\"></tr>\n    </table>\n\n    <!-- Paginación -->\n    <mat-paginator \n      [pageSizeOptions]=\"[10, 25, 50, 100]\"\n      [pageSize]=\"10\"\n      [length]=\"dataSource.filteredData.length\"\n      showFirstLastButtons\n      class=\"border-t\">\n    </mat-paginator>\n  </div>\n\n  <!-- Contador de resultados -->\n  <div class=\"mt-4 text-sm text-gray-600 text-center\">\n    Mostrando {{ getPageRange() }} de {{ dataSource.filteredData.length }} agencias visibles ({{ agencias.length }} total)\n  </div>\n</div>\n"],"names":["HttpParams","map","AgencyService","constructor","http","apiBaseService","API_URL","getAgencies","params","httpParams","enabled","undefined","set","toString","search","limit","offset","sort_by","sort_order","url","buildApiUrl","console","log","get","getAgenciesPaginated","page","perPage","filters","sortBy","sortOrder","name","pipe","response","success","data","totalPages","Math","ceil","total","agencies","per_page","current_page","total_pages","has_next","has_prev","Error","message","getAgencyById","id","createAgency","agency","post","updateAgency","put","deleteAgency","force","delete","toggleAgencyStatus","patch","searchAgencies","query","getAgencyStats","getEnabledAgencies","validateAgencyData","errors","Name","trim","length","push","IdAgency","Enabled","includes","valid","prepareAgencyData","isUpdate","preparedData","mapAgencyResponse","Id","RegistrationDate","UpdateDate","IdLastUserUpdate","LastUserUpdateName","mapAgenciesResponse","_","i0","ɵɵinject","i1","HttpClient","i2","ApiBaseService","_2","factory","ɵfac","providedIn","CommonModule","ReactiveFormsModule","Validators","MatDialogModule","MAT_DIALOG_DATA","MatFormFieldModule","MatInputModule","MatSelectModule","MatButtonModule","MatIconModule","MatSnackBarModule","MatProgressSpinnerModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r4","agencia","ɵɵelement","ctx_r6","mode","AgenciaEditDialogComponent","fb","agencyService","snackBar","dialogRef","loading","initializeForm","ngOnInit","populateForm","agenciaForm","group","required","minLength","patchValue","onSubmit","updateAgencia","createAgencia","markFormGroupTouched","updateData","value","Number","subscribe","next","open","duration","close","error","createData","Object","keys","controls","forEach","key","control","markAsTouched","onCancel","ɵɵdirectiveInject","FormBuilder","i3","MatSnackBar","i4","MatDialogRef","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AgenciaEditDialogComponent_Template","rf","ctx","ɵɵlistener","AgenciaEditDialogComponent_Template_button_click_4_listener","AgenciaEditDialogComponent_Template_form_ngSubmit_7_listener","ɵɵtemplate","AgenciaEditDialogComponent_mat_error_14_Template","AgenciaEditDialogComponent_mat_error_15_Template","AgenciaEditDialogComponent_mat_error_22_Template","AgenciaEditDialogComponent_mat_error_23_Template","AgenciaEditDialogComponent_div_34_Template","AgenciaEditDialogComponent_Template_button_click_36_listener","AgenciaEditDialogComponent_mat_spinner_39_Template","AgenciaEditDialogComponent_mat_icon_40_Template","ɵɵtextInterpolate1","ɵɵproperty","tmp_2_0","hasError","tmp_3_0","tmp_4_0","tmp_5_0","invalid","i5","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","i6","MatFormField","MatLabel","MatHint","MatError","i7","MatInput","i8","MatSelect","i9","MatOption","i10","MatButton","MatIconButton","i11","MatIcon","i12","MatProgressSpinner","encapsulation","FormsModule","MatTableModule","MatTableDataSource","MatCheckboxModule","MatPaginatorModule","MatPaginator","MatSortModule","MatSort","MatTooltipModule","MatChipsModule","MatCardModule","MatDividerModule","agencia_r12","agencia_r13","agencia_r14","agencia_r15","AgenciasComponent_td_56_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r18","agencia_r16","$implicit","ctx_r17","ɵɵnextContext","ɵɵresetView","openEditDialog","AgenciasComponent_td_56_Template_button_click_5_listener","ctx_r19","deleteAgencia","AgenciasComponent","authService","dialog","cdr","agencias","dataSource","totalAgencias","searchTerm","statusFilter","displayedColumns","checkAuthentication","loadAgencias","isAuthenticated","token","getToken","ngAfterViewInit","paginator","sort","filterPredicate","filter","toLowerCase","matches","agenciasArray","Array","isArray","values","applyFilter","markForCheck","filterValue","status","firstPage","refreshData","clearFilters","hasActiveFilters","refreshDataWithConfirmation","confirm","refreshDataSilent","openCreateDialog","dialogData","width","disableClose","afterClosed","result","a","getPageRange","filteredData","startIndex","pageIndex","pageSize","endIndex","min","AuthService","MatDialog","ChangeDetectorRef","viewQuery","AgenciasComponent_Query","AgenciasComponent_Template_button_click_7_listener","AgenciasComponent_Template_button_click_15_listener","AgenciasComponent_Template_button_click_19_listener","AgenciasComponent_Template_input_ngModelChange_27_listener","$event","AgenciasComponent_Template_mat_select_ngModelChange_33_listener","ɵɵelementContainerStart","AgenciasComponent_th_43_Template","AgenciasComponent_td_44_Template","ɵɵelementContainerEnd","AgenciasComponent_th_46_Template","AgenciasComponent_td_47_Template","AgenciasComponent_th_49_Template","AgenciasComponent_td_50_Template","AgenciasComponent_th_52_Template","AgenciasComponent_td_53_Template","AgenciasComponent_th_55_Template","AgenciasComponent_td_56_Template","AgenciasComponent_tr_57_Template","AgenciasComponent_tr_58_Template","ɵɵclassProp","ɵɵpureFunction0","_c0","ɵɵtextInterpolate3","NgClass","NgModel","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSuffix","i13","i14","i15","MatSortHeader","i16","MatTooltip"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}