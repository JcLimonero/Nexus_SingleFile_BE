{"version":3,"file":"src_app_pages_procesos_integracion_integracion_component_ts.js","mappings":"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","sources":["./src/app/core/services/default-agency.service.ts","./src/app/pages/procesos/integracion/client-selection-dialog.component.ts","./src/app/pages/procesos/integracion/integracion.component.ts","./src/app/pages/procesos/integracion/integracion.component.html","./src/app/pages/procesos/integracion/order-selection-dialog.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport interface Agencia {\n  Id: number;\n  Name: string;\n  Enabled: boolean | number | string; // Puede ser boolean, number o string\n  [key: string]: any; // Para campos adicionales\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultAgencyService {\n  private apiUrl = environment.apiBaseUrl;\n  \n  // BehaviorSubject para mantener el estado de la agencia seleccionada\n  private selectedAgencySubject = new BehaviorSubject<number | null>(null);\n  public selectedAgency$ = this.selectedAgencySubject.asObservable();\n  \n  // BehaviorSubject para mantener el estado de las agencias disponibles\n  private agenciasSubject = new BehaviorSubject<Agencia[]>([]);\n  public agencias$ = this.agenciasSubject.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Obtener agencias disponibles\n   */\n  obtenerAgencias(): Observable<Agencia[]> {\n    return this.http.get<any>(`${this.apiUrl}/api/agency`).pipe(\n      map(response => {\n        if (response && response.success && response.data && response.data.agencies) {\n          return response.data.agencies;\n        }\n        if (Array.isArray(response)) {\n          return response;\n        }\n        if (response && response.agencies && Array.isArray(response.agencies)) {\n          return response.agencies;\n        }\n        return [];\n      }),\n      tap(agencias => {\n        this.agenciasSubject.next(agencias);\n      })\n    );\n  }\n\n  /**\n   * Obtener agencia predeterminada del usuario\n   */\n  obtenerAgenciaUsuario(): Observable<number | null> {\n    return this.http.get<any>(`${this.apiUrl}/api/user/profile`).pipe(\n      map(response => {\n        if (response && response.success && response.data) {\n          return response.data.DefaultAgency;\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Obtener la agencia predeterminada del usuario con reintentos\n   */\n  private obtenerAgenciaUsuarioConReintentos(maxReintentos: number = 3, delayMs: number = 1000): Observable<number | null> {\n    return new Observable(observer => {\n      let intentos = 0;\n      \n      const intentarObtener = () => {\n        intentos++;\n        console.log(`🔄 DefaultAgencyService - Intento ${intentos} de obtener agencia predeterminada del usuario`);\n        \n        this.obtenerAgenciaUsuario().subscribe({\n          next: (defaultAgencyId) => {\n            console.log(`✅ DefaultAgencyService - Agencia predeterminada obtenida exitosamente en intento ${intentos}:`, defaultAgencyId);\n            observer.next(defaultAgencyId);\n            observer.complete();\n          },\n          error: (error) => {\n            console.warn(`⚠️ DefaultAgencyService - Intento ${intentos} falló:`, error);\n            console.error(`🔍 DefaultAgencyService - Detalles del error:`, {\n              status: error.status,\n              statusText: error.statusText,\n              message: error.message,\n              error: error.error\n            });\n            \n            if (intentos < maxReintentos) {\n              console.log(`🔄 DefaultAgencyService - Reintentando en ${delayMs}ms... (${intentos}/${maxReintentos})`);\n              setTimeout(intentarObtener, delayMs);\n            } else {\n              console.error(`❌ DefaultAgencyService - Todos los ${maxReintentos} intentos fallaron`);\n              observer.error(error);\n            }\n          }\n        });\n      };\n      \n      intentarObtener();\n    });\n  }\n\n  /**\n   * Establecer agencia predeterminada del usuario\n   * @param autoSelect Si es true, selecciona automáticamente una agencia\n   * @returns Observable<number | null> que devuelve el ID de la agencia seleccionada\n   */\n  establecerAgenciaPredeterminada(autoSelect: boolean = true): Observable<number | null> {\n    return new Observable(observer => {\n      console.log('🔄 DefaultAgencyService - Iniciando establecimiento de agencia predeterminada...');\n      console.log('📊 DefaultAgencyService - Agencias disponibles en el servicio:', this.agenciasSubject.value);\n      \n      // Intentar obtener la agencia predeterminada con reintentos\n      this.obtenerAgenciaUsuarioConReintentos().subscribe({\n        next: (defaultAgencyId) => {\n          console.log('👤 DefaultAgencyService - Agencia predeterminada del usuario obtenida:', defaultAgencyId);\n          let agenciaSeleccionada: number | null = null;\n          \n          if (defaultAgencyId && this.agenciasSubject.value.length > 0) {\n            // Buscar la agencia predeterminada del usuario en la lista\n            const agenciaPredeterminada = this.agenciasSubject.value.find(ag => ag.Id === defaultAgencyId);\n            if (agenciaPredeterminada) {\n              console.log('✅ DefaultAgencyService - Agencia predeterminada del usuario encontrada:', agenciaPredeterminada);\n              agenciaSeleccionada = defaultAgencyId;\n            } else {\n              // Si no se encuentra la agencia predeterminada, seleccionar la primera\n              if (autoSelect) {\n                console.log('⚠️ DefaultAgencyService - Agencia predeterminada del usuario no encontrada, seleccionando primera agencia');\n                agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n                console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n              }\n            }\n          } else {\n            // Si el usuario no tiene agencia predeterminada, seleccionar la primera de la lista\n            if (autoSelect && this.agenciasSubject.value.length > 0) {\n              console.log('ℹ️ DefaultAgencyService - Usuario sin agencia predeterminada, seleccionando primera agencia de la lista');\n              agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n              console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n            }\n          }\n          \n          // Actualizar el BehaviorSubject\n          if (agenciaSeleccionada) {\n            console.log('🎯 DefaultAgencyService - Estableciendo agencia seleccionada:', agenciaSeleccionada);\n            this.selectedAgencySubject.next(agenciaSeleccionada);\n          }\n          \n          observer.next(agenciaSeleccionada);\n          observer.complete();\n        },\n        error: (error) => {\n          console.error('❌ DefaultAgencyService - Error obteniendo agencia predeterminada después de reintentos:', error);\n          console.warn('⚠️ DefaultAgencyService - No se pudo obtener agencia predeterminada, seleccionando primera agencia de la lista');\n          // En caso de error, seleccionar la primera agencia disponible si está habilitado\n          let agenciaSeleccionada: number | null = null;\n          if (autoSelect && this.agenciasSubject.value.length > 0) {\n            agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n            console.log('ℹ️ DefaultAgencyService - Seleccionada primera agencia por defecto:', agenciaSeleccionada);\n            console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n            this.selectedAgencySubject.next(agenciaSeleccionada);\n          }\n          \n          observer.next(agenciaSeleccionada);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  /**\n   * Seleccionar una agencia específica\n   */\n  seleccionarAgencia(agenciaId: number): void {\n    this.selectedAgencySubject.next(agenciaId);\n  }\n\n  /**\n   * Obtener la agencia actualmente seleccionada\n   */\n  getAgenciaSeleccionada(): number | null {\n    return this.selectedAgencySubject.value;\n  }\n\n  /**\n   * Obtener las agencias disponibles\n   */\n  getAgencias(): Agencia[] {\n    return this.agenciasSubject.value;\n  }\n\n  /**\n   * Limpiar la selección de agencia\n   */\n  limpiarSeleccion(): void {\n    this.selectedAgencySubject.next(null);\n  }\n\n  /**\n   * Verificar si una agencia está habilitada\n   */\n  esAgenciaHabilitada(agencia: Agencia): boolean {\n    return agencia && this.esHabilitado(agencia.Enabled);\n  }\n\n  /**\n   * Método de utilidad para validar estado habilitado de cualquier campo\n   */\n  private esHabilitado(valor: any): boolean {\n    if (valor === null || valor === undefined) {\n      return false;\n    }\n    \n    // Convertir a string para comparación segura\n    const valorStr = String(valor).toLowerCase();\n    return valorStr === 'true' || valorStr === '1' || valorStr === 'enabled';\n  }\n\n  /**\n   * Obtener agencias habilitadas\n   */\n  getAgenciasHabilitadas(): Agencia[] {\n    return this.agenciasSubject.value.filter(ag => this.esAgenciaHabilitada(ag));\n  }\n\n  /**\n   * Obtener agencias por estado (habilitadas o deshabilitadas)\n   */\n  getAgenciasPorEstado(habilitadas: boolean = true): Agencia[] {\n    return this.agenciasSubject.value.filter(ag => this.esAgenciaHabilitada(ag) === habilitadas);\n  }\n\n  /**\n   * Verificar si hay agencias disponibles\n   */\n  tieneAgencias(): boolean {\n    return this.agenciasSubject.value.length > 0;\n  }\n\n  /**\n   * Verificar si hay agencias habilitadas\n   */\n  tieneAgenciasHabilitadas(): boolean {\n    return this.getAgenciasHabilitadas().length > 0;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-client-selection-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule\n  ],\n              template: `\n                <div class=\"dialog-container\">\n                  <h2 mat-dialog-title class=\"text-xl font-semibold mb-4\">\n                    <mat-icon class=\"mr-2\">people</mat-icon>\n                    Seleccionar Cliente\n                  </h2>\n                  \n                  <div mat-dialog-content class=\"mb-6 dialog-content\">\n                    <p class=\"text-gray-600 mb-4 client-info\">\n                      Se encontraron {{ data.clients.length }} clientes. Selecciona uno de la lista:\n                    </p>\n                    \n                    <div class=\"overflow-x-auto table-container\">\n                      <table mat-table [dataSource]=\"data.clients\" class=\"w-full\">\n            <!-- Número de Cliente Column -->\n            <ng-container matColumnDef=\"ndCliente\">\n              <th mat-header-cell *matHeaderCellDef>N° Cliente</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <div class=\"flex items-center client-info\">\n                  <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 14px;\">fingerprint</mat-icon>\n                  <span class=\"font-medium\">{{ client.ndCliente }}</span>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- Nombre Cliente Column -->\n            <ng-container matColumnDef=\"cliente\">\n              <th mat-header-cell *matHeaderCellDef>Cliente</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <div class=\"client-info\">\n                  <div class=\"client-name\">{{ client.cliente }}</div>\n                  <div *ngIf=\"client.razonSocial && client.razonSocial !== client.cliente\" class=\"client-rfc\">Razón Social: {{ client.razonSocial }}</div>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- RFC Column -->\n            <ng-container matColumnDef=\"rfc\">\n              <th mat-header-cell *matHeaderCellDef>RFC</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <span *ngIf=\"client.rfc; else noRfc\" class=\"client-info\">{{ client.rfc }}</span>\n                <ng-template #noRfc>\n                  <span class=\"text-gray-400 italic client-info\">Sin RFC</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"email\">\n              <th mat-header-cell *matHeaderCellDef>Email</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <span *ngIf=\"client.email; else noEmail\" class=\"client-info\">{{ client.email }}</span>\n                <ng-template #noEmail>\n                  <span class=\"text-gray-400 italic client-info\">Sin email</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" \n                class=\"hover:bg-gray-50 cursor-pointer\"\n                (click)=\"selectClient(row)\"></tr>\n          </table>\n        </div>\n      </div>\n\n      <div mat-dialog-actions class=\"flex justify-end gap-2\">\n        <button mat-button (click)=\"onCancel()\" class=\"text-sm\">\n          <mat-icon class=\"mr-1\" style=\"font-size: 16px;\">close</mat-icon>\n          Cancelar\n        </button>\n      </div>\n    </div>\n  `,\n              styles: [`\n                .mat-mdc-dialog-container {\n                  --mdc-dialog-container-color: white;\n                }\n                \n                // Contenedor principal del diálogo\n                .dialog-container {\n                  width: calc(100% - 20px);\n                  height: calc(100% - 20px);\n                  margin: 10px;\n                  padding: 0;\n                  display: flex;\n                  flex-direction: column;\n                }\n                \n                // Contenedor de contenido\n                .dialog-content {\n                  flex: 1;\n                  overflow: hidden;\n                  display: flex;\n                  flex-direction: column;\n                }\n                \n                // Contenedor de la tabla\n                .table-container {\n                  flex: 1;\n                  overflow: auto;\n                  min-height: 0;\n                }\n                \n                // Estilos específicos para las tablas (tomados de validación)\n    :host ::ng-deep {\n      mat-table {\n        .mat-mdc-table {\n          border-collapse: separate !important;\n          border-spacing: 0 !important;\n          width: 100% !important;\n        }\n        \n        // Altura compacta para las filas\n        .mat-mdc-row {\n          min-height: 32px !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          border-bottom: 1px solid rgba(0,0,0,.12) !important;\n          display: table-row !important;\n          cursor: pointer;\n          \n          &:hover {\n            background-color: #f1f5f9 !important;\n          }\n        }\n        \n        .mat-mdc-header-row {\n          min-height: 32px !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          border-bottom: 1px solid rgba(0,0,0,.12) !important;\n          display: table-row !important;\n          background-color: #f8fafc !important;\n        }\n        \n        // Padding compacto para las celdas\n        .mat-mdc-cell {\n          padding: 4px 8px !important;\n          vertical-align: middle !important;\n          line-height: 1.2 !important;\n          font-size: 12px !important;\n          border: none !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          overflow: hidden !important;\n          white-space: nowrap !important;\n          text-overflow: ellipsis !important;\n          text-align: left !important;\n        }\n        \n        .mat-mdc-header-cell {\n          padding: 4px 8px !important;\n          vertical-align: middle !important;\n          line-height: 1.2 !important;\n          font-size: 12px !important;\n          font-weight: 500 !important;\n          border: none !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          overflow: hidden !important;\n          white-space: nowrap !important;\n          text-overflow: ellipsis !important;\n          text-align: left !important;\n        }\n        \n        // Eliminar cualquier espaciado extra\n        .mat-mdc-cell, .mat-mdc-header-cell {\n          margin: 0 !important;\n          border-spacing: 0 !important;\n        }\n      }\n      \n      // Estilos específicos para elementos que puedan estar causando diferencias\n      .mat-mdc-table-container {\n        overflow: hidden !important;\n      }\n      \n      .mat-mdc-table-wrapper {\n        overflow: hidden !important;\n      }\n      \n      // Estilos específicos para elementos internos\n      .mat-mdc-cell div,\n      .mat-mdc-cell span,\n      .mat-mdc-header-cell div,\n      .mat-mdc-header-cell span {\n        line-height: 1.2 !important;\n        margin: 0 !important;\n        padding: 0 !important;\n        font-size: 12px !important;\n      }\n    }\n    \n    // Estilos para el diálogo\n    .dialog-content {\n      max-height: 70vh;\n      overflow-y: auto;\n    }\n    \n    .client-info {\n      font-size: 12px;\n      line-height: 1.2;\n    }\n    \n    .client-name {\n      font-weight: 500;\n      color: #1f2937;\n    }\n    \n    .client-rfc {\n      color: #6b7280;\n      font-size: 11px;\n    }\n    \n    // Estilos específicos para columnas\n    :host ::ng-deep {\n      // Hacer la columna cliente más ancha\n      mat-table {\n        .mat-column-cliente {\n          min-width: 300px !important;\n          max-width: 400px !important;\n          width: 35% !important;\n        }\n        \n        .mat-column-ndCliente {\n          min-width: 120px !important;\n          width: 15% !important;\n        }\n        \n        .mat-column-rfc {\n          min-width: 150px !important;\n          width: 20% !important;\n        }\n        \n        .mat-column-email {\n          min-width: 200px !important;\n          width: 30% !important;\n        }\n      }\n    }\n  `]\n})\nexport class ClientSelectionDialogComponent {\n  displayedColumns: string[] = ['ndCliente', 'cliente', 'rfc', 'email'];\n\n  constructor(\n    public dialogRef: MatDialogRef<ClientSelectionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { clients: any[] }\n  ) {}\n\n  selectClient(client: any): void {\n    this.dialogRef.close(client);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { Subject, takeUntil } from 'rxjs';\nimport { DefaultAgencyService } from '../../../core/services/default-agency.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { ClientSelectionDialogComponent } from './client-selection-dialog.component';\nimport { OrderSelectionDialogComponent } from './order-selection-dialog.component';\n\n@Component({\n  selector: 'vex-integracion',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatDialogModule,\n    MatTableModule,\n    MatMenuModule,\n    MatPaginatorModule\n  ],\n  templateUrl: './integracion.component.html',\n  styleUrls: ['./integracion.component.scss']\n})\nexport class IntegracionComponent implements OnInit, OnDestroy {\n  loading = false;\n  integrationStatus = 'inactive'; // inactive, active, error\n  lastUpdate = new Date();\n  \n  // Agency filter properties\n  agencies: any[] = [];\n  selectedAgencyId: number | null = null;\n  selectedAgency: any = null;\n  agenciesLoading = true;\n  \n  // Client search properties\n  clientSearchTerm = '';\n  clients: any[] = [];\n  clientsLoading = false;\n  showClientResults = false;\n  selectedClient: any = null;\n\n  // Files/Pedidos properties\n  files: any[] = [];\n  filesLoading = false;\n  filesDisplayedColumns: string[] = [\n    'numeroPedido',\n    'numeroInventario', \n    'proceso',\n    'operacion',\n    'tipoCliente',\n    'vehiculo',\n    'year',\n    'modelo',\n    'vin',\n    'agencia',\n    'fechaRegistro',\n    'actions'\n  ];\n\n  // Paginación y búsqueda de pedidos\n  orderSearchTerm = '';\n  filteredFiles: any[] = [];\n  paginatedFiles: any[] = [];\n  pageSize = 5;\n  currentPage = 0;\n  totalItems = 0;\n\n  // User permissions\n  userRole: string = '';\n  isManagerOrAdmin: boolean = false;\n\n  // Document management properties\n  selectedFile: any = null;\n  requiredDocuments: any[] = [];\n  documentsLoading = false;\n  selectedFiles: { [key: string]: File } = {};\n  \n  // Dialog properties\n  displayedColumns: string[] = ['ndCliente', 'cliente', 'rfc', 'email', 'actions'];\n  \n  // Process properties - Fixed process for integration\n  integrationProcessId = 1; // Gestión de Clientes\n  \n  private destroy$ = new Subject<void>();\n\n  // Headers para Backblaze\n  private getBackblazeHeaders() {\n    return {\n      'X-Provider-Token': environment.backblaze.providerToken\n    };\n  }\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private defaultAgencyService: DefaultAgencyService,\n    private http: HttpClient,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    console.log('🚀 IntegracionComponent inicializado');\n    this.loadIntegrationStatus();\n    this.loadAgencies();\n    this.checkUserPermissions();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  checkUserPermissions(): void {\n    // Obtener el rol del usuario desde el token o servicio de autenticación\n    // Por ahora simulamos que es gerente/administrador\n    this.userRole = 'manager'; // Cambiar por la lógica real de obtención del rol\n    this.isManagerOrAdmin = this.userRole === 'manager' || this.userRole === 'admin';\n    \n    // Si no es gerente/admin, quitar la columna de acciones\n    if (!this.isManagerOrAdmin) {\n      this.filesDisplayedColumns = this.filesDisplayedColumns.filter(col => col !== 'actions');\n    }\n  }\n\n  loadIntegrationStatus(): void {\n    this.loading = true;\n    // Simular carga de estado de integración\n    setTimeout(() => {\n      this.integrationStatus = 'active';\n      this.loading = false;\n    }, 1000);\n  }\n\n  startIntegration(): void {\n    this.loading = true;\n    this.snackBar.open('Iniciando proceso de integración...', 'Cerrar', {\n      duration: 3000\n    });\n    \n    // Simular proceso de integración\n    setTimeout(() => {\n      this.integrationStatus = 'active';\n      this.loading = false;\n      this.snackBar.open('Integración completada exitosamente', 'Cerrar', {\n        duration: 5000\n      });\n    }, 3000);\n  }\n\n  stopIntegration(): void {\n    this.integrationStatus = 'inactive';\n    this.snackBar.open('Integración detenida', 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  getStatusColor(): string {\n    switch (this.integrationStatus) {\n      case 'active': return 'text-green-600';\n      case 'error': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  }\n\n  getStatusIcon(): string {\n    switch (this.integrationStatus) {\n      case 'active': return 'check_circle';\n      case 'error': return 'error';\n      default: return 'pause_circle';\n    }\n  }\n\n  getStatusText(): string {\n    switch (this.integrationStatus) {\n      case 'active': return 'Activa';\n      case 'error': return 'Error';\n      default: return 'Inactiva';\n    }\n  }\n\n  // Agency filter methods\n  private loadAgencies(): void {\n    this.agenciesLoading = true;\n    \n    this.defaultAgencyService.obtenerAgencias()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (agencias) => {\n          console.log('🏢 Agencias asignadas al usuario:', agencias);\n          this.agencies = agencias;\n          this.agenciesLoading = false;\n          \n          // Establecer agencia predeterminada\n          setTimeout(() => {\n            this.defaultAgencyService.establecerAgenciaPredeterminada(true).subscribe({\n              next: (agenciaId) => {\n                if (agenciaId) {\n                  console.log('✅ Agencia predeterminada establecida:', agenciaId);\n                  this.selectedAgencyId = agenciaId;\n                  this.onAgencyChange(agenciaId);\n                } else {\n                  console.warn('⚠️ No se pudo establecer agencia predeterminada');\n                }\n              },\n              error: (error) => {\n                console.error('❌ Error estableciendo agencia predeterminada:', error);\n                // Si falla, intentar seleccionar la primera agencia disponible\n                if (this.agencies.length > 0) {\n                  const primeraAgencia = this.agencies[0];\n                  console.log('🔄 Seleccionando primera agencia disponible como fallback:', primeraAgencia);\n                  this.selectedAgencyId = primeraAgencia.Id;\n                  this.onAgencyChange(primeraAgencia.Id);\n                }\n              }\n            });\n          }, 100);\n        },\n        error: (error) => {\n          console.error('🏢 Error cargando agencias:', error);\n          this.agencies = [];\n          this.agenciesLoading = false;\n          this.snackBar.open('Error al cargar las agencias', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  onAgencyChange(agencyId: number | null): void {\n    this.selectedAgencyId = agencyId;\n    // Encontrar y guardar el objeto agencia completo\n    this.selectedAgency = this.agencies.find(agency => agency.Id === agencyId) || null;\n    // Aquí puedes agregar lógica adicional cuando cambie la agencia seleccionada\n    console.log('Selected agency:', agencyId, 'Agency object:', this.selectedAgency);\n  }\n\n  clearAgencyFilter(): void {\n    this.selectedAgencyId = null;\n    this.selectedAgency = null;\n  }\n\n  hasAgencies(): boolean {\n    return this.agencies && this.agencies.length > 0;\n  }\n\n  trackByAgencyId(index: number, agency: any): number {\n    return agency.Id;\n  }\n\n  // Client search methods\n  onClientSearchChange(): void {\n    // Ya no buscamos automáticamente, solo limpiamos resultados si el campo está vacío\n    if (!this.clientSearchTerm.trim()) {\n      this.clients = [];\n      this.showClientResults = false;\n    }\n  }\n\n  searchClients(): void {\n    if (this.clientSearchTerm.trim().length < 3) {\n      this.snackBar.open('Debe ingresar al menos 3 caracteres para buscar', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    this.performClientSearch();\n  }\n\n  private performClientSearch(): void {\n    if (!this.clientSearchTerm.trim()) {\n      this.clients = [];\n      this.showClientResults = false;\n      return;\n    }\n\n    // Verificar que tenemos agencia seleccionada\n    if (!this.selectedAgencyId) {\n      this.snackBar.open('Debe seleccionar una agencia para buscar clientes', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n\n    this.clientsLoading = true;\n    this.showClientResults = true;\n\n    let params = new HttpParams();\n    params = params.set('id', this.selectedAgencyId.toString());\n    params = params.set('search', this.clientSearchTerm.trim());\n    params = params.set('limit', '50');\n\n    this.http.get<any>(`${environment.apiBaseUrl}/api/client/search`, { params })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('🔍 Clientes encontrados:', response);\n          \n          if (response && response.success && response.data && response.data.clientes) {\n            this.clients = response.data.clientes;\n            \n            // Si hay múltiples resultados, mostrar diálogo\n            if (this.clients.length > 1) {\n              this.showClientSelectionDialog();\n            } else if (this.clients.length === 1) {\n              // Si hay solo un resultado, seleccionarlo automáticamente\n              this.selectClient(this.clients[0]);\n            } else {\n              // Sin resultados en el sistema local, buscar en Vanguardia\n              this.searchClientInVanguardia();\n            }\n          } else {\n            // Sin resultados en el sistema local, buscar en Vanguardia\n            this.searchClientInVanguardia();\n          }\n          \n          this.clientsLoading = false;\n        },\n        error: (error) => {\n          console.error('❌ Error buscando clientes:', error);\n          this.clients = [];\n          this.clientsLoading = false;\n          this.snackBar.open('Error al buscar clientes', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  private searchClientInVanguardia(): void {\n    console.log('🔍 Buscando cliente en Vanguardia...');\n    \n    // Verificar que tenemos la agencia seleccionada\n    if (!this.selectedAgency || !this.selectedAgency.IdAgency) {\n      this.snackBar.open('Error: No se encontró la información de IdAgency de la agencia seleccionada', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    \n    let params = new HttpParams();\n    params = params.set('idAgency', this.selectedAgency.IdAgency);\n    params = params.set('ndDMS', this.clientSearchTerm.trim());\n\n    this.http.get<any>(environment.vanguardia.apiUrl, { \n      params,\n      headers: this.getBackblazeHeaders()\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('🔍 Cliente encontrado en Vanguardia:', response);\n          \n          if (response && response.success && response.data) {\n            // Convertir respuesta de Vanguardia al formato esperado\n            const vanguardiaClient = {\n              ndCliente: response.data.ndCliente || response.data.id,\n              cliente: response.data.cliente || response.data.nombre || response.data.name,\n              rfc: response.data.rfc || '',\n              email: response.data.email || '',\n              telefono: response.data.telefono || response.data.phone || '',\n              direccion: response.data.direccion || response.data.address || '',\n              // Marcar como cliente de Vanguardia para referencia\n              isVanguardiaClient: true,\n              vanguardiaData: response.data\n            };\n            \n            this.clients = [vanguardiaClient];\n            this.selectClient(vanguardiaClient);\n            \n            this.snackBar.open(`Cliente encontrado en Vanguardia: ${vanguardiaClient.cliente}`, 'Cerrar', {\n              duration: 3000\n            });\n          } else {\n            this.clients = [];\n            this.showClientResults = true;\n            this.snackBar.open('Cliente no encontrado en el sistema ni en Vanguardia', 'Cerrar', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error buscando cliente en Vanguardia:', error);\n          this.clients = [];\n          this.showClientResults = true;\n          \n          let errorMessage = 'Error desconocido al buscar en Vanguardia';\n          \n          if (error.status === 0) {\n            errorMessage = 'Error de CORS: No se puede conectar con el servidor de Vanguardia.';\n          } else if (error.status === 400) {\n            errorMessage = 'Error 400: Solicitud inválida a Vanguardia.';\n          } else if (error.status === 401) {\n            errorMessage = 'Error 401: Token de autenticación inválido para Vanguardia.';\n          } else if (error.status === 403) {\n            errorMessage = 'Error 403: Acceso denegado a Vanguardia.';\n          } else if (error.status === 404) {\n            errorMessage = 'Error 404: Endpoint de Vanguardia no encontrado.';\n          } else if (error.status === 500) {\n            errorMessage = 'Error 500: Error interno del servidor de Vanguardia.';\n          } else if (error.error && error.error.message) {\n            errorMessage = error.error.message;\n          } else if (error.message) {\n            errorMessage = error.message;\n          }\n          \n          this.snackBar.open(`Error buscando en Vanguardia: ${errorMessage}`, 'Cerrar', {\n            duration: 5000\n          });\n        }\n      });\n  }\n\n  clearClientSearch(): void {\n    this.clientSearchTerm = '';\n    this.clients = [];\n    this.showClientResults = false;\n    this.selectedClient = null;\n    // Limpiar documentos requeridos cuando se limpia la búsqueda de cliente\n    this.requiredDocuments = [];\n    this.selectedFile = null;\n    this.selectedFiles = {};\n  }\n\n  selectClient(client: any): void {\n    console.log('Cliente seleccionado:', client);\n    this.selectedClient = client;\n    this.showClientResults = false; // Ocultar resultados después de seleccionar\n    this.clientSearchTerm = ''; // Limpiar el campo de búsqueda\n    \n    // Limpiar documentos requeridos al cambiar de cliente\n    this.requiredDocuments = [];\n    this.selectedFile = null;\n    this.selectedFiles = {};\n    \n    // Limpiar búsqueda y paginación de pedidos\n    this.orderSearchTerm = '';\n    this.currentPage = 0;\n    \n    // Cargar automáticamente los pedidos de integración del cliente seleccionado\n    this.loadClientFiles();\n    \n    this.snackBar.open(`Cliente seleccionado: ${client.cliente}`, 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  showClientSelectionDialog(): void {\n    const dialogRef = this.dialog.open(ClientSelectionDialogComponent, {\n      width: '95vw',\n      height: '80vh',\n      maxWidth: '1200px',\n      data: { clients: this.clients }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.selectClient(result);\n      } else {\n        // Si se canceló el diálogo, limpiar la búsqueda\n        this.clearClientSearch();\n      }\n    });\n  }\n\n  clearClientSelection(): void {\n    this.selectedClient = null;\n    this.files = []; // Limpiar también los files\n    // Limpiar documentos requeridos cuando se limpia la selección de cliente\n    this.requiredDocuments = [];\n    this.selectedFile = null;\n    this.selectedFiles = {};\n    // Limpiar búsqueda y paginación\n    this.orderSearchTerm = '';\n    this.currentPage = 0;\n    this.updateFilesDisplay();\n    this.snackBar.open('Selección de cliente limpiada', 'Cerrar', {\n      duration: 2000\n    });\n  }\n\n  loadClientFiles(): void {\n    if (!this.selectedClient || !this.selectedClient.ndCliente) {\n      this.files = [];\n      return;\n    }\n\n    this.filesLoading = true;\n\n    let params = new HttpParams();\n    params = params.set('agencyId', this.selectedAgency.IdAgency);\n    params = params.set('ndCliente', this.selectedClient.ndCliente);\n    params = params.set('statusId', '1'); // ID para Integración\n\n    // Cargar solo pedidos que ya están en la tabla de file (no desde Vanguardia)\n    this.http.get<any>(`${environment.apiBaseUrl}/api/files/by-agency`, { params })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📁 Files encontrados en tabla file:', response);\n          \n          if (response && response.success && response.data && response.data.files) {\n            this.files = response.data.files;\n          } else {\n            this.files = [];\n          }\n          \n          this.updateFilesDisplay();\n          this.filesLoading = false;\n        },\n        error: (error) => {\n          console.error('❌ Error cargando files:', error);\n          this.files = [];\n          this.filesLoading = false;\n          this.snackBar.open('Error al cargar los pedidos del cliente', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  trackByClientId(index: number, client: any): number {\n    return client.ndCliente;\n  }\n\n  // Métodos para acciones de pedidos\n  cancelarPedido(file: any): void {\n    console.log('Cancelando pedido:', file.numeroPedido);\n    // Aquí implementarías la lógica para cancelar el pedido\n    this.snackBar.open(`Pedido ${file.numeroPedido} cancelado`, 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  excepcionPedido(file: any): void {\n    console.log('Creando excepción para pedido:', file.numeroPedido);\n    // Aquí implementarías la lógica para crear una excepción\n    this.snackBar.open(`Excepción creada para pedido ${file.numeroPedido}`, 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  agregarPedidoIntegracion(): void {\n    console.log('🚀 Iniciando proceso de agregar pedidos...');\n    console.log('📊 Cliente seleccionado:', this.selectedClient);\n    console.log('📊 Agencia seleccionada:', this.selectedAgency);\n    \n    // Verificar que tenemos cliente y agencia seleccionados\n    if (!this.selectedClient || !this.selectedClient.ndCliente) {\n      console.log('❌ No hay cliente seleccionado');\n      this.snackBar.open('Debe seleccionar un cliente primero', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    \n    if (!this.selectedAgency || !this.selectedAgency.IdAgency) {\n      console.log('❌ No hay agencia seleccionada');\n      this.snackBar.open('Debe seleccionar una agencia primero', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    \n    console.log('✅ Validaciones pasadas, cargando pedidos desde Vanguardia...');\n    \n    // Llamar al API de Vanguardia para obtener pedidos\n    this.loadOrdersFromVanguardia();\n  }\n\n  // MÉTODO TEMPORAL PARA PRUEBAS\n  private testOrderDialog(): void {\n    console.log('🧪 Probando diálogo con datos de prueba...');\n    const testOrders = [\n      {\n        numeroPedido: 'TEST-001',\n        numeroInventario: 'INV-001',\n        proceso: 'Integración',\n        operacion: 'Venta',\n        tipoCliente: 'Individual',\n        vehiculo: 'Sedán',\n        year: '2024',\n        modelo: 'Modelo Test',\n        vin: 'VIN123456789',\n        agencia: 'Agencia Test',\n        fechaRegistro: new Date(),\n        fileId: 'file-test-1',\n        isVanguardiaOrder: true\n      },\n      {\n        numeroPedido: 'TEST-002',\n        numeroInventario: 'INV-002',\n        proceso: 'Integración',\n        operacion: 'Compra',\n        tipoCliente: 'Empresarial',\n        vehiculo: 'SUV',\n        year: '2024',\n        modelo: 'Modelo Test 2',\n        vin: 'VIN987654321',\n        agencia: 'Agencia Test',\n        fechaRegistro: new Date(),\n        fileId: 'file-test-2',\n        isVanguardiaOrder: true\n      }\n    ];\n    \n    this.showOrderSelectionDialog(testOrders);\n  }\n\n\n  private loadOrdersFromVanguardia(): void {\n    console.log('🔍 Cargando pedidos desde Vanguardia...');\n    \n    let params = new HttpParams();\n    params = params.set('customerDMS', this.selectedClient.ndCliente);\n    params = params.set('idAgency', this.selectedAgency.IdAgency);\n    params = params.set('perpage', '1000'); // Traer todos los registros de una vez\n\n    this.http.get<any>(environment.vanguardia.ordersApiUrl, { \n      params,\n      headers: this.getBackblazeHeaders()\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('🔍 Respuesta completa de Vanguardia:', response);\n          \n          // Verificar diferentes estructuras de respuesta posibles\n          let ordersData = null;\n          \n          if (response && response.success && response.data) {\n            // Estructura estándar: { success: true, data: [...] }\n            ordersData = response.data;\n          } else if (response && response.status === 200 && response.data) {\n            // Estructura de Vanguardia: { status: 200, message: \"...\", data: [...] }\n            console.log('📊 Detectada estructura de Vanguardia, data:', response.data);\n            \n            // Verificar si data contiene un array de pedidos\n            if (Array.isArray(response.data)) {\n              console.log('✅ Data es array directo, cantidad:', response.data.length);\n              ordersData = response.data;\n            } else if (response.data && Array.isArray(response.data.orders)) {\n              console.log('✅ Data contiene orders, cantidad:', response.data.orders.length);\n              ordersData = response.data.orders;\n            } else if (response.data && Array.isArray(response.data.data)) {\n              console.log('✅ Data contiene data, cantidad:', response.data.data.length);\n              console.log('📊 Total de registros disponibles:', response.data.total_rows);\n              ordersData = response.data.data;\n            } else if (response.data && Array.isArray(response.data.results)) {\n              console.log('✅ Data contiene results, cantidad:', response.data.results.length);\n              ordersData = response.data.results;\n            } else {\n              console.log('⚠️ Data es objeto único, convirtiendo a array');\n              ordersData = [response.data];\n            }\n          } else if (response && Array.isArray(response)) {\n            // Estructura directa: [...]\n            ordersData = response;\n          } else if (response && response.data && Array.isArray(response.data)) {\n            // Estructura con data directa: { data: [...] }\n            ordersData = response.data;\n          } else if (response && response.orders && Array.isArray(response.orders)) {\n            // Estructura con orders: { orders: [...] }\n            ordersData = response.orders;\n          } else if (response && response.results && Array.isArray(response.results)) {\n            // Estructura con results: { results: [...] }\n            ordersData = response.results;\n          }\n          \n          if (ordersData && Array.isArray(ordersData) && ordersData.length > 0) {\n            console.log('📁 Datos de pedidos encontrados:', ordersData);\n            console.log('📊 Cantidad total de pedidos:', ordersData.length);\n            \n            // Mostrar directamente el diálogo con todos los datos\n            this.showOrderSelectionDialogDirectly(ordersData);\n            \n            this.snackBar.open(`${ordersData.length} pedidos encontrados en Vanguardia`, 'Cerrar', {\n              duration: 3000\n            });\n          } else {\n            console.log('⚠️ No se encontraron pedidos válidos en la respuesta:', response);\n            this.snackBar.open('No se encontraron pedidos en Vanguardia para este cliente', 'Cerrar', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error cargando pedidos desde Vanguardia:', error);\n          \n          let errorMessage = 'Error desconocido al cargar pedidos desde Vanguardia';\n          \n          if (error.status === 0) {\n            errorMessage = 'Error de CORS: No se puede conectar con el servidor de Vanguardia.';\n          } else if (error.status === 400) {\n            errorMessage = 'Error 400: Solicitud inválida a Vanguardia.';\n          } else if (error.status === 401) {\n            errorMessage = 'Error 401: Token de autenticación inválido para Vanguardia.';\n          } else if (error.status === 403) {\n            errorMessage = 'Error 403: Acceso denegado a Vanguardia.';\n          } else if (error.status === 404) {\n            errorMessage = 'Error 404: Endpoint de Vanguardia no encontrado.';\n          } else if (error.status === 500) {\n            errorMessage = 'Error 500: Error interno del servidor de Vanguardia.';\n          } else if (error.error && error.error.message) {\n            errorMessage = error.error.message;\n          } else if (error.message) {\n            errorMessage = error.message;\n          }\n          \n          this.snackBar.open(`Error cargando pedidos: ${errorMessage}`, 'Cerrar', {\n            duration: 5000\n          });\n        }\n      });\n  }\n\n  private processVanguardiaOrders(ordersData: any): void {\n    console.log('🔄 Iniciando procesamiento de pedidos de Vanguardia...');\n    console.log('📊 Datos recibidos para procesar:', ordersData);\n    console.log('📊 Tipo de datos:', typeof ordersData);\n    console.log('📊 Es array?', Array.isArray(ordersData));\n    \n    // Convertir los pedidos de Vanguardia al formato esperado por el sistema\n    let processedOrders: any[] = [];\n    \n    if (Array.isArray(ordersData)) {\n      console.log('📋 Procesando array de pedidos, cantidad:', ordersData.length);\n      processedOrders = ordersData.map((order, index) => {\n        console.log(`📋 Procesando pedido ${index + 1}:`, order);\n        return {\n          numeroPedido: order.numeroPedido || order.orderNumber || order.id || `PED-${index + 1}`,\n          numeroInventario: order.numeroInventario || order.inventoryNumber || '',\n          proceso: order.proceso || order.process || 'Integración',\n          operacion: order.operacion || order.operation || '',\n          tipoCliente: order.tipoCliente || order.clientType || '',\n          vehiculo: order.vehiculo || order.vehicle || '',\n          year: order.year || order.year || '',\n          modelo: order.modelo || order.model || '',\n          vin: order.vin || order.vin || '',\n          agencia: order.agencia || order.agency || this.selectedAgency?.Name || 'Sin agencia',\n          fechaRegistro: order.fechaRegistro || order.registrationDate || new Date(),\n          fileId: order.fileId || order.id || `file-${index + 1}`,\n          // Marcar como pedido de Vanguardia\n          isVanguardiaOrder: true,\n          vanguardiaData: order\n        };\n      });\n    } else if (ordersData && typeof ordersData === 'object') {\n      console.log('📋 Procesando objeto único:', ordersData);\n      // Si es un solo pedido\n      processedOrders = [{\n        numeroPedido: ordersData.numeroPedido || ordersData.orderNumber || ordersData.id || 'PED-1',\n        numeroInventario: ordersData.numeroInventario || ordersData.inventoryNumber || '',\n        proceso: ordersData.proceso || ordersData.process || 'Integración',\n        operacion: ordersData.operacion || ordersData.operation || '',\n        tipoCliente: ordersData.tipoCliente || ordersData.clientType || '',\n        vehiculo: ordersData.vehiculo || ordersData.vehicle || '',\n        year: ordersData.year || ordersData.year || '',\n        modelo: ordersData.modelo || ordersData.model || '',\n        vin: ordersData.vin || ordersData.vin || '',\n        agencia: ordersData.agencia || ordersData.agency || this.selectedAgency?.Name || 'Sin agencia',\n        fechaRegistro: ordersData.fechaRegistro || ordersData.registrationDate || new Date(),\n        fileId: ordersData.fileId || ordersData.id || 'file-1',\n        // Marcar como pedido de Vanguardia\n        isVanguardiaOrder: true,\n        vanguardiaData: ordersData\n      }];\n    } else {\n      console.error('❌ Datos de pedidos no válidos:', ordersData);\n      this.snackBar.open('Error: Formato de datos de pedidos no válido', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    \n    console.log('✅ Pedidos procesados exitosamente:', processedOrders);\n    console.log('📊 Cantidad de pedidos procesados:', processedOrders.length);\n    \n    // Cargar pedidos existentes en file para comparar\n    this.loadClientFilesForComparison(processedOrders);\n  }\n\n  private loadClientFilesForComparison(vanguardiaOrders: any[]): void {\n    console.log('🔄 Iniciando comparación con pedidos existentes...');\n    console.log('📊 Pedidos de Vanguardia recibidos:', vanguardiaOrders);\n    console.log('📊 Cliente seleccionado:', this.selectedClient);\n    \n    if (!this.selectedClient || !this.selectedClient.ndCliente) {\n      console.log('⚠️ No hay cliente seleccionado, mostrando todos los pedidos de Vanguardia');\n      // Si no hay cliente seleccionado, mostrar todos los pedidos de Vanguardia\n      this.showOrderSelectionDialog(vanguardiaOrders);\n      return;\n    }\n\n    console.log('🔍 Cliente seleccionado:', this.selectedClient.ndCliente);\n    let params = new HttpParams();\n    params = params.set('agencyId', this.selectedAgency.IdAgency);\n    params = params.set('ndCliente', this.selectedClient.ndCliente);\n    params = params.set('statusId', '1'); // ID para Integración\n\n    console.log('🌐 Consultando API de files existentes...');\n    this.http.get<any>(`${environment.apiBaseUrl}/api/files/by-agency`, { params })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📁 Respuesta de files existentes:', response);\n          \n          let existingFiles: any[] = [];\n          if (response && response.success && response.data && response.data.files) {\n            existingFiles = response.data.files;\n          }\n          \n          console.log('📊 Files existentes encontrados:', existingFiles);\n          console.log('📊 Cantidad de files existentes:', existingFiles.length);\n          \n          // Filtrar pedidos de Vanguardia que no existen en la tabla de file\n          const newOrders = this.filterNewOrders(vanguardiaOrders, existingFiles);\n          console.log('📊 Pedidos nuevos después del filtrado:', newOrders);\n          console.log('📊 Cantidad de pedidos nuevos:', newOrders.length);\n          \n          if (newOrders.length > 0) {\n            console.log('✅ Hay pedidos nuevos, mostrando diálogo...');\n            this.showOrderSelectionDialog(newOrders);\n          } else {\n            console.log('ℹ️ No hay pedidos nuevos, todos ya existen');\n            this.snackBar.open('Todos los pedidos de Vanguardia ya existen en el sistema', 'Cerrar', {\n              duration: 3000\n            });\n            // Cargar pedidos existentes en la tabla\n            this.loadClientFiles();\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error cargando files para comparación:', error);\n          console.log('⚠️ Error en comparación, mostrando todos los pedidos de Vanguardia');\n          // Si hay error, mostrar todos los pedidos de Vanguardia\n          this.showOrderSelectionDialog(vanguardiaOrders);\n        }\n      });\n  }\n\n  private filterNewOrders(vanguardiaOrders: any[], existingFiles: any[]): any[] {\n    // Crear un Set con los números de pedido existentes para búsqueda rápida\n    const existingOrderNumbers = new Set(\n      existingFiles.map(file => file.numeroPedido?.toString().toLowerCase())\n    );\n    \n    // Filtrar pedidos de Vanguardia que no existen en la tabla de file\n    return vanguardiaOrders.filter(order => {\n      const orderNumber = order.numeroPedido?.toString().toLowerCase();\n      return !existingOrderNumbers.has(orderNumber);\n    });\n  }\n\n  private showOrderSelectionDialogDirectly(apiOrders: any[]): void {\n    console.log('🎯 Mostrando diálogo directamente con datos del API...');\n    console.log('📊 Datos originales del API:', apiOrders);\n    console.log('📊 Cantidad de pedidos:', apiOrders?.length || 0);\n    console.log('📊 Primer pedido (ejemplo):', apiOrders?.[0]);\n    \n    if (!apiOrders || apiOrders.length === 0) {\n      console.error('❌ No hay pedidos del API para mostrar');\n      this.snackBar.open('No hay pedidos disponibles para mostrar', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    \n    console.log('✅ Datos válidos, verificando pedidos existentes antes de mostrar diálogo...');\n\n    // Verificar qué pedidos ya existen en la base de datos\n    this.checkExistingOrders(apiOrders);\n  }\n\n  private checkExistingOrders(apiOrders: any[]): void {\n    console.log('🔍 Verificando pedidos existentes en la base de datos...');\n    \n    const requestData = {\n      orders: apiOrders,\n      agencyId: this.selectedAgencyId\n    };\n\n    this.http.post<any>(`${environment.apiBaseUrl}/api/files/check-existing-orders`, requestData)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('✅ Respuesta de verificación de pedidos:', response);\n          \n          if (response.success && response.data) {\n            const { existingOrders, newOrders, existingCount, newCount } = response.data;\n            \n            console.log(`📊 Resultado: ${existingCount} pedidos existentes, ${newCount} pedidos nuevos`);\n            \n            if (existingCount > 0) {\n              console.log('📋 Pedidos existentes:', existingOrders);\n              this.snackBar.open(\n                `${existingCount} pedidos ya existen en el sistema. Se mostrarán solo los ${newCount} pedidos nuevos.`, \n                'Cerrar', \n                { duration: 4000 }\n              );\n            }\n            \n            if (newOrders.length === 0) {\n              console.log('ℹ️ No hay pedidos nuevos para mostrar');\n              this.snackBar.open('Todos los pedidos de Vanguardia ya existen en el sistema', 'Cerrar', {\n                duration: 3000\n              });\n              return;\n            }\n            \n            // Mostrar solo los pedidos nuevos en el diálogo\n            this.openOrderSelectionDialog(newOrders);\n          } else {\n            console.error('❌ Error en la respuesta de verificación:', response);\n            this.snackBar.open('Error al verificar pedidos existentes', 'Cerrar', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error verificando pedidos existentes:', error);\n          this.snackBar.open('Error al verificar pedidos existentes', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  private openOrderSelectionDialog(orders: any[]): void {\n    console.log('🚀 Abriendo diálogo con pedidos filtrados:', orders.length, 'pedidos nuevos');\n    \n    try {\n      const dialogRef = this.dialog.open(OrderSelectionDialogComponent, {\n        width: 'auto',\n        height: 'auto',\n        maxWidth: '90vw',\n        maxHeight: '80vh',\n        data: { orders: orders, agencyId: this.selectedAgencyId, ndCliente: this.selectedClient?.ndCliente }\n      });\n\n      console.log('✅ Diálogo abierto exitosamente');\n\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('🔚 Diálogo cerrado, resultado:', result);\n        if (result && result.length > 0) {\n          console.log('✅ Pedidos seleccionados:', result);\n          // Procesar los pedidos seleccionados antes de agregarlos\n          const processedOrders = this.processSelectedOrders(result);\n          this.addSelectedOrdersToTable(processedOrders);\n          this.snackBar.open(`${result.length} pedidos agregados exitosamente`, 'Cerrar', {\n            duration: 3000\n          });\n        } else {\n          console.log('❌ Diálogo cancelado o sin selección');\n          // Si se canceló el diálogo, cargar pedidos existentes\n          this.loadClientFiles();\n        }\n      });\n    } catch (error) {\n      console.error('❌ Error abriendo diálogo:', error);\n      this.snackBar.open('Error al abrir el diálogo de selección', 'Cerrar', {\n        duration: 3000\n      });\n    }\n  }\n\n  private showOrderSelectionDialog(orders: any[]): void {\n    console.log('🎯 Intentando mostrar diálogo de selección de pedidos...');\n    console.log('📊 Pedidos para mostrar en diálogo:', orders);\n    console.log('📊 Cantidad de pedidos:', orders?.length || 0);\n    \n    if (!orders || orders.length === 0) {\n      console.error('❌ No hay pedidos para mostrar en el diálogo');\n      this.snackBar.open('No hay pedidos disponibles para mostrar', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n\n    try {\n      console.log('🚀 Abriendo diálogo de selección...');\n      const dialogRef = this.dialog.open(OrderSelectionDialogComponent, {\n        width: 'auto',\n        height: 'auto',\n        maxWidth: '90vw',\n        maxHeight: '80vh',\n        data: { orders: orders, agencyId: this.selectedAgencyId, ndCliente: this.selectedClient?.ndCliente }\n      });\n\n      console.log('✅ Diálogo abierto exitosamente');\n\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('🔚 Diálogo cerrado, resultado:', result);\n        \n        if (result && result.success) {\n          // File creado exitosamente\n          console.log('✅ File creado exitosamente:', result);\n          this.snackBar.open(`File creado exitosamente con ${result.documentsCreated} documentos`, 'Cerrar', {\n            duration: 5000\n          });\n          \n          // Recargar los files del cliente para mostrar el nuevo file\n          this.loadClientFiles();\n          \n        } else if (result && result.success === false) {\n          // Error al crear el file\n          console.error('❌ Error al crear file:', result.message);\n          this.snackBar.open(`Error: ${result.message}`, 'Cerrar', {\n            duration: 5000\n          });\n          \n        } else if (result && result.length > 0) {\n          // Formato anterior (pedidos seleccionados directamente)\n          console.log('✅ Pedidos seleccionados:', result);\n          this.addSelectedOrdersToTable(result);\n          this.snackBar.open(`${result.length} pedidos agregados exitosamente`, 'Cerrar', {\n            duration: 3000\n          });\n          \n        } else {\n          // Diálogo cancelado\n          console.log('❌ Diálogo cancelado o sin selección');\n          this.loadClientFiles();\n        }\n      });\n    } catch (error) {\n      console.error('❌ Error abriendo diálogo:', error);\n      this.snackBar.open('Error al abrir el diálogo de selección', 'Cerrar', {\n        duration: 3000\n      });\n    }\n  }\n\n  private processSelectedOrders(selectedOrders: any[]): any[] {\n    console.log('🔄 Procesando pedidos seleccionados...');\n    console.log('📊 Pedidos seleccionados:', selectedOrders);\n    \n    return selectedOrders.map((order, index) => {\n      console.log(`📋 Procesando pedido seleccionado ${index + 1}:`, order);\n      return {\n        numeroPedido: order.numeroPedido || order.orderNumber || order.id || `PED-${index + 1}`,\n        numeroInventario: order.numeroInventario || order.inventoryNumber || '',\n        proceso: order.proceso || order.process || 'Integración',\n        operacion: order.operacion || order.operation || '',\n        tipoCliente: order.tipoCliente || order.clientType || '',\n        vehiculo: order.vehiculo || order.vehicle || '',\n        year: order.year || order.year || '',\n        modelo: order.modelo || order.model || '',\n        vin: order.vin || order.vin || '',\n        agencia: order.agencia || order.agency || this.selectedAgency?.Name || 'Sin agencia',\n        fechaRegistro: order.fechaRegistro || order.registrationDate || new Date(),\n        fileId: order.fileId || order.id || `file-${index + 1}`,\n        // Marcar como pedido de Vanguardia\n        isVanguardiaOrder: true,\n        vanguardiaData: order\n      };\n    });\n  }\n\n  private addSelectedOrdersToTable(selectedOrders: any[]): void {\n    console.log('📁 Agregando pedidos seleccionados a la tabla...');\n    console.log('📊 Pedidos a agregar:', selectedOrders);\n    \n    // Recargar los pedidos desde el servidor para obtener la lista actualizada sin duplicados\n    this.loadClientFiles();\n  }\n\n  // Métodos para manejo de documentos\n  selectFile(file: any): void {\n    this.selectedFile = file;\n    this.loadRequiredDocuments(file.fileId); // Usar fileId en lugar de numeroPedido\n  }\n\n  loadRequiredDocuments(fileId: string): void {\n    this.documentsLoading = true;\n    this.requiredDocuments = [];\n\n    let params = new HttpParams();\n    params = params.set('fileId', fileId);\n    params = params.set('idProcessType', '1'); // Filtro por integración usando ID = 1\n\n    this.http.get<any>(`${environment.apiBaseUrl}/api/documents/required`, { params })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📄 Documentos requeridos:', response);\n          \n          if (response && response.success && response.data && response.data.documents) {\n            this.requiredDocuments = response.data.documents;\n          } else {\n            this.requiredDocuments = [];\n          }\n          \n          this.documentsLoading = false;\n        },\n        error: (error) => {\n          console.error('❌ Error cargando documentos:', error);\n          this.requiredDocuments = [];\n          this.documentsLoading = false;\n          this.snackBar.open('Error al cargar documentos requeridos', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  onFileSelected(event: any, documentId: string): void {\n    const file = event.target.files[0];\n    if (file) {\n      this.selectedFiles[documentId] = file;\n    }\n  }\n\n  uploadDocument(document: any): void {\n    if (!this.selectedFiles[document.documentId]) {\n      this.snackBar.open('Debe seleccionar un archivo', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n\n    // Mostrar mensaje diferente si se está reemplazando\n    const isReplacing = document.idCurrentStatus === '2';\n    const actionText = isReplacing ? 'reemplazando' : 'cargando';\n\n    // Preparar datos para Backblaze según documentación API\n    const formData = new FormData();\n    formData.append('file', this.selectedFiles[document.documentId]); // File: Archivo a subir\n    formData.append('idSingleFile', this.selectedFile.fileId.toString()); // Integer: ID del archivo en tabla (IdFile)\n    formData.append('idDocumentFile', document.documentId.toString()); // Integer: ID del documento (IdDocumentByFile)\n\n    // Usar API de Backblaze con header de autenticación\n    this.http.post<any>(`${environment.backblaze.apiUrl}/upload`, formData, { headers: this.getBackblazeHeaders() })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📤 Documento subido a Backblaze:', response);\n          \n          // Guardar información del archivo en Backblaze en la base de datos local\n          this.saveDocumentInfo(document, response);\n          \n          this.snackBar.open(`Documento ${document.documentName} ${actionText} exitosamente`, 'Cerrar', {\n            duration: 3000\n          });\n          \n          // Recargar documentos\n          this.loadRequiredDocuments(this.selectedFile.fileId);\n          // Limpiar archivo seleccionado\n          delete this.selectedFiles[document.documentId];\n        },\n        error: (error) => {\n          console.error('❌ Error subiendo documento a Backblaze:', error);\n          \n          let errorMessage = 'Error desconocido';\n          \n          if (error.status === 0) {\n            errorMessage = 'Error de CORS: No se puede conectar con el servidor de Backblaze. Verifique la configuración del servidor.';\n          } else if (error.status === 400) {\n            errorMessage = 'Error 400: Solicitud inválida. Verifique los parámetros enviados.';\n          } else if (error.status === 401) {\n            errorMessage = 'Error 401: Token de autenticación inválido.';\n          } else if (error.status === 403) {\n            errorMessage = 'Error 403: Acceso denegado.';\n          } else if (error.status === 404) {\n            errorMessage = 'Error 404: Endpoint no encontrado.';\n          } else if (error.status === 500) {\n            errorMessage = 'Error 500: Error interno del servidor.';\n          } else if (error.error && error.error.message) {\n            errorMessage = error.error.message;\n          } else if (error.message) {\n            errorMessage = error.message;\n          }\n          \n          this.snackBar.open(`Error subiendo documento: ${errorMessage}`, 'Cerrar', {\n            duration: 8000\n          });\n        }\n      });\n  }\n\n  private saveDocumentInfo(document: any, backblazeResponse: any): void {\n    const documentData = {\n      fileId: this.selectedFile.fileId,\n      documentTypeId: document.documentId,\n      fileName: backblazeResponse.fileName || this.selectedFiles[document.documentId].name,\n      filePath: backblazeResponse.filePath,\n      backblazeFileId: backblazeResponse.fileId,\n      backblazeUrl: backblazeResponse.url,\n      uploadDate: new Date().toISOString(),\n      status: 'uploaded'\n    };\n\n    this.http.post<any>(`${environment.apiBaseUrl}/api/documents/save-backblaze-info`, documentData)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📝 Información del documento guardada:', response);\n        },\n        error: (error) => {\n          console.error('❌ Error guardando información del documento:', error);\n        }\n      });\n  }\n\n  viewDocument(document: any): void {\n    console.log('🖱️ CLICK EN BOTÓN VER - viewDocument ejecutándose');\n    console.log('🔍 viewDocument llamado con:', document);\n    \n    if (document.documentContainer) {\n      console.log('📁 Usando documentContainer:', document.documentContainer);\n      // Usar documentContainer para obtener URL privada de Backblaze\n      this.getBackblazePrivateUrl(document.documentContainer, document);\n    } else {\n      console.log('❌ No hay documentContainer disponible');\n      this.snackBar.open('No se puede visualizar el documento', 'Cerrar', {\n        duration: 3000\n      });\n    }\n  }\n\n  private getBackblazePrivateUrl(fileName: string, document: any): void {\n    console.log('🔍 getBackblazePrivateUrl llamado con:', { fileName, document });\n    \n    const duration = 3600; // 1 hora por defecto\n    const params = new URLSearchParams({\n      file: fileName,\n      duration: duration.toString()\n    });\n\n    const url = `${environment.backblaze.apiUrl}/get-private-url?${params.toString()}`;\n    console.log('🔗 URL completa:', url);\n    console.log('🔑 Headers:', this.getBackblazeHeaders());\n\n    this.http.get<any>(url, { headers: this.getBackblazeHeaders() })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('🔗 URL privada obtenida:', response);\n          if (response.data && response.data.url) {\n            console.log('🌐 Abriendo URL en nueva pestaña:', response.data.url);\n            const newWindow = window.open(response.data.url, '_blank');\n            if (newWindow) {\n              console.log('✅ Nueva pestaña abierta correctamente');\n            } else {\n              console.error('❌ No se pudo abrir nueva pestaña (posible bloqueador de pop-ups)');\n              this.snackBar.open('No se pudo abrir el documento. Verifica que no tengas bloqueado el navegador de pop-ups.', 'Cerrar', {\n                duration: 5000\n              });\n            }\n          } else {\n            console.error('❌ Respuesta sin URL válida:', response);\n            this.snackBar.open('No se pudo obtener la URL del documento', 'Cerrar', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error obteniendo URL privada de Backblaze:', error);\n          this.snackBar.open('Error al obtener URL del documento', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  getDocumentStatusIcon(status: string, idCurrentStatus?: string): string {\n    // Si tenemos idCurrentStatus, usamos ese para determinar el icono\n    if (idCurrentStatus) {\n      switch (idCurrentStatus) {\n        case '1': return 'fiber_new'; // Nuevo\n        case '2': return 'upload_file'; // Documento cargado\n        case '3': return 'visibility'; // En revisión\n        case '4': return 'check_circle'; // Revisado y OK\n        case '5': return 'cancel'; // Rechazado\n        case '6': return 'error'; // Documento no válido\n        default: return 'help';\n      }\n    }\n    \n    // Fallback al status calculado si no hay idCurrentStatus\n    switch (status) {\n      case 'uploaded': return 'check_circle';\n      case 'required': return 'info';\n      case 'optional': return 'help';\n      default: return 'help';\n    }\n  }\n\n  getDocumentStatusColor(status: string, idCurrentStatus?: string): string {\n    // Si tenemos idCurrentStatus, usamos ese para determinar el color\n    if (idCurrentStatus) {\n      switch (idCurrentStatus) {\n        case '1': return 'text-blue-600'; // Nuevo - Azul\n        case '2': return 'text-orange-600'; // Documento cargado - Naranja\n        case '3': return 'text-yellow-600'; // En revisión - Amarillo\n        case '4': return 'text-green-600'; // Revisado y OK - Verde\n        case '5': return 'text-red-600'; // Rechazado - Rojo\n        case '6': return 'text-red-800'; // Documento no válido - Rojo oscuro\n        default: return 'text-gray-600';\n      }\n    }\n    \n    // Fallback al status calculado si no hay idCurrentStatus\n    switch (status) {\n      case 'uploaded': return 'text-green-600';\n      case 'required': return 'text-yellow-600';\n      case 'optional': return 'text-gray-600';\n      default: return 'text-gray-600';\n    }\n  }\n\n  // Métodos para paginación y búsqueda de pedidos\n  onOrderSearchChange(): void {\n    this.currentPage = 0; // Resetear a la primera página\n    this.filterAndPaginateFiles();\n  }\n\n  clearOrderSearch(): void {\n    this.orderSearchTerm = '';\n    this.currentPage = 0;\n    this.filterAndPaginateFiles();\n  }\n\n  onPageChange(event: PageEvent): void {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.filterAndPaginateFiles();\n  }\n\n  private filterAndPaginateFiles(): void {\n    // Eliminar duplicados basándose en numeroPedido antes de filtrar\n    const uniqueFiles = this.files.filter((file, index, self) => \n      index === self.findIndex(f => f.numeroPedido === file.numeroPedido)\n    );\n\n    // Filtrar archivos por término de búsqueda\n    if (this.orderSearchTerm.trim()) {\n      this.filteredFiles = uniqueFiles.filter(file => \n        file.numeroPedido?.toString().toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.numeroInventario?.toString().toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.proceso?.toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.operacion?.toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.tipoCliente?.toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.vehiculo?.toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.modelo?.toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.vin?.toLowerCase().includes(this.orderSearchTerm.toLowerCase()) ||\n        file.agencia?.toLowerCase().includes(this.orderSearchTerm.toLowerCase())\n      );\n    } else {\n      this.filteredFiles = [...uniqueFiles];\n    }\n\n    // Actualizar total de elementos\n    this.totalItems = this.filteredFiles.length;\n\n    // Calcular elementos para la página actual\n    const startIndex = this.currentPage * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    this.paginatedFiles = this.filteredFiles.slice(startIndex, endIndex);\n  }\n\n  private updateFilesDisplay(): void {\n    this.filterAndPaginateFiles();\n  }\n\n  eliminarPedido(file: any): void {\n    console.log('🗑️ Eliminando pedido:', file);\n    console.log('🔍 File ID encontrado:', file.fileId);\n    \n    if (!file.fileId) {\n      console.error('❌ No se encontró fileId en el objeto file');\n      this.snackBar.open('Error: No se pudo identificar el ID del pedido', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    \n    // Confirmar eliminación\n    const confirmMessage = `¿Estás seguro de que deseas eliminar el pedido ${file.numeroPedido}?\\n\\nEsta acción eliminará:\\n- El file completo\\n- Todos los documentos asociados\\n- El registro en OrderByCar\\n\\nEsta acción no se puede deshacer.`;\n    \n    if (confirm(confirmMessage)) {\n      this.deleteFileFromServer(file.fileId);\n    }\n  }\n\n  private deleteFileFromServer(fileId: string): void {\n    console.log('🔄 Eliminando file del servidor:', fileId);\n    \n    const requestData = { fileId: fileId };\n\n    this.http.post<any>(`${environment.apiBaseUrl}/api/files/delete`, requestData)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('✅ File eliminado exitosamente:', response);\n          \n          if (response.success) {\n            this.snackBar.open(\n              `Pedido eliminado exitosamente. Documentos eliminados: ${response.data.documentsDeleted}`, \n              'Cerrar', \n              { duration: 4000 }\n            );\n            \n            // Recargar la lista de files\n            this.loadClientFiles();\n          } else {\n            this.snackBar.open(\n              `Error al eliminar el pedido: ${response.message}`, \n              'Cerrar', \n              { duration: 4000 }\n            );\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error eliminando file:', error);\n          \n          let errorMessage = 'Error desconocido al eliminar el pedido';\n          \n          if (error.status === 403) {\n            errorMessage = 'No tienes permisos para eliminar pedidos';\n          } else if (error.status === 401) {\n            errorMessage = 'Sesión expirada. Por favor, inicia sesión nuevamente';\n          } else if (error.error && error.error.message) {\n            errorMessage = error.error.message;\n          }\n          \n          this.snackBar.open(`Error: ${errorMessage}`, 'Cerrar', {\n            duration: 5000\n          });\n        }\n      });\n  }\n}\n","<div class=\"integracion-container\">\n\n  <!-- Filtros de Agencia y Cliente -->\n  <div class=\"filters-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-content class=\"p-2\">\n        <div class=\"flex items-center justify-between gap-3\">\n          <!-- Filtro de Agencia -->\n          <div class=\"flex items-center space-x-3\">\n            <mat-form-field appearance=\"outline\" class=\"min-w-48\">\n              <mat-label>Agencia</mat-label>\n              <mat-select \n                [value]=\"selectedAgencyId\" \n                (selectionChange)=\"onAgencyChange($event.value)\"\n                [disabled]=\"agenciesLoading || !hasAgencies()\">\n                <mat-option [value]=\"null\">Todas las agencias</mat-option>\n                <mat-option \n                  *ngFor=\"let agency of agencies; trackBy: trackByAgencyId\" \n                  [value]=\"agency.Id\">\n                  {{ agency.Name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n\n          <!-- Filtro de Cliente y Botones -->\n          <div class=\"flex items-center space-x-3 flex-1\">\n            <mat-form-field appearance=\"outline\" class=\"flex-1\">\n              <mat-label>Buscar Cliente</mat-label>\n              <input \n                matInput \n                [(ngModel)]=\"clientSearchTerm\"\n                (keyup.enter)=\"searchClients()\"\n                placeholder=\"Buscar por número de cliente o nombre completo\"\n                autocomplete=\"off\">\n            </mat-form-field>\n            \n            <!-- Contenedor de botones alineados -->\n            <div class=\"flex items-center space-x-2\">\n              <!-- Botón de buscar -->\n              <button \n                mat-raised-button \n                color=\"primary\" \n                (click)=\"searchClients()\"\n                [disabled]=\"clientsLoading || clientSearchTerm.trim().length < 3\"\n                matTooltip=\"Buscar cliente\"\n                style=\"height: 40px; min-height: 40px;\">\n                <mat-icon>search</mat-icon>\n                Buscar\n              </button>\n              \n              <!-- Botón de limpiar búsqueda -->\n              <button \n                *ngIf=\"clientSearchTerm\"\n                mat-raised-button \n                color=\"warn\" \n                (click)=\"clearClientSearch()\"\n                matTooltip=\"Limpiar búsqueda\"\n                style=\"height: 40px; min-height: 40px;\">\n                <mat-icon>clear</mat-icon>\n                Limpiar\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Sin resultados -->\n        <div *ngIf=\"showClientResults && clients.length === 0 && !clientsLoading\" class=\"mt-3 text-center py-6\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">search_off</mat-icon>\n          <p class=\"text-gray-500\">No se encontraron clientes con el término de búsqueda</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- Información del Cliente Seleccionado -->\n  <div *ngIf=\"selectedClient\" class=\"client-info-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-header class=\"pb-1\">\n        <mat-card-title class=\"flex items-center text-sm\">\n          <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 18px;\">person</mat-icon>\n          Información del Cliente\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content class=\"p-2\">\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-2\">\n          <div class=\"field-group\">\n            <label class=\"field-label\">N° Cliente</label>\n            <div class=\"field-value\">{{ selectedClient.ndCliente || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Razón Social</label>\n            <div class=\"field-value\">{{ selectedClient.razonSocial || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">RFC</label>\n            <div class=\"field-value\">{{ selectedClient.rfc || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Correo</label>\n            <div class=\"field-value\">{{ selectedClient.email || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Teléfono</label>\n            <div class=\"field-value\">{{ selectedClient.telefono || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Teléfono 2</label>\n            <div class=\"field-value\">{{ selectedClient.telefono2 || 'N/A' }}</div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- Tabla de Pedidos del Cliente -->\n  <div *ngIf=\"selectedClient\" class=\"files-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-header class=\"pb-1\">\n        <mat-card-title class=\"flex items-center justify-between text-sm\">\n          <div class=\"flex items-center\">\n            <mat-icon class=\"mr-1 text-green-600\" style=\"font-size: 18px;\">description</mat-icon>\n            Pedidos en Integración\n          </div>\n          <button \n            mat-icon-button \n            color=\"primary\"\n            (click)=\"agregarPedidoIntegracion()\"\n            matTooltip=\"Agregar nuevo pedido de integración\"\n            *ngIf=\"isManagerOrAdmin\">\n            <mat-icon style=\"font-size: 18px;\">add</mat-icon>\n          </button>\n        </mat-card-title>\n      </mat-card-header>\n      \n      <!-- Buscador de pedidos -->\n      <div class=\"px-2 pb-2\">\n        <div class=\"flex items-center space-x-2\">\n          <mat-form-field appearance=\"outline\" class=\"flex-1\">\n            <mat-label>Buscar pedido</mat-label>\n            <input \n              matInput \n              [(ngModel)]=\"orderSearchTerm\"\n              (input)=\"onOrderSearchChange()\"\n              placeholder=\"Buscar por número de pedido, inventario, proceso, operación, vehículo, modelo, VIN o agencia\"\n              autocomplete=\"off\">\n            <mat-icon matSuffix>search</mat-icon>\n          </mat-form-field>\n          \n          <button \n            *ngIf=\"orderSearchTerm\"\n            mat-icon-button \n            color=\"warn\"\n            (click)=\"clearOrderSearch()\"\n            matTooltip=\"Limpiar búsqueda\">\n            <mat-icon>clear</mat-icon>\n          </button>\n        </div>\n      </div>\n      <mat-card-content class=\"p-2\">\n        <!-- Loading spinner -->\n        <div *ngIf=\"filesLoading\" class=\"flex justify-center py-8\">\n          <mat-spinner diameter=\"40\"></mat-spinner>\n        </div>\n\n        <!-- Tabla de pedidos -->\n        <div *ngIf=\"!filesLoading\" class=\"overflow-x-auto\">\n          <table mat-table [dataSource]=\"paginatedFiles\" class=\"w-full files-table\">\n            <!-- Número de Pedido -->\n            <ng-container matColumnDef=\"numeroPedido\">\n              <th mat-header-cell *matHeaderCellDef>N° Pedido</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <div class=\"flex items-center\">\n                  <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 14px;\">receipt</mat-icon>\n                  <span class=\"font-medium\">{{ file.numeroPedido }}</span>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- Número de Inventario -->\n            <ng-container matColumnDef=\"numeroInventario\">\n              <th mat-header-cell *matHeaderCellDef>N° Inventario</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.numeroInventario; else noInventory\" class=\"text-sm\">{{ file.numeroInventario }}</span>\n                <ng-template #noInventory>\n                  <span class=\"text-gray-400 italic text-sm\">Sin inventario</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Proceso -->\n            <ng-container matColumnDef=\"proceso\">\n              <th mat-header-cell *matHeaderCellDef>Proceso</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.proceso; else noProcess\" class=\"text-sm\">{{ file.proceso }}</span>\n                <ng-template #noProcess>\n                  <span class=\"text-gray-400 italic text-sm\">Sin proceso</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Operación -->\n            <ng-container matColumnDef=\"operacion\">\n              <th mat-header-cell *matHeaderCellDef>Operación</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.operacion; else noOperation\" class=\"text-sm\">{{ file.operacion }}</span>\n                <ng-template #noOperation>\n                  <span class=\"text-gray-400 italic text-sm\">Sin operación</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Tipo de Cliente -->\n            <ng-container matColumnDef=\"tipoCliente\">\n              <th mat-header-cell *matHeaderCellDef>Tipo Cliente</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.tipoCliente; else noClientType\" class=\"text-sm\">{{ file.tipoCliente }}</span>\n                <ng-template #noClientType>\n                  <span class=\"text-gray-400 italic text-sm\">Sin tipo</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Vehículo -->\n            <ng-container matColumnDef=\"vehiculo\">\n              <th mat-header-cell *matHeaderCellDef>Vehículo</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.vehiculo; else noVehicle\" class=\"text-sm\">{{ file.vehiculo }}</span>\n                <ng-template #noVehicle>\n                  <span class=\"text-gray-400 italic text-sm\">Sin vehículo</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Año -->\n            <ng-container matColumnDef=\"year\">\n              <th mat-header-cell *matHeaderCellDef>Año</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.year; else noYear\" class=\"text-sm\">{{ file.year }}</span>\n                <ng-template #noYear>\n                  <span class=\"text-gray-400 italic text-sm\">-</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Modelo -->\n            <ng-container matColumnDef=\"modelo\">\n              <th mat-header-cell *matHeaderCellDef>Modelo</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.modelo; else noModel\" class=\"text-sm\">{{ file.modelo }}</span>\n                <ng-template #noModel>\n                  <span class=\"text-gray-400 italic text-sm\">Sin modelo</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- VIN -->\n            <ng-container matColumnDef=\"vin\">\n              <th mat-header-cell *matHeaderCellDef>VIN</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.vin; else noVin\" class=\"text-sm font-mono\">{{ file.vin }}</span>\n                <ng-template #noVin>\n                  <span class=\"text-gray-400 italic text-sm\">Sin VIN</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Agencia -->\n            <ng-container matColumnDef=\"agencia\">\n              <th mat-header-cell *matHeaderCellDef>Agencia</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.agencia; else noAgency\" class=\"text-sm\">{{ file.agencia }}</span>\n                <ng-template #noAgency>\n                  <span class=\"text-gray-400 italic text-sm\">Sin agencia</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Fecha de Registro -->\n            <ng-container matColumnDef=\"fechaRegistro\">\n              <th mat-header-cell *matHeaderCellDef>Fecha Registro</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.fechaRegistro; else noDate\" class=\"text-sm\">{{ file.fechaRegistro | date:'dd/MM/yyyy HH:mm' }}</span>\n                <ng-template #noDate>\n                  <span class=\"text-gray-400 italic text-sm\">Sin fecha</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Acciones (solo para gerentes y administradores) -->\n            <ng-container matColumnDef=\"actions\">\n              <th mat-header-cell *matHeaderCellDef>Acciones</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <button \n                  mat-icon-button \n                  [matMenuTriggerFor]=\"actionsMenu\"\n                  *ngIf=\"isManagerOrAdmin\"\n                  matTooltip=\"Opciones del pedido\">\n                  <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #actionsMenu=\"matMenu\">\n                  <button mat-menu-item (click)=\"cancelarPedido(file)\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancelar</span>\n                  </button>\n                  <button mat-menu-item (click)=\"excepcionPedido(file)\">\n                    <mat-icon>warning</mat-icon>\n                    <span>Excepción</span>\n                  </button>\n                  <button mat-menu-item (click)=\"eliminarPedido(file)\" class=\"text-red-600\">\n                    <mat-icon class=\"text-red-600\">delete</mat-icon>\n                    <span class=\"text-red-600\">Eliminar</span>\n                  </button>\n                </mat-menu>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"filesDisplayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: filesDisplayedColumns;\" \n                class=\"hover:bg-gray-50 cursor-pointer\"\n                (click)=\"selectFile(row)\"></tr>\n          </table>\n          \n          <!-- Paginación -->\n          <mat-paginator \n            *ngIf=\"!filesLoading && totalItems > 0\"\n            [length]=\"totalItems\"\n            [pageSize]=\"pageSize\"\n            [pageIndex]=\"currentPage\"\n            [pageSizeOptions]=\"[5, 10, 25, 50]\"\n            [showFirstLastButtons]=\"true\"\n            (page)=\"onPageChange($event)\"\n            class=\"mt-2\">\n          </mat-paginator>\n        </div>\n\n        <!-- Sin pedidos -->\n        <div *ngIf=\"!filesLoading && files.length === 0\" class=\"text-center py-8\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">folder_open</mat-icon>\n          <p class=\"text-gray-500\">No se encontraron pedidos en estatus de integración para este cliente</p>\n        </div>\n        \n        <!-- Sin resultados de búsqueda -->\n        <div *ngIf=\"!filesLoading && files.length > 0 && filteredFiles.length === 0\" class=\"text-center py-8\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">search_off</mat-icon>\n          <p class=\"text-gray-500\">No se encontraron pedidos que coincidan con la búsqueda</p>\n          <button \n            mat-button \n            color=\"primary\" \n            (click)=\"clearOrderSearch()\"\n            class=\"mt-2\">\n            Limpiar búsqueda\n          </button>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- Sección de Documentos del Pedido Seleccionado -->\n  <div *ngIf=\"selectedFile\" class=\"documents-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-header class=\"pb-1\">\n        <mat-card-title class=\"flex flex-col text-sm\">\n          <div class=\"flex items-center mb-1\">\n            <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 18px;\">folder</mat-icon>\n            <span class=\"font-semibold\">Documentos Requeridos</span>\n          </div>\n          <div class=\"text-xs text-gray-600 ml-6\">\n            Pedido {{ selectedFile.numeroPedido }} • {{ selectedFile.proceso }} • {{ selectedFile.operacion }} • {{ selectedFile.tipoCliente }} • {{ selectedFile.modelo }} {{ selectedFile.vehiculo }} {{ selectedFile.year }} • VIN: {{ selectedFile.vin }}\n          </div>\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content class=\"p-2\">\n        <!-- Loading spinner -->\n        <div *ngIf=\"documentsLoading\" class=\"flex justify-center py-8\">\n          <mat-spinner diameter=\"40\"></mat-spinner>\n        </div>\n\n        <!-- Lista de documentos -->\n        <div *ngIf=\"!documentsLoading\" class=\"space-y-2\">\n          <div *ngFor=\"let document of requiredDocuments\" \n               class=\"document-item flex items-center justify-between p-2 border border-gray-200 rounded hover:bg-gray-50\">\n            \n            <!-- Información del documento -->\n            <div class=\"flex items-center space-x-2 flex-1\">\n              <!-- Icono de estado -->\n              <mat-icon [class]=\"getDocumentStatusColor(document.status, document.idCurrentStatus)\" style=\"font-size: 16px;\">\n                {{ getDocumentStatusIcon(document.status, document.idCurrentStatus) }}\n              </mat-icon>\n              \n                <!-- Nombre del documento -->\n                <div class=\"flex-1\">\n                  <div class=\"font-medium text-gray-900 text-sm\">{{ document.documentName }}</div>\n                  <div *ngIf=\"document.hasExpiration === '1' && document.expirationDate\" \n                       class=\"text-xs text-gray-500\">\n                    Vencimiento: {{ document.expirationDate | date:'dd/MM/yyyy' }}\n                  </div>\n                </div>\n            </div>\n\n            <!-- Controles de archivo -->\n            <div class=\"flex items-center space-x-1\">\n              <!-- Input de archivo -->\n              <div class=\"file-input-container\">\n                <input \n                  type=\"file\" \n                  #fileInput\n                  (change)=\"onFileSelected($event, document.documentId)\"\n                  accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n                  class=\"hidden\"\n                  [id]=\"'file-' + document.documentId\">\n                <button \n                  mat-stroked-button \n                  (click)=\"fileInput.click()\"\n                  [disabled]=\"document.idCurrentStatus === '3' || document.idCurrentStatus === '4'\"\n                  class=\"text-xs\">\n                  <mat-icon class=\"mr-1\" style=\"font-size: 14px;\">attach_file</mat-icon>\n                  {{ selectedFiles[document.documentId] ? selectedFiles[document.documentId].name : (document.idCurrentStatus === '2' ? 'Reemplazar archivo' : 'Seleccionar archivo') }}\n                </button>\n              </div>\n\n              <!-- Botón Cargar -->\n              <button \n                mat-raised-button \n                color=\"primary\"\n                (click)=\"uploadDocument(document)\"\n                [disabled]=\"!selectedFiles[document.documentId] || document.idCurrentStatus === '3' || document.idCurrentStatus === '4'\"\n                class=\"text-xs\">\n                <mat-icon class=\"mr-1\" style=\"font-size: 14px;\">upload</mat-icon>\n                {{ document.idCurrentStatus === '2' ? 'REEMPLAZAR' : 'CARGAR' }}\n              </button>\n\n              <!-- Botón Ver -->\n              <button \n                mat-raised-button \n                color=\"accent\"\n                (click)=\"viewDocument(document)\"\n                [disabled]=\"!document.documentContainer\"\n                class=\"text-xs\">\n                <mat-icon class=\"mr-1\" style=\"font-size: 14px;\">visibility</mat-icon>\n                VER\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Sin documentos -->\n        <div *ngIf=\"!documentsLoading && requiredDocuments.length === 0\" class=\"text-center py-8\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">folder_open</mat-icon>\n          <p class=\"text-gray-500\">No se encontraron documentos requeridos para este pedido</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n</div>\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-order-selection-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    FormsModule\n  ],\n  template: `\n    <div class=\"dialog-container\">\n      <h2 mat-dialog-title class=\"text-xl font-semibold mb-4\">\n        <mat-icon class=\"mr-2\">receipt</mat-icon>\n        Seleccionar Pedido\n      </h2>\n      \n      <div mat-dialog-content class=\"mb-6 dialog-content\">\n        <!-- Loading spinner -->\n        <div *ngIf=\"loading\" class=\"flex justify-center py-8\">\n          <mat-spinner diameter=\"40\"></mat-spinner>\n          <p class=\"ml-4 text-gray-600\">Verificando pedidos existentes...</p>\n        </div>\n\n        <!-- Contenido principal -->\n        <div *ngIf=\"!loading\">\n          <!-- Buscador -->\n          <div class=\"mb-4\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n              <mat-label>Buscar por número de orden</mat-label>\n              <input \n                matInput \n                [(ngModel)]=\"searchTerm\"\n                (input)=\"applyFilter()\"\n                placeholder=\"Ingresa el número de orden para buscar\"\n                autocomplete=\"off\">\n              <mat-icon matSuffix>search</mat-icon>\n            </mat-form-field>\n          </div>\n          \n          <p class=\"text-gray-600 mb-4 order-info\">\n            Se encontraron {{ filteredOrders.length }} pedidos nuevos disponibles. Selecciona uno:\n          </p>\n        \n        <div class=\"overflow-x-auto table-container\">\n          <table mat-table [dataSource]=\"paginatedOrders\" class=\"w-full\">\n            <!-- Radio Button Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>Seleccionar</th>\n              <td mat-cell *matCellDef=\"let order\">\n                <mat-radio-button \n                  [value]=\"order\"\n                  [checked]=\"selectedOrder === order\"\n                  (change)=\"selectOrder(order)\">\n                </mat-radio-button>\n              </td>\n            </ng-container>\n\n            <!-- Order DMS Column -->\n            <ng-container matColumnDef=\"order_dms\">\n              <th mat-header-cell *matHeaderCellDef>Order DMS</th>\n              <td mat-cell *matCellDef=\"let order\">\n                <div class=\"flex items-center order-info\">\n                  <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 14px;\">receipt</mat-icon>\n                  <span class=\"font-medium\">{{ order.order_dms || order.orderDMS || order.numeroPedido || 'N/A' }}</span>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- Year Column -->\n            <ng-container matColumnDef=\"year\">\n              <th mat-header-cell *matHeaderCellDef>Año</th>\n              <td mat-cell *matCellDef=\"let order\">\n                <span *ngIf=\"order.year; else noYear\" class=\"order-info\">{{ order.year }}</span>\n                <ng-template #noYear>\n                  <span class=\"text-gray-400 italic order-info\">-</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Model Column -->\n            <ng-container matColumnDef=\"model\">\n              <th mat-header-cell *matHeaderCellDef>Modelo</th>\n              <td mat-cell *matCellDef=\"let order\">\n                <span *ngIf=\"order.model; else noModel\" class=\"order-info\">{{ order.model }}</span>\n                <ng-template #noModel>\n                  <span class=\"text-gray-400 italic order-info\">Sin modelo</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Version Column -->\n            <ng-container matColumnDef=\"version\">\n              <th mat-header-cell *matHeaderCellDef>Versión</th>\n              <td mat-cell *matCellDef=\"let order\">\n                <span *ngIf=\"order.version; else noVersion\" class=\"order-info\">{{ order.version }}</span>\n                <ng-template #noVersion>\n                  <span class=\"text-gray-400 italic order-info\">Sin versión</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Color Exterior Column -->\n            <ng-container matColumnDef=\"colorExterior\">\n              <th mat-header-cell *matHeaderCellDef>Color Exterior</th>\n              <td mat-cell *matCellDef=\"let order\">\n                <span *ngIf=\"order.external_color; else noColorExterior\" class=\"order-info\">\n                  {{ order.external_color }}\n                </span>\n                <ng-template #noColorExterior>\n                  <span class=\"text-gray-400 italic order-info\">Sin color</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Color Interior Column -->\n            <ng-container matColumnDef=\"colorInterior\">\n              <th mat-header-cell *matHeaderCellDef>Color Interior</th>\n              <td mat-cell *matCellDef=\"let order\">\n                <span *ngIf=\"order.internal_color; else noColorInterior\" class=\"order-info\">\n                  {{ order.internal_color }}\n                </span>\n                <ng-template #noColorInterior>\n                  <span class=\"text-gray-400 italic order-info\">Sin color</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" \n                class=\"hover:bg-gray-50\">\n            </tr>\n          </table>\n          \n          <!-- Paginación -->\n          <mat-paginator \n            [length]=\"filteredOrders.length\"\n            [pageSize]=\"pageSize\"\n            [pageSizeOptions]=\"[5, 10, 20, 50]\"\n            (page)=\"onPageChange($event)\"\n            showFirstLastButtons>\n          </mat-paginator>\n        </div>\n\n        <!-- Sin pedidos nuevos -->\n        <div *ngIf=\"!loading && filteredOrders.length === 0\" class=\"text-center py-8\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">check_circle</mat-icon>\n          <p class=\"text-gray-500\">Todos los pedidos de Vanguardia ya existen en el sistema</p>\n          <p class=\"text-sm text-gray-400 mt-2\">No hay pedidos nuevos para agregar</p>\n        </div>\n        </div>\n\n        <!-- Configuración del File (solo cuando hay pedido seleccionado) -->\n        <div *ngIf=\"selectedOrder && !loading\" class=\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n          <h3 class=\"text-lg font-semibold text-blue-800 mb-4 flex items-center\">\n            <mat-icon class=\"mr-2\">settings</mat-icon>\n            Configuración del File\n          </h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <!-- Proceso -->\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n              <mat-label>Proceso</mat-label>\n              <mat-select [(ngModel)]=\"selectedProcess\" (selectionChange)=\"onProcessChange()\" required>\n                <mat-option *ngFor=\"let process of processes\" [value]=\"process\">\n                  {{ process.Name }}\n                </mat-option>\n              </mat-select>\n              <mat-icon matSuffix>business</mat-icon>\n            </mat-form-field>\n\n            <!-- Tipo de Cliente -->\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n              <mat-label>Tipo de Cliente</mat-label>\n              <mat-select [(ngModel)]=\"selectedCostumerType\" (selectionChange)=\"onCostumerTypeChange()\" required>\n                <mat-option *ngFor=\"let costumerType of availableCostumerTypes\" [value]=\"costumerType\">\n                  {{ costumerType.Name }}\n                </mat-option>\n              </mat-select>\n              <mat-icon matSuffix>person</mat-icon>\n            </mat-form-field>\n\n            <!-- Tipo de Operación -->\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n              <mat-label>Tipo de Operación</mat-label>\n              <mat-select [(ngModel)]=\"selectedOperationType\" required>\n                <mat-option *ngFor=\"let operationType of availableOperationTypes\" [value]=\"operationType\">\n                  {{ operationType.Name }}\n                </mat-option>\n              </mat-select>\n              <mat-icon matSuffix>build</mat-icon>\n            </mat-form-field>\n          </div>\n\n          <!-- Resumen de selección -->\n          <div class=\"mt-4 p-3 bg-white rounded border\">\n            <h4 class=\"font-medium text-gray-700 mb-2\">Resumen de configuración:</h4>\n            <div class=\"text-sm text-gray-600 space-y-1\">\n              <p><strong>Pedido:</strong> {{ selectedOrder.order_dms || selectedOrder.orderDMS || selectedOrder.numeroPedido }}</p>\n              <p><strong>Proceso:</strong> {{ selectedProcess?.Name || 'No seleccionado' }}</p>\n              <p><strong>Tipo Cliente:</strong> {{ selectedCostumerType?.Name || 'No seleccionado' }}</p>\n              <p><strong>Operación:</strong> {{ selectedOperationType?.Name || 'No seleccionado' }}</p>\n            </div>\n            \n            <!-- Estado de validación -->\n            <div *ngIf=\"selectedProcess && selectedCostumerType && selectedOperationType\" class=\"mt-3 pt-2 border-t\">\n              <div *ngIf=\"isConfigurationValid()\" class=\"flex items-center text-green-600\">\n                <mat-icon class=\"mr-2\" style=\"font-size: 16px;\">check_circle</mat-icon>\n                <span class=\"text-sm font-medium\">Configuración válida</span>\n              </div>\n              <div *ngIf=\"!isConfigurationValid()\" class=\"flex items-center text-red-600\">\n                <mat-icon class=\"mr-2\" style=\"font-size: 16px;\">error</mat-icon>\n                <span class=\"text-sm font-medium\">Esta combinación no está habilitada</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div mat-dialog-actions class=\"flex justify-between items-center\">\n        <div class=\"text-sm text-gray-600\">\n          {{ selectedOrder ? '1 pedido seleccionado' : 'Ningún pedido seleccionado' }}\n        </div>\n        <div class=\"flex gap-2\">\n          <button mat-button (click)=\"onCancel()\" class=\"text-sm\">\n            <mat-icon class=\"mr-1\" style=\"font-size: 16px;\">close</mat-icon>\n            Cancelar\n          </button>\n          <button \n            mat-raised-button \n            color=\"primary\" \n            (click)=\"onConfirm()\" \n            [disabled]=\"!isFormValid()\"\n            class=\"text-sm\">\n            <mat-icon class=\"mr-1\" style=\"font-size: 16px;\">add</mat-icon>\n            Crear File\n          </button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .mat-mdc-dialog-container {\n      --mdc-dialog-container-color: white;\n    }\n    \n    // Contenedor principal del diálogo\n    .dialog-container {\n      width: 100%;\n      min-width: 800px;\n      max-width: 1200px;\n      padding: 0;\n      display: flex;\n      flex-direction: column;\n    }\n    \n    // Contenedor de contenido\n    .dialog-content {\n      flex: 1;\n      overflow: hidden;\n      display: flex;\n      flex-direction: column;\n    }\n    \n    // Contenedor de la tabla\n    .table-container {\n      flex: 1;\n      overflow: auto;\n      min-height: 0;\n    }\n    \n    // Estilos específicos para las tablas\n    :host ::ng-deep {\n      mat-table {\n        .mat-mdc-table {\n          border-collapse: separate !important;\n          border-spacing: 0 !important;\n          width: 100% !important;\n        }\n        \n        // Altura compacta para las filas\n        .mat-mdc-row {\n          min-height: 32px !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          border-bottom: 1px solid rgba(0,0,0,.12) !important;\n          display: table-row !important;\n          \n          &:hover {\n            background-color: #f1f5f9 !important;\n          }\n        }\n        \n        .mat-mdc-header-row {\n          min-height: 32px !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          border-bottom: 1px solid rgba(0,0,0,.12) !important;\n          display: table-row !important;\n          background-color: #f8fafc !important;\n        }\n        \n        // Padding compacto para las celdas\n        .mat-mdc-cell {\n          padding: 4px 8px !important;\n          vertical-align: middle !important;\n          line-height: 1.2 !important;\n          font-size: 12px !important;\n          border: none !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          overflow: hidden !important;\n          white-space: nowrap !important;\n          text-overflow: ellipsis !important;\n          text-align: left !important;\n        }\n        \n        .mat-mdc-header-cell {\n          padding: 4px 8px !important;\n          vertical-align: middle !important;\n          line-height: 1.2 !important;\n          font-size: 12px !important;\n          font-weight: 500 !important;\n          border: none !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          overflow: hidden !important;\n          white-space: nowrap !important;\n          text-overflow: ellipsis !important;\n          text-align: left !important;\n        }\n        \n        // Eliminar cualquier espaciado extra\n        .mat-mdc-cell, .mat-mdc-header-cell {\n          margin: 0 !important;\n          border-spacing: 0 !important;\n        }\n      }\n      \n      // Estilos específicos para elementos que puedan estar causando diferencias\n      .mat-mdc-table-container {\n        overflow: hidden !important;\n      }\n      \n      .mat-mdc-table-wrapper {\n        overflow: hidden !important;\n      }\n      \n      // Estilos específicos para elementos internos\n      .mat-mdc-cell div,\n      .mat-mdc-cell span,\n      .mat-mdc-header-cell div,\n      .mat-mdc-header-cell span {\n        line-height: 1.2 !important;\n        margin: 0 !important;\n        padding: 0 !important;\n        font-size: 12px !important;\n      }\n    }\n    \n    // Estilos para el diálogo\n    .dialog-content {\n      max-height: 60vh;\n      min-height: 400px;\n      overflow-y: auto;\n    }\n    \n    .order-info {\n      font-size: 12px;\n      line-height: 1.2;\n    }\n    \n    // Estilos específicos para columnas\n    :host ::ng-deep {\n      mat-table {\n        .mat-column-select {\n          min-width: 50px !important;\n          width: 8% !important;\n        }\n        \n        .mat-column-order_dms {\n          min-width: 120px !important;\n          width: 20% !important;\n        }\n        \n        .mat-column-year {\n          min-width: 80px !important;\n          width: 12% !important;\n        }\n        \n        .mat-column-model {\n          min-width: 120px !important;\n          width: 18% !important;\n        }\n        \n        .mat-column-version {\n          min-width: 100px !important;\n          width: 15% !important;\n        }\n        \n        .mat-column-colorExterior {\n          min-width: 120px !important;\n          width: 15% !important;\n        }\n        \n        .mat-column-colorInterior {\n          min-width: 120px !important;\n          width: 15% !important;\n        }\n      }\n    }\n  `]\n})\nexport class OrderSelectionDialogComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  displayedColumns: string[] = [\n    'select',\n    'order_dms',\n    'year',\n    'model',\n    'version',\n    'colorExterior',\n    'colorInterior'\n  ];\n\n  selectedOrder: any = null;\n  searchTerm: string = '';\n  filteredOrders: any[] = [];\n  paginatedOrders: any[] = [];\n  pageSize: number = 5;\n  currentPage: number = 0;\n  loading: boolean = true;\n  originalOrders: any[] = [];\n\n  // Datos para los combos\n  processes: any[] = [];\n  costumerTypes: any[] = [];\n  operationTypes: any[] = [];\n  allConfigurations: any[] = []; // Todas las configuraciones habilitadas\n\n  // Selecciones del usuario\n  selectedProcess: any = null;\n  selectedCostumerType: any = null;\n  selectedOperationType: any = null;\n\n  // Opciones filtradas disponibles\n  availableCostumerTypes: any[] = [];\n  availableOperationTypes: any[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<OrderSelectionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { orders: any[], agencyId: number, ndCliente?: string },\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    console.log('🎯 OrderSelectionDialogComponent ngOnInit');\n    console.log('📊 Datos recibidos en el diálogo:', this.data);\n    console.log('📊 Cantidad de orders:', this.data.orders?.length || 0);\n    console.log('📊 Agency ID:', this.data.agencyId);\n    console.log('📊 Primer order (ejemplo):', this.data.orders?.[0]);\n    \n    this.originalOrders = [...this.data.orders];\n    this.loading = true;\n    \n    // Cargar datos para los combos\n    this.loadComboData();\n    \n    // Verificar pedidos existentes antes de mostrar la tabla\n    this.checkExistingOrders();\n  }\n\n  private checkExistingOrders(): void {\n    console.log('🔍 Verificando pedidos existentes en la tabla file...');\n    \n    // Obtener todos los pedidos existentes para la agencia\n    let params = new HttpParams();\n    params = params.set('agencyId', this.data.agencyId.toString());\n    params = params.set('statusId', '1'); // ID para Integración\n    params = params.set('ndCliente', this.data.ndCliente || '');\n\n    this.http.get<any>(`${environment.apiBaseUrl}/api/files/by-agency`, { params })\n      .subscribe({\n        next: (response) => {\n          console.log('📁 Files existentes encontrados:', response);\n          \n          let existingFiles: any[] = [];\n          if (response && response.success && response.data && response.data.files) {\n            existingFiles = response.data.files;\n          }\n          \n          console.log('📊 Files existentes:', existingFiles.length);\n          \n          // Filtrar pedidos de Vanguardia que no existen en la tabla de file\n          const newOrders = this.filterNewOrders(existingFiles);\n          console.log('📊 Pedidos nuevos después del filtrado:', newOrders.length);\n          \n          this.filteredOrders = newOrders;\n          this.loading = false;\n          this.updatePaginatedOrders();\n        },\n        error: (error) => {\n          console.error('❌ Error verificando pedidos existentes:', error);\n          // Si hay error, mostrar todos los pedidos\n          this.filteredOrders = [...this.originalOrders];\n          this.loading = false;\n          this.updatePaginatedOrders();\n        }\n      });\n  }\n\n  private filterNewOrders(existingFiles: any[]): any[] {\n    // Crear un Set con los order_dms existentes para búsqueda rápida\n    const existingOrderDms = new Set(\n      existingFiles.map(file => file.order_dms?.toString().toLowerCase())\n    );\n    \n    // Filtrar pedidos de Vanguardia que no existen en la tabla de file\n    return this.originalOrders.filter(order => {\n      const orderDms = (order.order_dms || order.orderDMS || order.numeroPedido || '').toString().toLowerCase();\n      return !existingOrderDms.has(orderDms);\n    });\n  }\n\n  applyFilter(): void {\n    if (!this.searchTerm.trim()) {\n      this.filteredOrders = [...this.originalOrders];\n    } else {\n      const searchLower = this.searchTerm.toLowerCase();\n      this.filteredOrders = this.originalOrders.filter(order => {\n        const orderDms = (order.order_dms || order.orderDMS || order.numeroPedido || '').toString().toLowerCase();\n        return orderDms.includes(searchLower);\n      });\n    }\n    this.currentPage = 0;\n    this.updatePaginatedOrders();\n  }\n\n  updatePaginatedOrders(): void {\n    console.log('🔄 Actualizando pedidos paginados...');\n    console.log('📊 CurrentPage:', this.currentPage);\n    console.log('📊 PageSize:', this.pageSize);\n    console.log('📊 FilteredOrders length:', this.filteredOrders.length);\n    \n    const startIndex = this.currentPage * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    \n    console.log('📊 StartIndex:', startIndex);\n    console.log('📊 EndIndex:', endIndex);\n    \n    this.paginatedOrders = this.filteredOrders.slice(startIndex, endIndex);\n    \n    console.log('📊 PaginatedOrders result:', this.paginatedOrders.length);\n    console.log('📊 PaginatedOrders data:', this.paginatedOrders);\n  }\n\n  onPageChange(event: any): void {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.updatePaginatedOrders();\n  }\n\n  selectOrder(order: any): void {\n    this.selectedOrder = order;\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  private loadComboData(): void {\n    console.log('🔄 Cargando configuraciones habilitadas...');\n    \n    // Cargar configuraciones habilitadas filtradas por agencia\n    const url = `${environment.apiBaseUrl}/api/configuration-process/enabled-by-agency/${this.data.agencyId}`;\n    this.http.get<any>(url)\n      .subscribe({\n        next: (response) => {\n          if (response && response.success && response.data) {\n            this.processes = response.data.processes || [];\n            this.costumerTypes = response.data.costumerTypes || [];\n            this.operationTypes = response.data.operationTypes || [];\n            this.allConfigurations = response.data.configurations || [];\n            \n            // Inicializar opciones disponibles\n            this.availableCostumerTypes = [...this.costumerTypes];\n            this.availableOperationTypes = [...this.operationTypes];\n            \n            console.log('✅ Configuraciones cargadas:');\n            console.log('  - Procesos:', this.processes.length);\n            console.log('  - Tipos de cliente:', this.costumerTypes.length);\n            console.log('  - Tipos de operación:', this.operationTypes.length);\n            console.log('  - Configuraciones totales:', this.allConfigurations.length);\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error cargando configuraciones:', error);\n          // Fallback: cargar datos individuales si falla el endpoint de configuraciones\n          this.loadIndividualComboData();\n        }\n      });\n  }\n\n  private loadIndividualComboData(): void {\n    console.log('🔄 Cargando datos individuales como fallback...');\n    \n    // Cargar procesos\n    this.http.get<any>(`${environment.apiBaseUrl}/api/process?enabled=1`)\n      .subscribe({\n        next: (response) => {\n          if (response && response.success && response.data) {\n            this.processes = response.data.processes || response.data;\n            console.log('✅ Procesos cargados:', this.processes.length);\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error cargando procesos:', error);\n        }\n      });\n\n    // Cargar tipos de cliente\n    this.http.get<any>(`${environment.apiBaseUrl}/api/costumer-type?enabled=1`)\n      .subscribe({\n        next: (response) => {\n          if (response && response.success && response.data) {\n            this.costumerTypes = response.data.costumerTypes || response.data;\n            console.log('✅ Tipos de cliente cargados:', this.costumerTypes.length);\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error cargando tipos de cliente:', error);\n        }\n      });\n\n    // Cargar tipos de operación\n    this.http.get<any>(`${environment.apiBaseUrl}/api/operation-type?enabled=1`)\n      .subscribe({\n        next: (response) => {\n          if (response && response.success && response.data) {\n            this.operationTypes = response.data.operationTypes || response.data;\n            console.log('✅ Tipos de operación cargados:', this.operationTypes.length);\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error cargando tipos de operación:', error);\n        }\n      });\n  }\n\n  onProcessChange(): void {\n    console.log('🔄 Proceso seleccionado:', this.selectedProcess);\n    \n    // Limpiar selecciones dependientes\n    this.selectedCostumerType = null;\n    this.selectedOperationType = null;\n    \n    // Filtrar tipos de cliente disponibles para este proceso\n    this.filterCostumerTypesByProcess();\n    \n    // Resetear tipos de operación\n    this.availableOperationTypes = [];\n  }\n\n  onCostumerTypeChange(): void {\n    console.log('🔄 Tipo de cliente seleccionado:', this.selectedCostumerType);\n    \n    // Limpiar selección de operación\n    this.selectedOperationType = null;\n    \n    // Filtrar tipos de operación disponibles para esta combinación proceso + tipo cliente\n    this.filterOperationTypesByProcessAndCostumerType();\n  }\n\n  private filterCostumerTypesByProcess(): void {\n    if (!this.selectedProcess) {\n      this.availableCostumerTypes = [...this.costumerTypes];\n      return;\n    }\n\n    // Buscar configuraciones que tengan este proceso\n    const configurationsWithProcess = this.allConfigurations.filter(config => \n      config.IdProcess === this.selectedProcess.Id\n    );\n\n    // Extraer tipos de cliente únicos\n    const costumerTypeIds = [...new Set(configurationsWithProcess.map(config => config.IdCostumerType))];\n    \n    // Filtrar tipos de cliente disponibles\n    this.availableCostumerTypes = this.costumerTypes.filter(costumerType => \n      costumerTypeIds.includes(costumerType.Id)\n    );\n\n    console.log(`📋 Tipos de cliente disponibles para proceso \"${this.selectedProcess.Name}\":`, this.availableCostumerTypes.length);\n  }\n\n  private filterOperationTypesByProcessAndCostumerType(): void {\n    if (!this.selectedProcess || !this.selectedCostumerType) {\n      this.availableOperationTypes = [...this.operationTypes];\n      return;\n    }\n\n    // Buscar configuraciones que tengan esta combinación proceso + tipo cliente\n    const configurationsWithProcessAndCostumer = this.allConfigurations.filter(config => \n      config.IdProcess === this.selectedProcess.Id && \n      config.IdCostumerType === this.selectedCostumerType.Id\n    );\n\n    // Extraer tipos de operación únicos\n    const operationTypeIds = [...new Set(configurationsWithProcessAndCostumer.map(config => config.IdOperationType))];\n    \n    // Filtrar tipos de operación disponibles\n    this.availableOperationTypes = this.operationTypes.filter(operationType => \n      operationTypeIds.includes(operationType.Id)\n    );\n\n    console.log(`📋 Tipos de operación disponibles para \"${this.selectedProcess.Name}\" + \"${this.selectedCostumerType.Name}\":`, this.availableOperationTypes.length);\n  }\n\n  isFormValid(): boolean {\n    return this.selectedOrder && \n           this.selectedProcess && \n           this.selectedCostumerType && \n           this.selectedOperationType &&\n           this.isConfigurationValid();\n  }\n\n  isConfigurationValid(): boolean {\n    if (!this.selectedProcess || !this.selectedCostumerType || !this.selectedOperationType) {\n      return false;\n    }\n\n    // Verificar que esta combinación existe en las configuraciones habilitadas\n    const validConfiguration = this.allConfigurations.find(config => \n      config.IdProcess === this.selectedProcess.Id &&\n      config.IdCostumerType === this.selectedCostumerType.Id &&\n      config.IdOperationType === this.selectedOperationType.Id\n    );\n\n    return !!validConfiguration;\n  }\n\n  onConfirm(): void {\n    if (this.isFormValid()) {\n      this.createFileFromVanguardia();\n    }\n  }\n\n  private createFileFromVanguardia(): void {\n    console.log('🔄 Creando file desde Vanguardia...');\n    \n    const requestData = {\n      order: this.selectedOrder,\n      process: this.selectedProcess,\n      costumerType: this.selectedCostumerType,\n      operationType: this.selectedOperationType,\n      clientId: this.data.ndCliente, // ID del cliente\n      agencyId: this.data.agencyId   // ID de la agencia\n    };\n\n    console.log('📤 Datos enviados:', requestData);\n\n    this.http.post<any>(`${environment.apiBaseUrl}/api/files/create-from-vanguardia-new`, requestData)\n      .subscribe({\n        next: (response) => {\n          if (response && response.success) {\n            console.log('✅ File creado exitosamente:', response.data);\n            this.dialogRef.close({\n              success: true,\n              fileId: response.data.fileId,\n              documentsCreated: response.data.documentsCreated,\n              message: response.message\n            });\n          } else {\n            console.error('❌ Error en la respuesta:', response);\n            this.dialogRef.close({\n              success: false,\n              message: response.message || 'Error al crear el file'\n            });\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error al crear file:', error);\n          this.dialogRef.close({\n            success: false,\n            message: error.error?.message || 'Error de conexión al crear el file'\n          });\n        }\n      });\n  }\n}\n"],"names":["Observable","BehaviorSubject","map","tap","environment","DefaultAgencyService","constructor","http","apiUrl","apiBaseUrl","selectedAgencySubject","selectedAgency$","asObservable","agenciasSubject","agencias$","obtenerAgencias","get","pipe","response","success","data","agencies","Array","isArray","agencias","next","obtenerAgenciaUsuario","DefaultAgency","obtenerAgenciaUsuarioConReintentos","maxReintentos","delayMs","observer","intentos","intentarObtener","console","log","subscribe","defaultAgencyId","complete","error","warn","status","statusText","message","setTimeout","establecerAgenciaPredeterminada","autoSelect","value","agenciaSeleccionada","length","agenciaPredeterminada","find","ag","Id","seleccionarAgencia","agenciaId","getAgenciaSeleccionada","getAgencias","limpiarSeleccion","esAgenciaHabilitada","agencia","esHabilitado","Enabled","valor","undefined","valorStr","String","toLowerCase","getAgenciasHabilitadas","filter","getAgenciasPorEstado","habilitadas","tieneAgencias","tieneAgenciasHabilitadas","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn","CommonModule","MatDialogModule","MAT_DIALOG_DATA","MatButtonModule","MatTableModule","MatIconModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","client_r10","ndCliente","ɵɵtextInterpolate1","client_r11","razonSocial","ɵɵtemplate","ClientSelectionDialogComponent_td_15_div_4_Template","cliente","ɵɵproperty","client_r14","rfc","ClientSelectionDialogComponent_td_18_span_1_Template","ClientSelectionDialogComponent_td_18_ng_template_2_Template","ɵɵtemplateRefExtractor","_r17","client_r19","email","ClientSelectionDialogComponent_td_21_span_1_Template","ClientSelectionDialogComponent_td_21_ng_template_2_Template","_r22","ɵɵelement","ɵɵlistener","ClientSelectionDialogComponent_tr_23_Template_tr_click_0_listener","restoredCtx","ɵɵrestoreView","_r26","row_r24","$implicit","ctx_r25","ɵɵnextContext","ɵɵresetView","selectClient","ClientSelectionDialogComponent","dialogRef","displayedColumns","client","close","onCancel","ɵɵdirectiveInject","MatDialogRef","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ClientSelectionDialogComponent_Template","rf","ctx","ɵɵelementContainerStart","ClientSelectionDialogComponent_th_11_Template","ClientSelectionDialogComponent_td_12_Template","ɵɵelementContainerEnd","ClientSelectionDialogComponent_th_14_Template","ClientSelectionDialogComponent_td_15_Template","ClientSelectionDialogComponent_th_17_Template","ClientSelectionDialogComponent_td_18_Template","ClientSelectionDialogComponent_th_20_Template","ClientSelectionDialogComponent_td_21_Template","ClientSelectionDialogComponent_tr_22_Template","ClientSelectionDialogComponent_tr_23_Template","ClientSelectionDialogComponent_Template_button_click_25_listener","clients","i2","NgIf","MatDialogTitle","MatDialogActions","MatDialogContent","i3","MatButton","i4","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i5","MatIcon","styles","FormsModule","MatCardModule","MatProgressSpinnerModule","MatSnackBarModule","MatFormFieldModule","MatSelectModule","MatTooltipModule","MatInputModule","MatMenuModule","MatPaginatorModule","Subject","takeUntil","HttpParams","OrderSelectionDialogComponent","agency_r6","Name","IntegracionComponent_button_23_Template_button_click_0_listener","_r8","ctx_r7","clearClientSearch","ctx_r3","selectedClient","telefono","telefono2","IntegracionComponent_div_26_button_8_Template_button_click_0_listener","_r16","ctx_r15","agregarPedidoIntegracion","IntegracionComponent_div_26_button_17_Template_button_click_0_listener","_r18","ctx_r17","clearOrderSearch","file_r46","numeroPedido","file_r47","numeroInventario","IntegracionComponent_div_26_div_20_td_7_span_1_Template","IntegracionComponent_div_26_div_20_td_7_ng_template_2_Template","_r50","file_r52","proceso","IntegracionComponent_div_26_div_20_td_10_span_1_Template","IntegracionComponent_div_26_div_20_td_10_ng_template_2_Template","_r55","file_r57","operacion","IntegracionComponent_div_26_div_20_td_13_span_1_Template","IntegracionComponent_div_26_div_20_td_13_ng_template_2_Template","_r60","file_r62","tipoCliente","IntegracionComponent_div_26_div_20_td_16_span_1_Template","IntegracionComponent_div_26_div_20_td_16_ng_template_2_Template","_r65","file_r67","vehiculo","IntegracionComponent_div_26_div_20_td_19_span_1_Template","IntegracionComponent_div_26_div_20_td_19_ng_template_2_Template","_r70","file_r72","year","IntegracionComponent_div_26_div_20_td_22_span_1_Template","IntegracionComponent_div_26_div_20_td_22_ng_template_2_Template","_r75","file_r77","modelo","IntegracionComponent_div_26_div_20_td_25_span_1_Template","IntegracionComponent_div_26_div_20_td_25_ng_template_2_Template","_r80","file_r82","vin","IntegracionComponent_div_26_div_20_td_28_span_1_Template","IntegracionComponent_div_26_div_20_td_28_ng_template_2_Template","_r85","file_r87","IntegracionComponent_div_26_div_20_td_31_span_1_Template","IntegracionComponent_div_26_div_20_td_31_ng_template_2_Template","_r90","ɵɵpipeBind2","file_r92","fechaRegistro","IntegracionComponent_div_26_div_20_td_34_span_1_Template","IntegracionComponent_div_26_div_20_td_34_ng_template_2_Template","_r95","_r99","IntegracionComponent_div_26_div_20_td_37_button_1_Template","IntegracionComponent_div_26_div_20_td_37_Template_button_click_4_listener","_r101","file_r97","ctx_r100","cancelarPedido","IntegracionComponent_div_26_div_20_td_37_Template_button_click_9_listener","ctx_r102","excepcionPedido","IntegracionComponent_div_26_div_20_td_37_Template_button_click_14_listener","ctx_r103","eliminarPedido","ctx_r42","isManagerOrAdmin","IntegracionComponent_div_26_div_20_tr_39_Template_tr_click_0_listener","_r106","row_r104","ctx_r105","selectFile","IntegracionComponent_div_26_div_20_mat_paginator_40_Template_mat_paginator_page_0_listener","$event","_r108","ctx_r107","onPageChange","ctx_r45","totalItems","pageSize","currentPage","ɵɵpureFunction0","_c0","IntegracionComponent_div_26_div_20_th_3_Template","IntegracionComponent_div_26_div_20_td_4_Template","IntegracionComponent_div_26_div_20_th_6_Template","IntegracionComponent_div_26_div_20_td_7_Template","IntegracionComponent_div_26_div_20_th_9_Template","IntegracionComponent_div_26_div_20_td_10_Template","IntegracionComponent_div_26_div_20_th_12_Template","IntegracionComponent_div_26_div_20_td_13_Template","IntegracionComponent_div_26_div_20_th_15_Template","IntegracionComponent_div_26_div_20_td_16_Template","IntegracionComponent_div_26_div_20_th_18_Template","IntegracionComponent_div_26_div_20_td_19_Template","IntegracionComponent_div_26_div_20_th_21_Template","IntegracionComponent_div_26_div_20_td_22_Template","IntegracionComponent_div_26_div_20_th_24_Template","IntegracionComponent_div_26_div_20_td_25_Template","IntegracionComponent_div_26_div_20_th_27_Template","IntegracionComponent_div_26_div_20_td_28_Template","IntegracionComponent_div_26_div_20_th_30_Template","IntegracionComponent_div_26_div_20_td_31_Template","IntegracionComponent_div_26_div_20_th_33_Template","IntegracionComponent_div_26_div_20_td_34_Template","IntegracionComponent_div_26_div_20_th_36_Template","IntegracionComponent_div_26_div_20_td_37_Template","IntegracionComponent_div_26_div_20_tr_38_Template","IntegracionComponent_div_26_div_20_tr_39_Template","IntegracionComponent_div_26_div_20_mat_paginator_40_Template","ctx_r12","paginatedFiles","filesDisplayedColumns","filesLoading","IntegracionComponent_div_26_div_22_Template_button_click_5_listener","_r110","ctx_r109","IntegracionComponent_div_26_button_8_Template","IntegracionComponent_div_26_Template_input_ngModelChange_14_listener","_r112","ctx_r111","orderSearchTerm","IntegracionComponent_div_26_Template_input_input_14_listener","ctx_r113","onOrderSearchChange","IntegracionComponent_div_26_button_17_Template","IntegracionComponent_div_26_div_19_Template","IntegracionComponent_div_26_div_20_Template","IntegracionComponent_div_26_div_21_Template","IntegracionComponent_div_26_div_22_Template","ctx_r4","files","filteredFiles","document_r118","expirationDate","IntegracionComponent_div_27_div_13_div_1_div_7_Template","IntegracionComponent_div_27_div_13_div_1_Template_input_change_10_listener","_r123","ctx_r122","onFileSelected","documentId","IntegracionComponent_div_27_div_13_div_1_Template_button_click_12_listener","_r120","ɵɵreference","click","IntegracionComponent_div_27_div_13_div_1_Template_button_click_16_listener","ctx_r125","uploadDocument","IntegracionComponent_div_27_div_13_div_1_Template_button_click_20_listener","ctx_r126","viewDocument","ɵɵclassMap","ctx_r117","getDocumentStatusColor","idCurrentStatus","getDocumentStatusIcon","documentName","hasExpiration","selectedFiles","name","documentContainer","IntegracionComponent_div_27_div_13_div_1_Template","ctx_r115","requiredDocuments","IntegracionComponent_div_27_div_12_Template","IntegracionComponent_div_27_div_13_Template","IntegracionComponent_div_27_div_14_Template","ɵɵtextInterpolate8","ctx_r5","selectedFile","documentsLoading","IntegracionComponent","getBackblazeHeaders","backblaze","providerToken","snackBar","defaultAgencyService","dialog","loading","integrationStatus","lastUpdate","Date","selectedAgencyId","selectedAgency","agenciesLoading","clientSearchTerm","clientsLoading","showClientResults","userRole","integrationProcessId","destroy$","ngOnInit","loadIntegrationStatus","loadAgencies","checkUserPermissions","ngOnDestroy","col","startIntegration","open","duration","stopIntegration","getStatusColor","getStatusIcon","getStatusText","onAgencyChange","primeraAgencia","agencyId","agency","clearAgencyFilter","hasAgencies","trackByAgencyId","index","onClientSearchChange","trim","searchClients","performClientSearch","params","set","toString","clientes","showClientSelectionDialog","searchClientInVanguardia","IdAgency","vanguardia","headers","vanguardiaClient","id","nombre","phone","direccion","address","isVanguardiaClient","vanguardiaData","errorMessage","loadClientFiles","width","height","maxWidth","afterClosed","result","clearClientSelection","updateFilesDisplay","trackByClientId","file","loadOrdersFromVanguardia","testOrderDialog","testOrders","fileId","isVanguardiaOrder","showOrderSelectionDialog","ordersApiUrl","ordersData","orders","total_rows","results","showOrderSelectionDialogDirectly","processVanguardiaOrders","processedOrders","order","orderNumber","inventoryNumber","process","operation","clientType","vehicle","model","registrationDate","loadClientFilesForComparison","vanguardiaOrders","existingFiles","newOrders","filterNewOrders","existingOrderNumbers","Set","has","apiOrders","checkExistingOrders","requestData","post","existingOrders","existingCount","newCount","openOrderSelectionDialog","maxHeight","processSelectedOrders","addSelectedOrdersToTable","documentsCreated","selectedOrders","loadRequiredDocuments","documents","event","target","document","isReplacing","actionText","formData","FormData","append","saveDocumentInfo","backblazeResponse","documentData","documentTypeId","fileName","filePath","backblazeFileId","backblazeUrl","url","uploadDate","toISOString","getBackblazePrivateUrl","URLSearchParams","newWindow","window","filterAndPaginateFiles","pageIndex","uniqueFiles","self","findIndex","f","includes","startIndex","endIndex","slice","confirmMessage","confirm","deleteFileFromServer","documentsDeleted","MatSnackBar","MatDialog","IntegracionComponent_Template","IntegracionComponent_Template_mat_select_selectionChange_9_listener","IntegracionComponent_mat_option_12_Template","IntegracionComponent_Template_input_ngModelChange_17_listener","IntegracionComponent_Template_input_keyup_enter_17_listener","IntegracionComponent_Template_button_click_19_listener","IntegracionComponent_button_23_Template","IntegracionComponent_div_24_Template","IntegracionComponent_div_25_Template","IntegracionComponent_div_26_Template","IntegracionComponent_div_27_Template","NgForOf","DatePipe","i6","DefaultValueAccessor","NgControlStatus","NgModel","i7","MatCard","MatCardContent","MatCardHeader","MatCardTitle","i8","MatIconButton","i9","i10","MatProgressSpinner","i11","MatFormField","MatLabel","MatSuffix","i12","MatSelect","i13","MatOption","i14","MatTooltip","i15","MatInput","i16","i17","MatMenu","MatMenuItem","MatMenuTrigger","i18","MatPaginator","MatCheckboxModule","MatRadioModule","OrderSelectionDialogComponent_div_7_td_14_Template_mat_radio_button_change_1_listener","order_r20","ctx_r21","selectOrder","selectedOrder","order_r23","order_dms","orderDMS","order_r24","OrderSelectionDialogComponent_div_7_td_20_span_1_Template","OrderSelectionDialogComponent_div_7_td_20_ng_template_2_Template","_r27","order_r29","OrderSelectionDialogComponent_div_7_td_23_span_1_Template","OrderSelectionDialogComponent_div_7_td_23_ng_template_2_Template","_r32","order_r34","version","OrderSelectionDialogComponent_div_7_td_26_span_1_Template","OrderSelectionDialogComponent_div_7_td_26_ng_template_2_Template","_r37","order_r39","external_color","OrderSelectionDialogComponent_div_7_td_29_span_1_Template","OrderSelectionDialogComponent_div_7_td_29_ng_template_2_Template","_r42","order_r44","internal_color","OrderSelectionDialogComponent_div_7_td_32_span_1_Template","OrderSelectionDialogComponent_div_7_td_32_ng_template_2_Template","_r47","OrderSelectionDialogComponent_div_7_Template_input_ngModelChange_5_listener","_r51","ctx_r50","searchTerm","OrderSelectionDialogComponent_div_7_Template_input_input_5_listener","ctx_r52","applyFilter","OrderSelectionDialogComponent_div_7_th_13_Template","OrderSelectionDialogComponent_div_7_td_14_Template","OrderSelectionDialogComponent_div_7_th_16_Template","OrderSelectionDialogComponent_div_7_td_17_Template","OrderSelectionDialogComponent_div_7_th_19_Template","OrderSelectionDialogComponent_div_7_td_20_Template","OrderSelectionDialogComponent_div_7_th_22_Template","OrderSelectionDialogComponent_div_7_td_23_Template","OrderSelectionDialogComponent_div_7_th_25_Template","OrderSelectionDialogComponent_div_7_td_26_Template","OrderSelectionDialogComponent_div_7_th_28_Template","OrderSelectionDialogComponent_div_7_td_29_Template","OrderSelectionDialogComponent_div_7_th_31_Template","OrderSelectionDialogComponent_div_7_td_32_Template","OrderSelectionDialogComponent_div_7_tr_33_Template","OrderSelectionDialogComponent_div_7_tr_34_Template","OrderSelectionDialogComponent_div_7_Template_mat_paginator_page_35_listener","ctx_r53","OrderSelectionDialogComponent_div_7_div_36_Template","ctx_r1","filteredOrders","paginatedOrders","process_r58","costumerType_r59","operationType_r60","OrderSelectionDialogComponent_div_8_div_47_div_1_Template","OrderSelectionDialogComponent_div_8_div_47_div_2_Template","ctx_r57","isConfigurationValid","OrderSelectionDialogComponent_div_8_Template_mat_select_ngModelChange_9_listener","_r64","ctx_r63","selectedProcess","OrderSelectionDialogComponent_div_8_Template_mat_select_selectionChange_9_listener","ctx_r65","onProcessChange","OrderSelectionDialogComponent_div_8_mat_option_10_Template","OrderSelectionDialogComponent_div_8_Template_mat_select_ngModelChange_16_listener","ctx_r66","selectedCostumerType","OrderSelectionDialogComponent_div_8_Template_mat_select_selectionChange_16_listener","ctx_r67","onCostumerTypeChange","OrderSelectionDialogComponent_div_8_mat_option_17_Template","OrderSelectionDialogComponent_div_8_Template_mat_select_ngModelChange_23_listener","ctx_r68","selectedOperationType","OrderSelectionDialogComponent_div_8_mat_option_24_Template","OrderSelectionDialogComponent_div_8_div_47_Template","ctx_r2","processes","availableCostumerTypes","availableOperationTypes","originalOrders","costumerTypes","operationTypes","allConfigurations","loadComboData","updatePaginatedOrders","existingOrderDms","orderDms","searchLower","configurations","loadIndividualComboData","filterCostumerTypesByProcess","filterOperationTypesByProcessAndCostumerType","configurationsWithProcess","config","IdProcess","costumerTypeIds","IdCostumerType","costumerType","configurationsWithProcessAndCostumer","operationTypeIds","IdOperationType","operationType","isFormValid","validConfiguration","onConfirm","createFileFromVanguardia","clientId","viewQuery","OrderSelectionDialogComponent_Query","OrderSelectionDialogComponent_div_6_Template","OrderSelectionDialogComponent_div_7_Template","OrderSelectionDialogComponent_div_8_Template","OrderSelectionDialogComponent_Template_button_click_13_listener","OrderSelectionDialogComponent_Template_button_click_17_listener","MatRadioButton","RequiredValidator"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}