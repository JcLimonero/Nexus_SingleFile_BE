{"version":3,"file":"common.js","mappings":"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","sources":["./src/@vex/components/vex-page-layout/vex-page-layout-header.directive.ts","./src/@vex/components/vex-secondary-toolbar/vex-secondary-toolbar.component.ts","./src/app/core/services/costumer-type.service.ts","./src/app/core/services/document-type.service.ts","./src/app/core/services/file-extraordinary-reason.service.ts","./src/app/core/services/proceso.service.ts","./src/app/core/services/tipo-operacion.service.ts","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-cards/components-overview-cards.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-cards/components-overview-cards.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-checkbox/components-overview-checkbox.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-checkbox/components-overview-checkbox.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-input/components-overview-input.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-input/components-overview-input.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-lists/components-overview-lists.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-lists/components-overview-lists.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-menu/components-overview-menu.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-menu/components-overview-menu.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-progress-spinner/components-overview-progress-spinner.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-progress-spinner/components-overview-progress-spinner.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-progress/components-overview-progress.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-progress/components-overview-progress.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-radio/components-overview-radio.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-radio/components-overview-radio.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-slide-toggle/components-overview-slide-toggle.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-slide-toggle/components-overview-slide-toggle.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-slider/components-overview-slider.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-slider/components-overview-slider.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-snack-bar/components-overview-snack-bar.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-snack-bar/components-overview-snack-bar.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-tooltip/components-overview-tooltip.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-tooltip/components-overview-tooltip.component.html","./src/static-data/friend-suggestions.ts"],"sourcesContent":["import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[vexPageLayoutHeader],vex-page-layout-header',\n  host: {\n    class: 'vex-page-layout-header'\n  },\n  standalone: true\n})\nexport class VexPageLayoutHeaderDirective {\n  constructor() {}\n}\n","import { Component, Input } from '@angular/core';\nimport { VexConfigService } from '../../config/vex-config.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { AsyncPipe, NgClass, NgIf } from '@angular/common';\n\n@Component({\n  selector: 'vex-secondary-toolbar',\n  template: `\n    <div class=\"secondary-toolbar-placeholder\">&nbsp;</div>\n\n    <div\n      [ngClass]=\"{ fixed: fixed$ | async, 'w-full': !(fixed$ | async) }\"\n      class=\"secondary-toolbar py-1 z-40 border-t flex\">\n      <div\n        class=\"px-6 flex items-center flex-auto\"\n        [class.container]=\"isVerticalLayout$ | async\">\n        <h1\n          *ngIf=\"current\"\n          class=\"subheading-2 font-medium m-0 ltr:pr-3 rtl:pl-3 ltr:border-r rtl:border-l ltr:mr-3 rtl:ml-3 flex-none\">\n          {{ current }}\n        </h1>\n\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./vex-secondary-toolbar.component.scss'],\n  standalone: true,\n  imports: [NgClass, NgIf, AsyncPipe]\n})\nexport class VexSecondaryToolbarComponent {\n  @Input() current?: string;\n\n  fixed$ = this.configService.config$.pipe(\n    map((config) => config.toolbar.fixed)\n  );\n\n  isVerticalLayout$: Observable<boolean> = this.configService\n    .select((config) => config.layout)\n    .pipe(map((layout) => layout === 'vertical'));\n\n  constructor(private readonly configService: VexConfigService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CostumerType, CostumerTypeCreateRequest, CostumerTypeUpdateRequest, CostumerTypeResponse } from '../interfaces/costumer-type.interface';\nimport { ApiBaseService } from './api-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CostumerTypeService {\n  private readonly API_URL = 'costumer-type';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) { }\n\n  getCostumerTypes(limit?: number): Observable<CostumerTypeResponse> {\n    const params = limit ? `?limit=${limit}` : '';\n    return this.http.get<CostumerTypeResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}${params}`);\n  }\n\n  getAllCostumerTypes(): Observable<CostumerTypeResponse> {\n    return this.http.get<CostumerTypeResponse>(this.apiBaseService.buildApiUrl(this.API_URL));\n  }\n\n  getCostumerTypesByStatus(enabled: string): Observable<CostumerTypeResponse> {\n    return this.http.get<CostumerTypeResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}?enabled=${enabled}`);\n  }\n\n  getCostumerTypeById(id: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  createCostumerType(costumerType: CostumerTypeCreateRequest): Observable<any> {\n    return this.http.post(this.apiBaseService.buildApiUrl(this.API_URL), costumerType);\n  }\n\n  updateCostumerType(id: string, costumerType: CostumerTypeUpdateRequest): Observable<any> {\n    return this.http.put(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, costumerType);\n  }\n\n  deleteCostumerType(id: string): Observable<any> {\n    return this.http.delete(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  toggleStatus(id: string): Observable<any> {\n    return this.http.patch(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/toggle-status`, {});\n  }\n\n  searchCostumerTypes(query: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/search?q=${query}`);\n  }\n\n  getStats(): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/stats`);\n  }\n\n  getActiveCostumerTypes(): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/active`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { \n  DocumentType, \n  DocumentTypeResponse, \n  DocumentTypeCreateRequest, \n  DocumentTypeUpdateRequest,\n  DocumentTypeStatsResponse,\n  DocumentTypeSearchResponse,\n  DocumentTypeActiveResponse\n} from '../interfaces/document-type.interface';\nimport { ApiBaseService } from './api-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentTypeService {\n  private readonly API_URL = 'document-type';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) { }\n\n  /**\n   * Obtener todos los tipos de documento con filtros y paginación\n   */\n  getDocumentTypes(params?: {\n    page?: number;\n    limit?: number | string;\n    enabled?: string;\n    search?: string;\n    sort_by?: string;\n    sort_order?: string;\n  }): Observable<DocumentTypeResponse> {\n    let httpParams = new HttpParams();\n    \n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== null && value !== undefined && value !== '') {\n          httpParams = httpParams.set(key, value.toString());\n        }\n      });\n    }\n\n    return this.http.get<DocumentTypeResponse>(this.apiBaseService.buildApiUrl(this.API_URL), { params: httpParams });\n  }\n\n  /**\n   * Obtener un tipo de documento específico por ID\n   */\n  getDocumentType(id: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  /**\n   * Crear un nuevo tipo de documento\n   */\n  createDocumentType(documentType: DocumentTypeCreateRequest): Observable<any> {\n    return this.http.post(this.apiBaseService.buildApiUrl(this.API_URL), documentType);\n  }\n\n  /**\n   * Actualizar un tipo de documento existente\n   */\n  updateDocumentType(id: string, documentType: DocumentTypeUpdateRequest): Observable<any> {\n    return this.http.put(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, documentType);\n  }\n\n  /**\n   * Eliminar un tipo de documento\n   */\n  deleteDocumentType(id: string): Observable<any> {\n    return this.http.delete(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  /**\n   * Cambiar estado (habilitado/deshabilitado) de un tipo de documento\n   */\n  toggleStatus(id: string): Observable<any> {\n    return this.http.patch(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/toggle-status`, {});\n  }\n\n  /**\n   * Obtener solo los tipos de documento activos\n   */\n  getActiveDocumentTypes(): Observable<DocumentTypeActiveResponse> {\n    return this.http.get<DocumentTypeActiveResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/active`);\n  }\n\n  /**\n   * Buscar tipos de documento por nombre\n   */\n  searchDocumentTypes(query: string, limit?: string): Observable<DocumentTypeSearchResponse> {\n    let params = new HttpParams().set('q', query);\n    if (limit) {\n      params = params.set('limit', limit);\n    }\n    \n    return this.http.get<DocumentTypeSearchResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/search`, { params });\n  }\n\n  /**\n   * Obtener estadísticas de los tipos de documento\n   */\n  getStats(): Observable<DocumentTypeStatsResponse> {\n    return this.http.get<DocumentTypeStatsResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/stats`);\n  }\n\n  /**\n   * Obtener todos los tipos de documento sin paginación\n   */\n  getAllDocumentTypes(): Observable<DocumentTypeResponse> {\n    return this.getDocumentTypes({ limit: 'all' });\n  }\n\n  /**\n   * Obtener tipos de documento habilitados\n   */\n  getEnabledDocumentTypes(): Observable<DocumentTypeResponse> {\n    return this.getDocumentTypes({ enabled: '1', limit: 'all' });\n  }\n\n  /**\n   * Obtener tipos de documento deshabilitados\n   */\n  getDisabledDocumentTypes(): Observable<DocumentTypeResponse> {\n    return this.getDocumentTypes({ enabled: '0', limit: 'all' });\n  }\n\n  /**\n   * Obtener estados de archivo activos (File_Status)\n   */\n  getActiveFileStatuses(): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl('file-status/active')}`);\n  }\n\n  /**\n   * Obtener subestados de archivo activos (File_SubStatus)\n   */\n  getActiveSubProcesses(): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl('file-sub-status/active')}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\nexport interface FileExtraordinaryReason {\n  Id: number;\n  Name: string;\n  IdTypeReason: number;\n  Enabled: number;\n  RegistrationDate: string;\n  UpdateDate: string;\n  IdLastUserUpdate: number;\n}\n\nexport interface FileExtraordinaryReasonFilters {\n  search?: string;\n  id_type_reason?: number;\n  sort_by?: string;\n  sort_order?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface FileExtraordinaryReasonResponse {\n  success: boolean;\n  message: string;\n  data: {\n    file_extraordinary_reasons: FileExtraordinaryReason[];\n    total: number;\n  };\n}\n\nexport interface FileExtraordinaryReasonStats {\n  total_reasons: number;\n  type_reason_stats: Array<{\n    IdTypeReason: number;\n    count: number;\n  }>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileExtraordinaryReasonService {\n  private apiUrl = `${environment.apiBaseUrl}/api/file-extraordinary-reason`;\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Obtener todos los motivos extraordinarios con filtros y paginación\n   */\n  getFileExtraordinaryReasons(filters: FileExtraordinaryReasonFilters = {}): Observable<FileExtraordinaryReasonResponse> {\n    let params = new HttpParams();\n\n    if (filters.search) {\n      params = params.set('search', filters.search);\n    }\n\n    if (filters.id_type_reason !== undefined) {\n      params = params.set('id_type_reason', filters.id_type_reason.toString());\n    }\n\n    if (filters.sort_by) {\n      params = params.set('sort_by', filters.sort_by);\n    }\n\n    if (filters.sort_order) {\n      params = params.set('sort_order', filters.sort_order);\n    }\n\n    if (filters.limit) {\n      params = params.set('limit', filters.limit.toString());\n    }\n\n    if (filters.offset) {\n      params = params.set('offset', filters.offset.toString());\n    }\n\n    return this.http.get<FileExtraordinaryReasonResponse>(this.apiUrl, { params });\n  }\n\n  /**\n   * Obtener un motivo extraordinario específico por ID\n   */\n  getFileExtraordinaryReason(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n\n  /**\n   * Crear un nuevo motivo extraordinario\n   */\n  createFileExtraordinaryReason(fileExtraordinaryReason: Partial<FileExtraordinaryReason>): Observable<any> {\n    console.log('🔍 Datos a enviar al backend:', fileExtraordinaryReason);\n    return this.http.post(this.apiUrl, fileExtraordinaryReason);\n  }\n\n  /**\n   * Actualizar un motivo extraordinario existente\n   */\n  updateFileExtraordinaryReason(id: number, fileExtraordinaryReason: Partial<FileExtraordinaryReason>): Observable<any> {\n    return this.http.put(`${this.apiUrl}/${id}`, fileExtraordinaryReason);\n  }\n\n  /**\n   * Eliminar un motivo extraordinario\n   */\n  deleteFileExtraordinaryReason(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n  /**\n   * Buscar motivos extraordinarios\n   */\n  searchFileExtraordinaryReasons(query: string, limit: number = 10): Observable<any> {\n    const params = new HttpParams()\n      .set('q', query)\n      .set('limit', limit.toString());\n\n    return this.http.get(`${this.apiUrl}/search`, { params });\n  }\n\n  /**\n   * Obtener estadísticas de motivos extraordinarios\n   */\n  getStats(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/stats`);\n  }\n\n  /**\n   * Obtener motivos extraordinarios activos\n   */\n  getActiveFileExtraordinaryReasons(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/active`);\n  }\n\n  /**\n   * Cambiar estado del motivo extraordinario\n   */\n  toggleStatus(id: number): Observable<any> {\n    return this.http.patch(`${this.apiUrl}/${id}/toggle-status`, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n  Proceso,\n  ProcesoCreateRequest,\n  ProcesoUpdateRequest,\n  ProcesoResponse\n} from '../interfaces/proceso.interface';\nimport { ApiBaseService } from './api-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcesoService {\n  private readonly API_URL = 'process';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) {}\n\n  getProcesos(): Observable<ProcesoResponse> {\n    return this.http.get<ProcesoResponse>(this.apiBaseService.buildApiUrl(this.API_URL));\n  }\n\n  getProceso(id: string): Observable<ProcesoResponse> {\n    return this.http.get<ProcesoResponse>(this.apiBaseService.buildApiUrl(`${this.API_URL}/${id}`));\n  }\n\n  createProceso(proceso: ProcesoCreateRequest): Observable<ProcesoResponse> {\n    return this.http.post<ProcesoResponse>(this.apiBaseService.buildApiUrl(this.API_URL), proceso);\n  }\n\n  updateProceso(proceso: ProcesoUpdateRequest): Observable<ProcesoResponse> {\n    return this.http.put<ProcesoResponse>(this.apiBaseService.buildApiUrl(`${this.API_URL}/${proceso.Id}`), proceso);\n  }\n\n  deleteProceso(id: string, force: boolean = false): Observable<ProcesoResponse> {\n    const params = force ? new HttpParams().set('force', 'true') : new HttpParams();\n    return this.http.delete<ProcesoResponse>(this.apiBaseService.buildApiUrl(`${this.API_URL}/${id}`), { params });\n  }\n\n  toggleEstado(id: string, estado: string): Observable<ProcesoResponse> {\n    return this.http.patch<ProcesoResponse>(this.apiBaseService.buildApiUrl(`${this.API_URL}/${id}/estado`), { estado });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TipoOperacion, TipoOperacionCreateRequest, TipoOperacionUpdateRequest, TipoOperacionResponse } from '../interfaces/tipo-operacion.interface';\nimport { ApiBaseService } from './api-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoOperacionService {\n  private readonly API_URL = 'operation-type';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) { }\n\n  getTiposOperacion(): Observable<TipoOperacionResponse> {\n    return this.http.get<TipoOperacionResponse>(this.apiBaseService.buildApiUrl(this.API_URL));\n  }\n\n  getTiposOperacionByStatus(enabled: string): Observable<TipoOperacionResponse> {\n    return this.http.get<TipoOperacionResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}?enabled=${enabled}`);\n  }\n\n  createTipoOperacion(tipoOperacion: TipoOperacionCreateRequest): Observable<any> {\n    return this.http.post(this.apiBaseService.buildApiUrl(this.API_URL), tipoOperacion);\n  }\n\n  updateTipoOperacion(id: string, tipoOperacion: TipoOperacionUpdateRequest): Observable<any> {\n    return this.http.put(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, tipoOperacion);\n  }\n\n  deleteTipoOperacion(id: string): Observable<any> {\n    return this.http.delete(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  toggleEstado(id: string): Observable<any> {\n    return this.http.patch(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/estado`, {});\n  }\n\n  searchTiposOperacion(query: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/search?q=${query}`);\n  }\n\n  getStats(): Observable<any> {\n    return this.http.get(this.apiBaseService.buildApiUrl(`${this.API_URL}/stats`));\n  }\n}\n","import { Component } from '@angular/core';\nimport { ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { CountryState } from '../../../../forms/form-elements/form-elements.component';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatOptionModule } from '@angular/material/core';\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'vex-components-overview-autocomplete',\n  templateUrl: './components-overview-autocomplete.component.html',\n  styleUrls: ['./components-overview-autocomplete.component.scss'],\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    NgFor,\n    MatOptionModule,\n    NgIf,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n    VexHighlightDirective,\n    AsyncPipe\n  ]\n})\nexport class ComponentsOverviewAutocompleteComponent {\n  // noinspection AngularInvalidTemplateReferenceVariable,AngularMissingRequiredDirectiveInputBinding\n  autocompleteHTML = `<mat-input-container>\n  <mat-label>State</mat-label>\n  <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\n  <mat-autocomplete #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n      {{ option }}\n    </mat-option>\n  </mat-autocomplete>\n</mat-input-container>\n`;\n\n  stateCtrl: UntypedFormControl = new UntypedFormControl();\n  filteredStates$: Observable<CountryState[]> =\n    this.stateCtrl.valueChanges.pipe(\n      startWith(''),\n      map((state) => (state ? this.filterStates(state) : this.states.slice()))\n    );\n\n  states: CountryState[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\n\n  filterStates(name: string) {\n    return this.states.filter(\n      (state) => state.name.toLowerCase().indexOf(name.toLowerCase()) === 0\n    );\n  }\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px] flex-none\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n\n    <mat-form-field class=\"w-300 max-w-full\">\n      <mat-label>Select a State</mat-label>\n      <input [formControl]=\"stateCtrl\" [matAutocomplete]=\"auto\" matInput />\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option\n          *ngFor=\"let state of filteredStates$ | async\"\n          [value]=\"state.name\">\n          <span class=\"flex items-center\">\n            <img\n              [src]=\"state.flag\"\n              class=\"align-middle mr-4 shadow-lg h-6 inline-block\" />\n            <span class=\"flex flex-col\">\n              <span class=\"body-1 leading-snug\">{{ state.name }}</span>\n              <span class=\"caption text-secondary leading-none\"\n              >Population: {{ state.population }}</span\n              >\n            </span>\n          </span>\n        </mat-option>\n      </mat-autocomplete>\n      <button\n        (click)=\"stateCtrl.reset()\"\n        *ngIf=\"stateCtrl.value\"\n        mat-icon-button\n        matIconSuffix\n        type=\"button\">\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\n      </button>\n      <button *ngIf=\"!stateCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\n        <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\n      </button>\n      <mat-hint>Add this hint for a better UX!</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div class=\"border-l flex-auto\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Autocomplete</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-autocomplete&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <div class=\"p-6\">\n          <p class=\"m-0\">\n            Input text can be used with autocomplete to help users who have\n            limited literacy or who write in a foreign language.\n            <br />\n            <br /><span class=\"font-medium\"\n          >For example, autocomplete can:</span\n          >\n          </p>\n          <ul>\n            <li>\n              Suggest input as it’s typed (refreshing suggestions with each\n              keystroke)\n            </li>\n            <li>Fill a field with default input text</li>\n            <li>\n              Pressing the return button accepts the current autocomplete\n              suggestion.\n            </li>\n          </ul>\n        </div>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"autocompleteHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'vex-components-overview-cards',\n  templateUrl: './components-overview-cards.component.html',\n  styleUrls: ['./components-overview-cards.component.scss'],\n  standalone: true,\n  imports: [\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n    VexHighlightDirective\n  ]\n})\nexport class ComponentsOverviewCardsComponent implements OnInit {\n  cardHTML = `<mat-card>\n  <mat-card-header>\n    <img mat-card-avatar src=\"assets/img/avatars/3.jpg\">\n    <mat-card-title>Gerald Morris</mat-card-title>\n    <mat-card-subtitle>Yesterday</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"assets/img/backgrounds/1.jpg\">\n  <mat-card-content>\n    <p>Piqued favour stairs it enable exeter as seeing. Remainder met improving but engrossed sincerity age. Better but length gay denied abroad are. Attachment astonished to on appearance imprudence so collecting in excellence. Tiled way blind lived whose new. The for fully had she there leave merit enjoy forth. </p>\n  </mat-card-content>\n  <mat-divider></mat-divider>\n  <mat-card-actions>\n    <div class=\"flex\">\n      <button mat-icon-button>\n        <mat-icon>share</mat-icon>\n      </button>\n      <button mat-icon-button>\n        <mat-icon>favorite</mat-icon>\n      </button>\n      <span class=\"flex-1\"></span>\n      <button mat-button>\n        More Info\n      </button>\n      <button mat-button>\n        Save as\n      </button>\n    </div>\n  </mat-card-actions>\n</mat-card>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card overflow-hidden flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px] bg-app-bar\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n\n    <mat-card class=\"max-w-full\">\n      <mat-card-header>\n        <img mat-card-avatar src=\"assets/img/avatars/3.jpg\" />\n        <mat-card-title>Gerald Morris</mat-card-title>\n        <mat-card-subtitle>Yesterday</mat-card-subtitle>\n      </mat-card-header>\n      <img mat-card-image src=\"assets/img/demo/mountain-cinematic.jpg\" />\n      <mat-card-content>\n        <p class=\"my-4\">\n          Piqued favour stairs it enable exeter as seeing. Remainder met\n          improving but engrossed sincerity age. Better but length gay denied\n          abroad are. Attachment astonished to on appearance imprudence so\n          collecting in excellence. Tiled way blind lived whose new. The for\n          fully had she there leave merit enjoy forth.\n        </p>\n      </mat-card-content>\n      <mat-card-actions>\n        <button color=\"primary\" mat-icon-button>\n          <mat-icon svgIcon=\"mat:share\"></mat-icon>\n        </button>\n        <button color=\"accent\" mat-icon-button>\n          <mat-icon svgIcon=\"mat:favorite\"></mat-icon>\n        </button>\n        <span class=\"flex-1\"></span>\n        <button class=\"hidden sm:inline-block\" mat-button>MORE INFO</button>\n        <button color=\"primary\" mat-button>SAVE AS</button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Cards</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-card&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6 m-0\">\n          Cards may contain a photo, text, and a link about a single subject.\n          They may display content containing elements of varying size, such as\n          photos with captions of variable length.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"cardHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'vex-components-overview-checkbox',\n  templateUrl: './components-overview-checkbox.component.html',\n  styleUrls: ['./components-overview-checkbox.component.scss'],\n  standalone: true,\n  imports: [MatCheckboxModule, MatTabsModule, VexHighlightDirective]\n})\nexport class ComponentsOverviewCheckboxComponent implements OnInit {\n  checkboxHTML = `<mat-checkbox>Checkbox</mat-checkbox>\n<mat-checkbox color=\"primary\" [checked]=\"true\">Primary</mat-checkbox>\n<mat-checkbox color=\"accent\" [checked]=\"true\">Accent</mat-checkbox>\n<mat-checkbox color=\"warn\" [checked]=\"true\">Warn</mat-checkbox>\n<mat-checkbox disabled [checked]=\"true\">Disabled</mat-checkbox>\n<mat-checkbox [indeterminate]=\"true\">Indeterminate</mat-checkbox>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col gap-3\">\n      <mat-checkbox [checked]=\"true\" color=\"primary\">Primary</mat-checkbox>\n      <mat-checkbox [checked]=\"true\" color=\"accent\">Accent</mat-checkbox>\n      <mat-checkbox [checked]=\"true\" color=\"warn\">Warn</mat-checkbox>\n      <mat-checkbox [checked]=\"true\" disabled>Disabled</mat-checkbox>\n      <mat-checkbox [indeterminate]=\"true\">Indeterminate</mat-checkbox>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Checkbox</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-checkbox&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Checkboxes allow the user to select multiple options from a set.\n          <br />If you have multiple options appearing in a list, you can\n          preserve space by using checkboxes instead of on/off switches.\n          <br />If you have a single option, avoid using a checkbox and use an\n          on/off switch instead.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"checkboxHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogModule,\n  MatDialogRef\n} from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgIf } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'vex-components-overview-dialogs',\n  templateUrl: './components-overview-dialogs.component.html',\n  styleUrls: ['./components-overview-dialogs.component.scss'],\n  standalone: true,\n  imports: [MatButtonModule, NgIf, MatTabsModule, VexHighlightDirective]\n})\nexport class ComponentsOverviewDialogsComponent {\n  result?: string;\n\n  dialogHTML = `<button mat-raised-button type=\"button\" (click)=\"openDialog()\" color=\"primary\">Open Dialog</button>\n<p *ngIf=\"result\">You chose: {{ result }}</p>\n`;\n\n  constructor(private dialog: MatDialog) {}\n\n  openDialog() {\n    this.dialog\n      .open(DemoDialogComponent, {\n        disableClose: false,\n        width: '400px'\n      })\n      .afterClosed()\n      .subscribe((result) => {\n        this.result = result;\n      });\n  }\n}\n\n@Component({\n  selector: 'vex-components-overview-demo-dialog',\n  template: `\n    <div mat-dialog-title class=\"flex items-center justify-between\">\n      <div>Question</div>\n      <button\n        type=\"button\"\n        mat-icon-button\n        (click)=\"close('No answer')\"\n        tabindex=\"-1\">\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\n      </button>\n    </div>\n\n    <mat-dialog-content>\n      <p>Do you like Pizza?</p>\n    </mat-dialog-content>\n\n    <mat-dialog-actions align=\"end\">\n      <button mat-button (click)=\"close('No')\">No</button>\n      <button mat-button color=\"primary\" (click)=\"close('Yes')\">Yes</button>\n    </mat-dialog-actions>\n  `,\n  standalone: true,\n  imports: [MatDialogModule, MatButtonModule, MatIconModule]\n})\nexport class DemoDialogComponent {\n  constructor(private dialogRef: MatDialogRef<DemoDialogComponent>) {}\n\n  close(answer: string) {\n    this.dialogRef.close(answer);\n  }\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center gap-6\">\n      <button\n        (click)=\"openDialog()\"\n        color=\"primary\"\n        mat-raised-button\n        type=\"button\">\n        Open Dialog\n      </button>\n      <p *ngIf=\"result\">You answered with: {{ result }}</p>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Dialogs</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-dialog&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Dialogs contain text and UI controls. They retain focus until\n          dismissed or a required action has been taken. Use dialogs sparingly\n          because they are interruptive.\n          <br />\n          <br /><span class=\"semi-bold\">Some dialog types include:</span>\n          <br /><span class=\"semi-bold\">Alerts</span> are urgent interruptions\n          that inform about a situation and require acknowledgement. <br /><span\n          class=\"semi-bold\"\n        >Simple menus</span\n        >\n          display options for list items, whereas simple dialogs can provide\n          details or actions about a list item. <br /><span class=\"semi-bold\"\n        >Confirmation dialogs</span\n        >\n          require users to explicitly confirm a choice.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"dialogHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgIf } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'vex-components-overview-input',\n  templateUrl: './components-overview-input.component.html',\n  styleUrls: ['./components-overview-input.component.scss'],\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    NgIf,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatTabsModule,\n    VexHighlightDirective\n  ]\n})\nexport class ComponentsOverviewInputComponent implements OnInit {\n  inputHTML = `<mat-form-field>\n  <button *ngIf=\"!visible\" type=\"button\" mat-icon-button matIconPrefix (click)=\"show()\">\n    <mat-icon>lock</mat-icon>\n  </button>\n  <button *ngIf=\"visible\" type=\"button\" mat-icon-button matIconPrefix (click)=\"hide()\">\n    <mat-icon>lock_open</mat-icon>\n  </button>\n  <mat-label>Password</mat-label>\n  <input matInput [type]=\"inputType\">\n  <button *ngIf=\"!visible\" type=\"button\" mat-icon-button matIconSuffix (click)=\"show()\">\n    <mat-icon>visibility</mat-icon>\n  </button>\n  <button *ngIf=\"visible\" type=\"button\" mat-icon-button matIconSuffix (click)=\"hide()\">\n    <mat-icon>visibility_off</mat-icon>\n  </button>\n</mat-form-field>`;\n  inputType = 'password';\n  visible = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n\n  show() {\n    this.inputType = 'text';\n    this.visible = true;\n    this.cd.markForCheck();\n  }\n\n  hide() {\n    this.inputType = 'password';\n    this.visible = false;\n    this.cd.markForCheck();\n  }\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col\">\n      <mat-form-field>\n        <button\n          (click)=\"show()\"\n          *ngIf=\"!visible\"\n          mat-icon-button\n          matIconPrefix\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:lock\"></mat-icon>\n        </button>\n        <button\n          (click)=\"hide()\"\n          *ngIf=\"visible\"\n          mat-icon-button\n          matIconPrefix\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:lock_open\"></mat-icon>\n        </button>\n        <mat-label>Password</mat-label>\n        <input [type]=\"inputType\" matInput value=\"Hello!\" />\n        <button\n          (click)=\"show()\"\n          *ngIf=\"!visible\"\n          mat-icon-button\n          matIconSuffix\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:visibility\"></mat-icon>\n        </button>\n        <button\n          (click)=\"hide()\"\n          *ngIf=\"visible\"\n          mat-icon-button\n          matIconSuffix\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:visibility_off\"></mat-icon>\n        </button>\n        <mat-hint\n        >Try clicking the eye or the lock to toggle the visibility.\n        </mat-hint>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Input</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-input&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Text fields typically reside in forms but can appear in other places,\n          like dialog boxes and search.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"inputHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\n\n@Component({\n  selector: 'vex-components-overview-lists',\n  templateUrl: './components-overview-lists.component.html',\n  styleUrls: ['./components-overview-lists.component.scss'],\n  standalone: true,\n  imports: [\n    MatListModule,\n    MatDividerModule,\n    MatTabsModule,\n    VexHighlightDirective\n  ]\n})\nexport class ComponentsOverviewListsComponent implements OnInit {\n  listHTML = `<mat-list class=\"list mat-elevation-z1\">\n  <h3 mat-subheader>Contacts</h3>\n  <mat-list-item>\n    <img mat-list-avatar src=\"assets/img/avatars/1.jpg\">\n    <h3 matLine>John</h3>\n    <p matLine>\n      <span>Brunch?</span>\n      <span class=\"subline\">-- Did you want to go on Sunday? I was thinking</span>\n    </p>\n  </mat-list-item>\n  <mat-list-item>\n    <img mat-list-avatar src=\"assets/img/avatars/2.jpg\">\n    <h3 matLine>Peter</h3>\n    <p matLine>\n      <span>Summer BBQ</span>\n      <span class=\"subline\">-- Wish I could come, but I have some special</span>\n    </p>\n  </mat-list-item>\n  <mat-list-item>\n    <img mat-list-avatar src=\"assets/img/avatars/3.jpg\">\n    <h3 matLine>Nancy</h3>\n    <p matLine>\n      <span>Oui oui</span>\n      <span class=\"subline\">-- Have you booked the Paris trip?</span>\n    </p>\n  </mat-list-item>\n  <mat-divider></mat-divider>\n  <h3 mat-subheader>Other</h3>\n  <mat-list-item>\n    <img mat-list-avatar src=\"assets/img/avatars/4.jpg\">\n    <h3 matLine>Frank</h3>\n    <p matLine>\n      <span>Pretty decent!</span>\n      <span class=\"subline\">-- You look pretty... decent!</span>\n    </p>\n  </mat-list-item>\n  <mat-list-item>\n    <img mat-list-avatar src=\"assets/img/avatars/5.jpg\">\n    <h3 matLine>Donald</h3>\n    <p matLine>\n      <span>That's great!</span>\n      <span class=\"subline\">-- Great work mate!</span>\n    </p>\n  </mat-list-item>\n</mat-list>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px] bg-app-bar\">\n    <mat-list class=\"card max-w-full overflow-hidden w-300\">\n      <h3 mat-subheader>Contacts</h3>\n      <mat-list-item>\n        <img matListItemAvatar src=\"assets/img/avatars/1.jpg\" />\n        <h3 matListItemTitle>John</h3>\n        <p matListItemLine>\n          <span>Brunch?</span>\n          <span class=\"text-secondary\"\n          >-- Did you want to go on Sunday? I was thinking</span\n          >\n        </p>\n      </mat-list-item>\n      <mat-list-item>\n        <img matListItemAvatar src=\"assets/img/avatars/2.jpg\" />\n        <h3 matListItemTitle>Peter</h3>\n        <p matListItemLine>\n          <span>Summer BBQ</span>\n          <span class=\"text-secondary\"\n          >-- Wish I could come, but I have some special</span\n          >\n        </p>\n      </mat-list-item>\n      <mat-list-item>\n        <img matListItemAvatar src=\"assets/img/avatars/3.jpg\" />\n        <h3 matListItemTitle>Nancy</h3>\n        <p matListItemLine>\n          <span>Oui oui</span>\n          <span class=\"text-secondary\">-- Have you booked the Paris trip?</span>\n        </p>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <h3 mat-subheader>Other</h3>\n      <mat-list-item>\n        <img matListItemAvatar src=\"assets/img/avatars/4.jpg\" />\n        <h3 matListItemTitle>Frank</h3>\n        <p matListItemLine>\n          <span>Pretty decent!</span>\n          <span class=\"text-secondary\">-- You look pretty... decent!</span>\n        </p>\n      </mat-list-item>\n      <mat-list-item>\n        <img matListItemAvatar src=\"assets/img/avatars/5.jpg\" />\n        <h3 matListItemTitle>Donald</h3>\n        <p matListItemLine>\n          <span>That's great!</span>\n          <span class=\"text-secondary\">-- Great work mate!</span>\n        </p>\n      </mat-list-item>\n    </mat-list>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Lists</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-list&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Lists are made up of a continuous column of rows. Each row contains a\n          tile. Primary actions fill the tile, and supplemental actions are\n          represented by icons and text.\n          <br />\n          <br />Lists are best suited to presenting a homogeneous data type or\n          sets of data types, such as images and text. They are optimized for\n          reading comprehension while differentiating either between similar\n          data types, or qualities within a single data type.\n          <br />\n          <br /><span class=\"semi-bold\">List alternatives:</span> <br />If more\n          than three lines of text need to be shown in list tiles, use cards\n          instead <br />If the primary distinguishing content consists of\n          images, use a grid list\n          <br />\n          <br /><span class=\"semi-bold\">Density</span> <br />When the mouse and\n          keyboard are the primary input methods, measurements may be condensed\n          to accommodate denser layouts.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"listHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'vex-components-overview-menu',\n  templateUrl: './components-overview-menu.component.html',\n  styleUrls: ['./components-overview-menu.component.scss'],\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    VexHighlightDirective\n  ]\n})\nexport class ComponentsOverviewMenuComponent implements OnInit {\n  menuHTML = `<button mat-icon-button [mdMenuTriggerFor]=\"menu\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n\n<mat-menu #menu=\"mdMenu\">\n  <button mat-menu-item>\n    <mat-icon> dialpad </mat-icon>\n    <span> Redial </span>\n  </button>\n  <button mat-menu-item disabled>\n    <mat-icon> voicemail </mat-icon>\n    <span> Check voicemail </span>\n  </button>\n  <button mat-menu-item>\n    <mat-icon> notifications_off </mat-icon>\n    <span> Disable alerts </span>\n  </button>\n</mat-menu>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center justify-center gap-6\">\n      <button [matMenuTriggerFor]=\"menu\" mat-icon-button>\n        <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\n      </button>\n\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>\n          <mat-icon svgIcon=\"mat:dialpad\"></mat-icon>\n          <span> Redial </span>\n        </button>\n        <button disabled mat-menu-item>\n          <mat-icon svgIcon=\"mat:voicemail\"></mat-icon>\n          <span> Check voicemail </span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon svgIcon=\"mat:notifications_off\"></mat-icon>\n          <span> Disable alerts </span>\n        </button>\n      </mat-menu>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Menu</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-menu&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Menus offer a list of options that are displayed when triggered. The\n          position (before, after) and (above, below) is automatically decided,\n          but can be overridden with e.g. x-position='before'.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"menuHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'vex-components-overview-progress-spinner',\n  templateUrl: './components-overview-progress-spinner.component.html',\n  styleUrls: ['./components-overview-progress-spinner.component.scss'],\n  standalone: true,\n  imports: [MatProgressSpinnerModule, MatTabsModule, VexHighlightDirective]\n})\nexport class ComponentsOverviewProgressSpinnerComponent implements OnInit {\n  progressSpinnerHTML = `<mat-progress-spinner mode=\"determinate\" [value]=\"40\"></mat-progress-spinner>\n<mat-progress-spinner mode=\"indeterminate\" color=\"accent\"></mat-progress-spinner>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center gap-6\">\n      <mat-progress-spinner\n        [value]=\"80\"\n        mode=\"determinate\"></mat-progress-spinner>\n      <mat-progress-spinner\n        color=\"accent\"\n        mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Progress Spinner</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-progress-spinner&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          A single visual indicator should be used to represent each type of\n          operation. For example, a refresh operation should display either a\n          refresh bar or an activity circle, but not both.\n          <br />\n          <br />Determinate indicators display how long an operation will take.\n          <br />Indeterminate indicators visualize an unspecified wait time.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"progressSpinnerHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'vex-components-overview-progress',\n  templateUrl: './components-overview-progress.component.html',\n  styleUrls: ['./components-overview-progress.component.scss'],\n  standalone: true,\n  imports: [MatProgressBarModule, MatTabsModule, VexHighlightDirective]\n})\nexport class ComponentsOverviewProgressComponent implements OnInit {\n  progressHTML = `<mat-progress-bar mode=\"determinate\" [value]=\"40\"></mat-progress-bar>\n<mat-progress-bar mode=\"indeterminate\" color=\"primary\"></mat-progress-bar>\n<mat-progress-bar mode=\"buffer\" color=\"accent\"></mat-progress-bar>\n<mat-progress-bar mode=\"query\" color=\"warn\"></mat-progress-bar>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center gap-6\">\n      <mat-progress-bar [value]=\"40\" mode=\"determinate\"></mat-progress-bar>\n      <mat-progress-bar color=\"accent\" mode=\"indeterminate\"></mat-progress-bar>\n      <mat-progress-bar color=\"accent\" mode=\"buffer\"></mat-progress-bar>\n      <mat-progress-bar color=\"warn\" mode=\"query\"></mat-progress-bar>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Progress Bar</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-progress-bar&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          A linear progress indicator should always fill from 0% to 100% and\n          never decrease in value. It should be represented by bars on the edge\n          of a header or sheet that appear and disappear.\n          <br />For multiple operations happening in sequence, use the indicator\n          to represent the progress as a whole, and not each individual\n          operation.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"progressHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgFor } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\n\n@Component({\n  selector: 'vex-components-overview-radio',\n  templateUrl: './components-overview-radio.component.html',\n  styleUrls: ['./components-overview-radio.component.scss'],\n  standalone: true,\n  imports: [\n    MatRadioModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgFor,\n    MatTabsModule,\n    VexHighlightDirective\n  ]\n})\nexport class ComponentsOverviewRadioComponent implements OnInit {\n  radioHTML = `<mat-radio-group [(ngModel)]=\"favoriteSeason\">\n  <mat-radio-button class=\"radio\" *ngFor=\"let season of seasons\" [value]=\"season\">\n    {{ season }}\n  </mat-radio-button>\n</mat-radio-group>`;\n\n  seasons = ['Winter', 'Spring', 'Summer', 'Autumn'];\n\n  favoriteSeason = this.seasons[2];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center gap-6\">\n      <mat-radio-group\n        [(ngModel)]=\"favoriteSeason\"\n        class=\"radio\"\n        color=\"primary\">\n        <mat-radio-button\n          *ngFor=\"let season of seasons\"\n          [value]=\"season\"\n          class=\"example-radio-button\">\n          {{ season }}\n        </mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Radio</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-radio-group&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Radio buttons allow the user to select one option from a set. Use\n          radio buttons for exclusive selection if you think that the user needs\n          to see all available options side-by-side.\n          <br />Otherwise, consider a dropdown, which uses less space than\n          displaying all options.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"radioHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@Component({\n  selector: 'vex-components-overview-slide-toggle',\n  templateUrl: './components-overview-slide-toggle.component.html',\n  styleUrls: ['./components-overview-slide-toggle.component.scss'],\n  standalone: true,\n  imports: [MatSlideToggleModule, MatTabsModule, VexHighlightDirective]\n})\nexport class ComponentsOverviewSlideToggleComponent implements OnInit {\n  slideToggleHTML = `<mat-slide-toggle [checked]=\"true\"></mat-slide-toggle>\n<mat-slide-toggle color=\"primary\" [checked]=\"true\"></mat-slide-toggle>\n<mat-slide-toggle color=\"accent\" [checked]=\"true\"></mat-slide-toggle>\n<mat-slide-toggle color=\"warn\" [checked]=\"true\"></mat-slide-toggle>\n<mat-slide-toggle disabled></mat-slide-toggle>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center gap-6\">\n      <mat-slide-toggle [checked]=\"true\" color=\"primary\"></mat-slide-toggle>\n      <mat-slide-toggle [checked]=\"true\" color=\"accent\"></mat-slide-toggle>\n      <mat-slide-toggle [checked]=\"true\" color=\"warn\"></mat-slide-toggle>\n      <mat-slide-toggle disabled></mat-slide-toggle>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Slide Toggle</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-slide-toggle&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          On/off switches toggle the state of a single settings option. The\n          option that the switch controls, as well as the state it’s in, should\n          be made clear from the corresponding inline label. Switches take on\n          the same visual properties of the radio button.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"slideToggleHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'vex-components-overview-slider',\n  templateUrl: './components-overview-slider.component.html',\n  styleUrls: ['./components-overview-slider.component.scss'],\n  standalone: true,\n  imports: [MatSliderModule, MatTabsModule, VexHighlightDirective]\n})\nexport class ComponentsOverviewSliderComponent implements OnInit {\n  sliderHTML = `<mat-slider min=\"1\" max=\"10\" thumbLabel tickInterval=\"1\"></mat-slider>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col gap-4\">\n      <mat-slider color=\"primary\" discrete max=\"10\" min=\"1\"\n      ><input matSliderThumb value=\"7\"\n      /></mat-slider>\n      <mat-slider color=\"accent\" discrete max=\"10\" min=\"1\" showTickMarks\n      ><input matSliderThumb value=\"2\" />\n      </mat-slider>\n      <mat-slider color=\"warn\" max=\"10\" min=\"1\"\n      ><input matSliderThumb value=\"8\"\n      /></mat-slider>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Slider</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-slider&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Sliders are ideal components for adjusting settings that reflect\n          intensity levels, such as volume, brightness, or color saturation.\n          <br />\n          <br />Sliders may have icons on both ends of the bar that reflect the\n          value intensity. Place the smallest value for the slider range on the\n          left and the largest value on the right.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"sliderHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'vex-components-overview-snack-bar',\n  templateUrl: './components-overview-snack-bar.component.html',\n  styleUrls: ['./components-overview-snack-bar.component.scss'],\n  standalone: true,\n  imports: [MatButtonModule, MatTabsModule, VexHighlightDirective]\n})\nexport class ComponentsOverviewSnackBarComponent implements OnInit {\n  snackbarHTML = `<button mat-raised-button (click)=\"openSnackbar()\">TRIGGER SNACKBAR</button>`;\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  ngOnInit() {}\n\n  openSnackbar() {\n    this.snackBar.open(\"I'm a notification!\", 'CLOSE', {\n      duration: 3000,\n      horizontalPosition: 'right'\n    });\n  }\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center gap-6\">\n      <button\n        (click)=\"openSnackbar()\"\n        color=\"primary\"\n        mat-raised-button\n        type=\"button\">\n        TRIGGER SNACKBAR\n      </button>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Snack Bar</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-snack-bar&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Snackbars contain a single line of text directly related to the\n          operation performed. They may contain a text action, but no icons.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"snackbarHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VexHighlightDirective } from '@vex/components/vex-highlight/vex-highlight.directive';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'vex-components-overview-tooltip',\n  templateUrl: './components-overview-tooltip.component.html',\n  styleUrls: ['./components-overview-tooltip.component.scss'],\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatTabsModule,\n    VexHighlightDirective\n  ]\n})\nexport class ComponentsOverviewTooltipComponent implements OnInit {\n  tooltipHTML = `<button mat-icon-button matTooltip=\"Favorite this\">\n  <mat-icon>favorite</mat-icon>\n</button>`;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"card flex flex-col sm:flex-row\">\n  <div class=\"p-6 md:min-w-[300px]\">\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\n    <div class=\"flex flex-col items-center gap-6\">\n      <button mat-icon-button matTooltip=\"Favorite this\">\n        <mat-icon svgIcon=\"mat:favorite\"></mat-icon>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"border-l flex-1\">\n    <div class=\"p-6\">\n      <h2 class=\"title mt-0 mb-4\">Tooltip</h2>\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-snack-bar&gt;</h4>\n    </div>\n\n    <mat-tab-group>\n      <mat-tab label=\"DESCRIPTION\">\n        <p class=\"p-6\">\n          Tooltips identify an element when they are activated. They may contain\n          brief helper text about its function. For example, they may contain\n          text information about actionable icons.\n          <br />Tooltip labels do not receive input focus.\n        </p>\n      </mat-tab>\n      <mat-tab label=\"SOURCE CODE\">\n        <pre><code [vexHighlight]=\"tooltipHTML\"></code></pre>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { FriendSuggestion } from '../app/pages/apps/social/social.component';\n\nexport const friendSuggestions: FriendSuggestion[] = [\n  {\n    name: 'Fannie Wilson',\n    imageSrc: 'assets/img/avatars/1.jpg',\n    friends: 6,\n    added: false\n  },\n  {\n    name: 'Priscilla Ayala',\n    imageSrc: 'assets/img/avatars/2.jpg',\n    friends: 3,\n    added: false\n  },\n  {\n    name: 'Margaret Farley',\n    imageSrc: 'assets/img/avatars/3.jpg',\n    friends: 3,\n    added: true\n  },\n  {\n    name: 'Alston Tucker',\n    imageSrc: 'assets/img/avatars/4.jpg',\n    friends: 1,\n    added: true\n  },\n  {\n    name: 'Frye Humphrey',\n    imageSrc: 'assets/img/avatars/5.jpg',\n    friends: 1,\n    added: true\n  },\n  {\n    name: 'Jannie Cochran',\n    imageSrc: 'assets/img/avatars/6.jpg',\n    friends: 5,\n    added: false\n  },\n  {\n    name: 'Perkins Doyle',\n    imageSrc: 'assets/img/avatars/7.jpg',\n    friends: 7,\n    added: false\n  },\n  {\n    name: 'Marci Boyd',\n    imageSrc: 'assets/img/avatars/8.jpg',\n    friends: 2,\n    added: false\n  }\n];\n"],"names":["VexPageLayoutHeaderDirective","constructor","_","_2","selectors","hostAttrs","standalone","map","AsyncPipe","NgClass","NgIf","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","current","VexSecondaryToolbarComponent","configService","fixed$","config$","pipe","config","toolbar","fixed","isVerticalLayout$","select","layout","ɵɵdirectiveInject","i1","VexConfigService","inputs","features","ɵɵStandaloneFeature","ngContentSelectors","_c1","decls","vars","consts","template","VexSecondaryToolbarComponent_Template","rf","ctx","ɵɵtemplate","VexSecondaryToolbarComponent_h1_7_Template","ɵɵprojection","ɵɵproperty","ɵɵpureFunction2","_c0","ɵɵpipeBind1","ɵɵclassProp","styles","CostumerTypeService","http","apiBaseService","API_URL","getCostumerTypes","limit","params","get","buildApiUrl","getAllCostumerTypes","getCostumerTypesByStatus","enabled","getCostumerTypeById","id","createCostumerType","costumerType","post","updateCostumerType","put","deleteCostumerType","delete","toggleStatus","patch","searchCostumerTypes","query","getStats","getActiveCostumerTypes","ɵɵinject","HttpClient","i2","ApiBaseService","factory","ɵfac","providedIn","HttpParams","DocumentTypeService","getDocumentTypes","httpParams","Object","entries","forEach","key","value","undefined","set","toString","getDocumentType","createDocumentType","documentType","updateDocumentType","deleteDocumentType","getActiveDocumentTypes","searchDocumentTypes","getAllDocumentTypes","getEnabledDocumentTypes","getDisabledDocumentTypes","getActiveFileStatuses","getActiveSubProcesses","environment","FileExtraordinaryReasonService","apiUrl","apiBaseUrl","getFileExtraordinaryReasons","filters","search","id_type_reason","sort_by","sort_order","offset","getFileExtraordinaryReason","createFileExtraordinaryReason","fileExtraordinaryReason","console","log","updateFileExtraordinaryReason","deleteFileExtraordinaryReason","searchFileExtraordinaryReasons","getActiveFileExtraordinaryReasons","ProcesoService","getProcesos","getProceso","createProceso","proceso","updateProceso","Id","deleteProceso","force","toggleEstado","estado","TipoOperacionService","getTiposOperacion","getTiposOperacionByStatus","createTipoOperacion","tipoOperacion","updateTipoOperacion","deleteTipoOperacion","searchTiposOperacion","ReactiveFormsModule","UntypedFormControl","startWith","VexHighlightDirective","MatTabsModule","MatIconModule","MatButtonModule","MatOptionModule","NgFor","MatAutocompleteModule","MatInputModule","MatFormFieldModule","ɵɵelement","state_r4","name","flag","ɵɵsanitizeUrl","ɵɵtextInterpolate","population","ɵɵlistener","ComponentsOverviewAutocompleteComponent_button_12_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","stateCtrl","reset","ComponentsOverviewAutocompleteComponent","autocompleteHTML","filteredStates$","valueChanges","state","filterStates","states","slice","filter","toLowerCase","indexOf","ComponentsOverviewAutocompleteComponent_Template","ComponentsOverviewAutocompleteComponent_mat_option_10_Template","ComponentsOverviewAutocompleteComponent_button_12_Template","ComponentsOverviewAutocompleteComponent_button_13_Template","_r0","MatFormField","MatLabel","MatHint","MatSuffix","MatInput","i3","DefaultValueAccessor","NgControlStatus","FormControlDirective","i4","MatAutocomplete","i5","MatOption","MatAutocompleteTrigger","i6","MatIconButton","i7","MatIcon","i8","MatTab","MatTabGroup","MatCardModule","ComponentsOverviewCardsComponent","cardHTML","ngOnInit","ComponentsOverviewCardsComponent_Template","MatCard","MatCardActions","MatCardAvatar","MatCardContent","MatCardHeader","MatCardImage","MatCardSubtitle","MatCardTitle","MatButton","MatCheckboxModule","ComponentsOverviewCheckboxComponent","checkboxHTML","ComponentsOverviewCheckboxComponent_Template","MatCheckbox","MatDialogModule","result","ComponentsOverviewDialogsComponent","dialog","dialogHTML","openDialog","open","DemoDialogComponent","disableClose","width","afterClosed","subscribe","MatDialog","ComponentsOverviewDialogsComponent_Template","ComponentsOverviewDialogsComponent_Template_button_click_5_listener","ComponentsOverviewDialogsComponent_p_7_Template","dialogRef","close","answer","MatDialogRef","DemoDialogComponent_Template","DemoDialogComponent_Template_button_click_3_listener","DemoDialogComponent_Template_button_click_9_listener","DemoDialogComponent_Template_button_click_11_listener","MatDialogTitle","MatDialogActions","MatDialogContent","encapsulation","ComponentsOverviewInputComponent_button_6_Template_button_click_0_listener","_r5","ctx_r4","show","ComponentsOverviewInputComponent_button_7_Template_button_click_0_listener","_r7","ctx_r6","hide","ComponentsOverviewInputComponent_button_11_Template_button_click_0_listener","_r9","ctx_r8","ComponentsOverviewInputComponent_button_12_Template_button_click_0_listener","_r11","ctx_r10","ComponentsOverviewInputComponent","cd","inputHTML","inputType","visible","markForCheck","ChangeDetectorRef","ComponentsOverviewInputComponent_Template","ComponentsOverviewInputComponent_button_6_Template","ComponentsOverviewInputComponent_button_7_Template","ComponentsOverviewInputComponent_button_11_Template","ComponentsOverviewInputComponent_button_12_Template","MatPrefix","MatDividerModule","MatListModule","ComponentsOverviewListsComponent","listHTML","ComponentsOverviewListsComponent_Template","MatList","MatListItem","MatListItemAvatar","MatListSubheaderCssMatStyler","MatDivider","MatListItemLine","MatListItemTitle","MatMenuModule","ComponentsOverviewMenuComponent","menuHTML","ComponentsOverviewMenuComponent_Template","MatMenu","MatMenuItem","MatMenuTrigger","MatProgressSpinnerModule","ComponentsOverviewProgressSpinnerComponent","progressSpinnerHTML","ComponentsOverviewProgressSpinnerComponent_Template","MatProgressSpinner","MatProgressBarModule","ComponentsOverviewProgressComponent","progressHTML","ComponentsOverviewProgressComponent_Template","MatProgressBar","FormsModule","MatRadioModule","season_r1","ComponentsOverviewRadioComponent","radioHTML","seasons","favoriteSeason","ComponentsOverviewRadioComponent_Template","ComponentsOverviewRadioComponent_Template_mat_radio_group_ngModelChange_5_listener","$event","ComponentsOverviewRadioComponent_mat_radio_button_6_Template","MatRadioGroup","MatRadioButton","NgModel","MatSlideToggleModule","ComponentsOverviewSlideToggleComponent","slideToggleHTML","ComponentsOverviewSlideToggleComponent_Template","MatSlideToggle","MatSliderModule","ComponentsOverviewSliderComponent","sliderHTML","ComponentsOverviewSliderComponent_Template","MatSlider","MatSliderThumb","ComponentsOverviewSnackBarComponent","snackBar","snackbarHTML","openSnackbar","duration","horizontalPosition","MatSnackBar","ComponentsOverviewSnackBarComponent_Template","ComponentsOverviewSnackBarComponent_Template_button_click_5_listener","MatTooltipModule","ComponentsOverviewTooltipComponent","tooltipHTML","ComponentsOverviewTooltipComponent_Template","MatTooltip","friendSuggestions","imageSrc","friends","added"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}