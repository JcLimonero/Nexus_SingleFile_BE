{"version":3,"file":"src_app_pages_apps_social_social-profile_social-profile_component_ts.js","mappings":"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","sources":["./src/@vex/animations/fade-in-up.animation.ts","./src/@vex/animations/stagger.animation.ts","./src/app/core/services/user-profile-image.service.ts","./src/app/pages/apps/social/social-profile/social-profile.component.ts","./src/app/pages/apps/social/social-profile/social-profile.component.html","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js"],"sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInUpAnimation(duration: number) {\n  return trigger('fadeInUp', [\n    transition(':enter', [\n      style({\n        transform: 'translateY(20px)',\n        opacity: 0\n      }),\n      animate(\n        `${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`,\n        style({\n          transform: 'translateY(0)',\n          opacity: 1\n        })\n      )\n    ])\n  ]);\n}\n\nexport const fadeInUp400ms = fadeInUpAnimation(400);\n","import {\n  animateChild,\n  query,\n  stagger,\n  transition,\n  trigger\n} from '@angular/animations';\n\nexport function staggerAnimation(timing: number) {\n  return trigger('stagger', [\n    transition('* => *', [\n      // each time the binding value changes\n      query(':enter', stagger(timing, animateChild()), { optional: true })\n    ])\n  ]);\n}\n\nexport const stagger80ms = staggerAnimation(80);\nexport const stagger60ms = staggerAnimation(60);\nexport const stagger40ms = staggerAnimation(40);\nexport const stagger20ms = staggerAnimation(20);\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ApiBaseService } from './api-base.service';\n\nexport interface ProfileImageInfo {\n  has_image: boolean;\n  image_type?: string;\n  image_size?: number;\n  image_size_formatted?: string;\n}\n\nexport interface ProfileImageData {\n  image: string;\n  type: string;\n  size: number;\n}\n\nexport interface UploadResponse {\n  success: boolean;\n  message: string;\n  data?: {\n    image_type: string;\n    image_size: number;\n    dimensions: {\n      width: number;\n      height: number;\n    };\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileImageService {\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) {}\n\n  /**\n   * Subir imagen de perfil\n   */\n  uploadProfileImage(file: File): Observable<UploadResponse> {\n    const formData = new FormData();\n    formData.append('profile_image', file);\n    \n    const url = this.apiBaseService.buildApiUrl('user/profile-image/upload');\n    return this.http.post<UploadResponse>(url, formData);\n  }\n\n  /**\n   * Obtener imagen de perfil del usuario autenticado\n   */\n  getProfileImage(): Observable<{ success: boolean; message: string; data: ProfileImageData | null }> {\n    const url = this.apiBaseService.buildApiUrl('user/profile-image/get');\n    return this.http.get<{ success: boolean; message: string; data: ProfileImageData | null }>(url);\n  }\n\n  /**\n   * Obtener imagen de perfil de un usuario específico\n   */\n  getProfileImageById(userId: string): Observable<{ success: boolean; message: string; data: ProfileImageData | null }> {\n    const url = this.apiBaseService.buildApiUrl(`user/profile-image/get/${userId}`);\n    return this.http.get<{ success: boolean; message: string; data: ProfileImageData | null }>(url);\n  }\n\n  /**\n   * Obtener información de la imagen de perfil (sin la imagen completa)\n   */\n  getProfileImageInfo(): Observable<{ success: boolean; message: string; data: ProfileImageInfo | null }> {\n    const url = this.apiBaseService.buildApiUrl('user/profile-image/info');\n    return this.http.get<{ success: boolean; message: string; data: ProfileImageInfo | null }>(url);\n  }\n\n  /**\n   * Obtener información de la imagen de perfil de un usuario específico\n   */\n  getProfileImageInfoById(userId: string): Observable<{ success: boolean; message: string; data: ProfileImageInfo | null }> {\n    const url = this.apiBaseService.buildApiUrl(`user/profile-image/info/${userId}`);\n    return this.http.get<{ success: boolean; message: string; data: ProfileImageInfo | null }>(url);\n  }\n\n  /**\n   * Eliminar imagen de perfil\n   */\n  removeProfileImage(): Observable<{ success: boolean; message: string }> {\n    const url = this.apiBaseService.buildApiUrl('user/profile-image/remove');\n    return this.http.delete<{ success: boolean; message: string }>(url);\n  }\n\n  /**\n   * Convertir imagen base64 a URL de datos\n   */\n  getProfileImageUrl(imageData: string, imageType: string): string {\n    return `data:${imageType};base64,${imageData}`;\n  }\n\n  /**\n   * Validar archivo de imagen\n   */\n  validateImageFile(file: File): { valid: boolean; error?: string } {\n    // Validar tipo de archivo\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n    if (!allowedTypes.includes(file.type)) {\n      return { \n        valid: false, \n        error: 'Tipo de archivo no permitido. Solo se permiten: JPEG, PNG, GIF, WEBP' \n      };\n    }\n\n    // Validar tamaño (máximo 5MB)\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    if (file.size > maxSize) {\n      return { \n        valid: false, \n        error: 'El archivo es demasiado grande. Máximo 5MB permitido' \n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * Comprimir imagen antes de subir (opcional)\n   */\n  async compressImage(file: File, maxWidth: number = 800, maxHeight: number = 800): Promise<File> {\n    return new Promise((resolve) => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n\n      img.onload = () => {\n        // Calcular nuevas dimensiones manteniendo la proporción\n        let { width, height } = img;\n        \n        if (width > height) {\n          if (width > maxWidth) {\n            height = (height * maxWidth) / width;\n            width = maxWidth;\n          }\n        } else {\n          if (height > maxHeight) {\n            width = (width * maxHeight) / height;\n            height = maxHeight;\n          }\n        }\n\n        // Configurar canvas\n        canvas.width = width;\n        canvas.height = height;\n\n        // Dibujar imagen redimensionada\n        ctx?.drawImage(img, 0, 0, width, height);\n\n        // Convertir a blob\n        canvas.toBlob((blob) => {\n          if (blob) {\n            const compressedFile = new File([blob], file.name, {\n              type: file.type,\n              lastModified: Date.now()\n            });\n            resolve(compressedFile);\n          } else {\n            resolve(file);\n          }\n        }, file.type, 0.8); // Calidad 0.8\n      };\n\n      img.src = URL.createObjectURL(file);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FriendSuggestion } from '../social.component';\nimport { friendSuggestions } from '../../../../../static-data/friend-suggestions';\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\nimport { fadeInRight400ms } from '@vex/animations/fade-in-right.animation';\nimport { scaleIn400ms } from '@vex/animations/scale-in.animation';\nimport { stagger40ms } from '@vex/animations/stagger.animation';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgFor, NgIf, AsyncPipe } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { AuthService, User } from '../../../../core/services/auth.service';\nimport { UserProfileImageService, ProfileImageInfo } from '../../../../core/services/user-profile-image.service';\nimport { Observable, firstValueFrom } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'vex-social-profile',\n  templateUrl: './social-profile.component.html',\n  styleUrls: ['./social-profile.component.scss'],\n  animations: [fadeInUp400ms, fadeInRight400ms, scaleIn400ms, stagger40ms],\n  standalone: true,\n  imports: [MatIconModule, NgFor, NgIf, MatButtonModule, MatDialogModule, AsyncPipe]\n})\nexport class SocialProfileComponent implements OnInit {\n  suggestions = friendSuggestions;\n  currentUser$: Observable<User | null>;\n  profileImageInfo$: Observable<ProfileImageInfo | null>;\n\n  constructor(\n    private authService: AuthService,\n    private dialog: MatDialog,\n    private userProfileImageService: UserProfileImageService\n  ) {\n    this.currentUser$ = this.authService.currentUser$;\n    this.profileImageInfo$ = this.userProfileImageService.getProfileImageInfo().pipe(\n      map(response => response.success ? response.data : null)\n    );\n  }\n\n  ngOnInit(): void {}\n\n  addFriend(friend: FriendSuggestion) {\n    friend.added = true;\n  }\n\n  removeFriend(friend: FriendSuggestion) {\n    friend.added = false;\n  }\n\n  trackByName(index: number, friend: FriendSuggestion) {\n    return friend.name;\n  }\n\n  async openChangePasswordDialog(): Promise<void> {\n    const { ChangePasswordDialogComponent } = await import('../change-password-dialog');\n    \n    const dialogRef = this.dialog.open(ChangePasswordDialogComponent, {\n      width: '500px',\n      disableClose: true,\n      panelClass: 'change-password-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log('Contraseña actualizada exitosamente');\n      }\n    });\n  }\n\n  async uploadProfileImage(event: any): Promise<void> {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // Validar archivo\n    const validation = this.userProfileImageService.validateImageFile(file);\n    if (!validation.valid) {\n      console.error('Archivo no válido:', validation.error);\n      return;\n    }\n\n    try {\n      // Comprimir imagen antes de subir\n      const compressedFile = await this.userProfileImageService.compressImage(file);\n      \n      // Subir imagen\n      const result = await firstValueFrom(this.userProfileImageService.uploadProfileImage(compressedFile));\n      \n      if (result?.success) {\n        // Recargar información del usuario\n        // No es necesario recargar desde el AuthService, solo actualizar la información de imagen\n        this.refreshProfileImageInfo();\n        console.log('Imagen de perfil actualizada correctamente');\n      }\n    } catch (error) {\n      console.error('Error al subir imagen:', error);\n    }\n  }\n\n  async removeProfileImage(): Promise<void> {\n    try {\n      const result = await firstValueFrom(this.userProfileImageService.removeProfileImage());\n      \n      if (result?.success) {\n        // Recargar información del usuario\n        // No es necesario recargar desde el AuthService, solo actualizar la información de imagen\n        this.refreshProfileImageInfo();\n        console.log('Imagen de perfil eliminada correctamente');\n      }\n    } catch (error) {\n      console.error('Error al eliminar imagen:', error);\n    }\n  }\n\n  getProfileImageUrl(user: User): string | null {\n    if (user?.profile_image && user?.image_type) {\n      return this.userProfileImageService.getProfileImageUrl(user.profile_image, user.image_type);\n    }\n    return null;\n  }\n\n  private refreshProfileImageInfo(): void {\n    this.profileImageInfo$ = this.userProfileImageService.getProfileImageInfo().pipe(\n      map(response => response.success ? response.data : null)\n    );\n  }\n}\n","<div class=\"mt-6 flex flex-col md:flex-row md:items-start\">\n  <div class=\"flex-auto\">\n    <div class=\"card\">\n      <div class=\"px-6 py-4 border-b\">\n        <h2 class=\"title m-0\"></h2>\n      </div>\n\n      <div class=\"px-6 py-4 grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        <!-- Nombre del Usuario -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-primary-600/10 text-primary-600 ltr:mr-3 rtl:ml-3 flex items-center justify-center\">\n            <mat-icon class=\"icon-sm\" svgIcon=\"mat:person\"></mat-icon>\n          </div>\n\n          <div @fadeInRight>\n            <p class=\"m-0 body-1\">{{ (currentUser$ | async)?.name || 'Nombre no disponible' }}</p>\n            <p class=\"m-0 caption text-hint\">Nombre completo</p>\n          </div>\n        </div>\n\n        <!-- Usuario DMS -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-primary-600/10 text-primary-600 ltr:mr-3 rtl:ml-3 flex items-center justify-center\">\n            <mat-icon class=\"icon-sm\" svgIcon=\"mat:account_circle\"></mat-icon>\n          </div>\n\n          <div @fadeInRight>\n            <p class=\"m-0 body-1\">{{ (currentUser$ | async)?.username || 'Usuario no disponible' }}</p>\n            <p class=\"m-0 caption text-hint\">Usuario DMS</p>\n          </div>\n        </div>\n\n        <!-- Email -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-primary-600/10 text-primary-600 ltr:mr-3 rtl:ml-3 flex items-center justify-center\">\n            <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\n          </div>\n\n          <div @fadeInRight>\n            <p class=\"m-0 body-1\">{{ (currentUser$ | async)?.email || 'Email no disponible' }}</p>\n            <p class=\"m-0 caption text-hint\">Correo electrónico</p>\n          </div>\n        </div>\n\n        <!-- Rol -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-primary-600/10 text-primary-600 ltr:mr-3 rtl:ml-3 flex items-center justify-center\">\n            <mat-icon class=\"icon-sm\" svgIcon=\"mat:security\"></mat-icon>\n          </div>\n\n          <div @fadeInRight>\n            <p class=\"m-0 body-1\">{{ (currentUser$ | async)?.role_name || 'Rol no disponible' }}</p>\n            <p class=\"m-0 caption text-hint\">Rol en el sistema</p>\n          </div>\n        </div>\n\n        <!-- Estado -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-primary-600/10 text-primary-600 ltr:mr-3 rtl:ml-3 flex items-center justify-center\">\n            <mat-icon class=\"icon-sm\" svgIcon=\"mat:check_circle\"></mat-icon>\n          </div>\n\n          <div @fadeInRight>\n            <p class=\"m-0 body-1\">{{ (currentUser$ | async)?.enabled ? 'Activo' : 'Inactivo' }}</p>\n            <p class=\"m-0 caption text-hint\">Estado de la cuenta</p>\n          </div>\n        </div>\n\n        <!-- ID de Usuario -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-gray-600/10 text-dark ltr:mr-3 rtl:ml-3 flex items-center justify-center\">\n            <mat-icon class=\"icon-sm\" svgIcon=\"mat:tag\"></mat-icon>\n          </div>\n\n          <div @fadeInRight>\n            <p class=\"m-0 body-1 font-mono\">{{ (currentUser$ | async)?.id || 'ID no disponible' }}</p>\n            <p class=\"m-0 caption text-hint\">Identificador único</p>\n          </div>\n        </div>\n\n        <!-- Cambiar Contraseña -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-warning-600/10 text-warning-600 ltr:mr-3 rtl:ml-3 flex items-center justify-center cursor-pointer hover:bg-warning-600/20 transition-colors\"\n            (click)=\"openChangePasswordDialog()\">\n            <mat-icon class=\"icon-sm\" svgIcon=\"mat:lock\"></mat-icon>\n          </div>\n\n          <div @fadeInRight class=\"flex-1\">\n            <p class=\"m-0 body-1 cursor-pointer hover:text-primary-600 transition-colors\" (click)=\"openChangePasswordDialog()\">\n              Cambiar Contraseña\n            </p>\n            <p class=\"m-0 caption text-hint\">Actualiza tu contraseña de acceso</p>\n          </div>\n        </div>\n\n        <!-- Imagen de Perfil -->\n        <div class=\"py-3 flex items-center\">\n          <div\n            @scaleIn\n            class=\"w-10 h-10 rounded-full bg-blue-600/10 text-blue-600 ltr:mr-3 rtl:ml-3 flex items-center justify-center cursor-pointer hover:bg-blue-600/20 transition-colors\">\n            <input \n              type=\"file\" \n              accept=\"image/*\" \n              (change)=\"uploadProfileImage($event)\"\n              style=\"display: none\"\n              #fileInput>\n            <mat-icon \n              class=\"icon-sm cursor-pointer\" \n              (click)=\"fileInput.click()\"\n              svgIcon=\"mat:photo_camera\">\n            </mat-icon>\n          </div>\n\n          <div @fadeInRight class=\"flex-1\">\n            <p class=\"m-0 body-1 cursor-pointer hover:text-primary-600 transition-colors\" \n               (click)=\"fileInput.click()\">\n              Cambiar Foto de Perfil\n            </p>\n            <p class=\"m-0 caption text-hint\">\n              <ng-container *ngIf=\"profileImageInfo$ | async as imageInfo; else noImage\">\n                Imagen actual: {{ imageInfo.image_size_formatted }}\n                <button \n                  mat-button \n                  color=\"warn\" \n                  class=\"ml-2 text-xs\"\n                  (click)=\"removeProfileImage()\">\n                  Eliminar\n                </button>\n              </ng-container>\n              <ng-template #noImage>\n                Sube una nueva imagen de perfil\n              </ng-template>\n            </p>\n          </div>\n        </div>\n\n        <!-- Vista Previa de Imagen -->\n        <div *ngIf=\"currentUser$ | async as user\" class=\"py-3 flex items-center\">\n          <div class=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200 ltr:mr-3 rtl:ml-3 flex items-center justify-center\">\n            <ng-container *ngIf=\"getProfileImageUrl(user); else defaultAvatar\">\n              <img \n                [src]=\"getProfileImageUrl(user)\" \n                [alt]=\"'Foto de perfil de ' + user.name\"\n                class=\"w-full h-full object-cover\">\n            </ng-container>\n            <ng-template #defaultAvatar>\n              <mat-icon class=\"text-gray-400 text-2xl\">person</mat-icon>\n            </ng-template>\n          </div>\n\n          <div class=\"flex-1\">\n            <p class=\"m-0 body-1 font-medium\">{{ user.name }}</p>\n            <p class=\"m-0 caption text-hint\">{{ user.role_name }}</p>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n\n  </div>\n\n\n</div>\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n"],"names":["animate","style","transition","trigger","fadeInUpAnimation","duration","transform","opacity","fadeInUp400ms","animateChild","query","stagger","staggerAnimation","timing","optional","stagger80ms","stagger60ms","stagger40ms","stagger20ms","UserProfileImageService","constructor","http","apiBaseService","uploadProfileImage","file","formData","FormData","append","url","buildApiUrl","post","getProfileImage","get","getProfileImageById","userId","getProfileImageInfo","getProfileImageInfoById","removeProfileImage","delete","getProfileImageUrl","imageData","imageType","validateImageFile","allowedTypes","includes","type","valid","error","maxSize","size","compressImage","maxWidth","maxHeight","_asyncToGenerator","Promise","resolve","canvas","document","createElement","ctx","getContext","img","Image","onload","width","height","drawImage","toBlob","blob","compressedFile","File","name","lastModified","Date","now","src","URL","createObjectURL","_","i0","ɵɵinject","i1","HttpClient","i2","ApiBaseService","_2","factory","ɵfac","providedIn","friendSuggestions","fadeInRight400ms","scaleIn400ms","MatButtonModule","NgIf","AsyncPipe","MatIconModule","MatDialogModule","firstValueFrom","map","ɵɵelementContainerStart","ɵɵtext","ɵɵelementStart","ɵɵlistener","SocialProfileComponent_ng_container_77_Template_button_click_2_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","imageInfo_r5","image_size_formatted","ɵɵelement","ɵɵproperty","ctx_r9","user_r8","ɵɵsanitizeUrl","ɵɵtemplate","SocialProfileComponent_div_81_ng_container_2_Template","SocialProfileComponent_div_81_ng_template_3_Template","ɵɵtemplateRefExtractor","ctx_r4","_r11","ɵɵtextInterpolate","role_name","SocialProfileComponent","authService","dialog","userProfileImageService","suggestions","currentUser$","profileImageInfo$","pipe","response","success","data","ngOnInit","addFriend","friend","added","removeFriend","trackByName","index","openChangePasswordDialog","_this","ChangePasswordDialogComponent","dialogRef","open","disableClose","panelClass","afterClosed","subscribe","result","console","log","event","_this2","target","files","validation","refreshProfileImageInfo","_this3","user","profile_image","image_type","ɵɵdirectiveInject","AuthService","MatDialog","i3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SocialProfileComponent_Template","rf","SocialProfileComponent_Template_div_click_61_listener","SocialProfileComponent_Template_p_click_64_listener","SocialProfileComponent_Template_input_change_70_listener","$event","SocialProfileComponent_Template_mat_icon_click_72_listener","_r13","_r0","ɵɵreference","click","SocialProfileComponent_Template_p_click_74_listener","SocialProfileComponent_ng_container_77_Template","SocialProfileComponent_ng_template_79_Template","SocialProfileComponent_div_81_Template","undefined","tmp_0_0","ɵɵpipeBind1","tmp_1_0","username","tmp_2_0","email","tmp_3_0","tmp_4_0","enabled","tmp_5_0","id","_r3","i4","MatIcon","i5","MatButton","styles","animation","EmptyError","SafeSubscriber","source","config","hasConfig","reject","subscriber","next","value","unsubscribe","complete","defaultValue"],"sourceRoot":"webpack:///","x_google_ignoreList":[5]}