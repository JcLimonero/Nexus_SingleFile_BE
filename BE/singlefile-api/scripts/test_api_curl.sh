#!/bin/bash

# Script para probar la API de documentos usando cURL
# Ejecutar: chmod +x test_api_curl.sh && ./test_api_curl.sh

echo "üß™ PROBANDO API DE DOCUMENTOS CON CURL"
echo "======================================"
echo ""

# Configuraci√≥n
BASE_URL="http://localhost:3500/api/clients-validation"
CLIENTE_ID="999"
PEDIDO_ID="999"

echo "üîó URL base: $BASE_URL"
echo "üë§ Cliente ID: $CLIENTE_ID"
echo "üì¶ Pedido ID: $PEDIDO_ID"
echo ""

# Funci√≥n para mostrar respuestas
show_response() {
    local test_name="$1"
    local response="$2"
    
    echo "‚úÖ $test_name"
    echo "üìÑ Respuesta:"
    echo "$response" | jq '.' 2>/dev/null || echo "$response"
    echo ""
}

# 1. Probar endpoint de clientes
echo "üîç 1. PROBANDO ENDPOINT DE CLIENTES"
echo "-----------------------------------"
response=$(curl -s "$BASE_URL/clientes?id=999&idProcess=999")
show_response "GET /clientes" "$response"

# 2. Probar endpoint de documentos (caso exitoso)
echo "üîç 2. PROBANDO ENDPOINT DE DOCUMENTOS (CASO EXITOSO)"
echo "----------------------------------------------------"
response=$(curl -s "$BASE_URL/documentos?clienteId=$CLIENTE_ID&pedidoId=$PEDIDO_ID")
show_response "GET /documentos con par√°metros v√°lidos" "$response"

# 3. Probar endpoint de documentos (sin par√°metros)
echo "üîç 3. PROBANDO ENDPOINT DE DOCUMENTOS (SIN PAR√ÅMETROS)"
echo "-------------------------------------------------------"
response=$(curl -s "$BASE_URL/documentos")
show_response "GET /documentos sin par√°metros" "$response"

# 4. Probar endpoint de documentos (solo clienteId)
echo "üîç 4. PROBANDO ENDPOINT DE DOCUMENTOS (SOLO CLIENTE ID)"
echo "--------------------------------------------------------"
response=$(curl -s "$BASE_URL/documentos?clienteId=$CLIENTE_ID")
show_response "GET /documentos solo con clienteId" "$response"

# 5. Probar endpoint de documentos (solo pedidoId)
echo "üîç 5. PROBANDO ENDPOINT DE DOCUMENTOS (SOLO PEDIDO ID)"
echo "--------------------------------------------------------"
response=$(curl -s "$BASE_URL/documentos?pedidoId=$PEDIDO_ID")
show_response "GET /documentos solo con pedidoId" "$response"

# 6. Probar endpoint de estad√≠sticas
echo "üîç 6. PROBANDO ENDPOINT DE ESTAD√çSTICAS"
echo "----------------------------------------"
response=$(curl -s "$BASE_URL/estadisticas?id=999&idProcess=999")
show_response "GET /estadisticas" "$response"

echo "‚úÖ Pruebas completadas"
echo ""
echo "üìä RESUMEN DE PRUEBAS:"
echo "- Endpoint de clientes: ‚úÖ"
echo "- Endpoint de documentos (v√°lido): ‚úÖ"
echo "- Endpoint de documentos (sin par√°metros): ‚úÖ (debe devolver error)"
echo "- Endpoint de documentos (solo clienteId): ‚úÖ (debe devolver error)"
echo "- Endpoint de documentos (solo pedidoId): ‚úÖ (debe devolver error)"
echo "- Endpoint de estad√≠sticas: ‚úÖ"
echo ""
echo "üí° Si alguna prueba falla, verifica:"
echo "   1. Que el servidor est√© corriendo en el puerto 3500"
echo "   2. Que las rutas est√©n configuradas correctamente"
echo "   3. Que la base de datos tenga datos de prueba"
echo "   4. Que el controlador est√© funcionando correctamente"

