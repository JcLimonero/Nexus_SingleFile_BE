{"version":3,"file":"src_app_pages_procesos_integracion_integracion_component_ts.js","mappings":"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","sources":["./src/app/core/services/default-agency.service.ts","./src/app/pages/procesos/integracion/client-selection-dialog.component.ts","./src/app/pages/procesos/integracion/integracion.component.ts","./src/app/pages/procesos/integracion/integracion.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport interface Agencia {\n  Id: number;\n  Name: string;\n  Enabled: boolean | number | string; // Puede ser boolean, number o string\n  [key: string]: any; // Para campos adicionales\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultAgencyService {\n  private apiUrl = environment.apiBaseUrl;\n  \n  // BehaviorSubject para mantener el estado de la agencia seleccionada\n  private selectedAgencySubject = new BehaviorSubject<number | null>(null);\n  public selectedAgency$ = this.selectedAgencySubject.asObservable();\n  \n  // BehaviorSubject para mantener el estado de las agencias disponibles\n  private agenciasSubject = new BehaviorSubject<Agencia[]>([]);\n  public agencias$ = this.agenciasSubject.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Obtener agencias disponibles\n   */\n  obtenerAgencias(): Observable<Agencia[]> {\n    return this.http.get<any>(`${this.apiUrl}/api/agency`).pipe(\n      map(response => {\n        if (response && response.success && response.data && response.data.agencies) {\n          return response.data.agencies;\n        }\n        if (Array.isArray(response)) {\n          return response;\n        }\n        if (response && response.agencies && Array.isArray(response.agencies)) {\n          return response.agencies;\n        }\n        return [];\n      }),\n      tap(agencias => {\n        this.agenciasSubject.next(agencias);\n      })\n    );\n  }\n\n  /**\n   * Obtener agencia predeterminada del usuario\n   */\n  obtenerAgenciaUsuario(): Observable<number | null> {\n    return this.http.get<any>(`${this.apiUrl}/api/user/profile`).pipe(\n      map(response => {\n        if (response && response.success && response.data) {\n          return response.data.DefaultAgency;\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Obtener la agencia predeterminada del usuario con reintentos\n   */\n  private obtenerAgenciaUsuarioConReintentos(maxReintentos: number = 3, delayMs: number = 1000): Observable<number | null> {\n    return new Observable(observer => {\n      let intentos = 0;\n      \n      const intentarObtener = () => {\n        intentos++;\n        console.log(`🔄 DefaultAgencyService - Intento ${intentos} de obtener agencia predeterminada del usuario`);\n        \n        this.obtenerAgenciaUsuario().subscribe({\n          next: (defaultAgencyId) => {\n            console.log(`✅ DefaultAgencyService - Agencia predeterminada obtenida exitosamente en intento ${intentos}:`, defaultAgencyId);\n            observer.next(defaultAgencyId);\n            observer.complete();\n          },\n          error: (error) => {\n            console.warn(`⚠️ DefaultAgencyService - Intento ${intentos} falló:`, error);\n            console.error(`🔍 DefaultAgencyService - Detalles del error:`, {\n              status: error.status,\n              statusText: error.statusText,\n              message: error.message,\n              error: error.error\n            });\n            \n            if (intentos < maxReintentos) {\n              console.log(`🔄 DefaultAgencyService - Reintentando en ${delayMs}ms... (${intentos}/${maxReintentos})`);\n              setTimeout(intentarObtener, delayMs);\n            } else {\n              console.error(`❌ DefaultAgencyService - Todos los ${maxReintentos} intentos fallaron`);\n              observer.error(error);\n            }\n          }\n        });\n      };\n      \n      intentarObtener();\n    });\n  }\n\n  /**\n   * Establecer agencia predeterminada del usuario\n   * @param autoSelect Si es true, selecciona automáticamente una agencia\n   * @returns Observable<number | null> que devuelve el ID de la agencia seleccionada\n   */\n  establecerAgenciaPredeterminada(autoSelect: boolean = true): Observable<number | null> {\n    return new Observable(observer => {\n      console.log('🔄 DefaultAgencyService - Iniciando establecimiento de agencia predeterminada...');\n      console.log('📊 DefaultAgencyService - Agencias disponibles en el servicio:', this.agenciasSubject.value);\n      \n      // Intentar obtener la agencia predeterminada con reintentos\n      this.obtenerAgenciaUsuarioConReintentos().subscribe({\n        next: (defaultAgencyId) => {\n          console.log('👤 DefaultAgencyService - Agencia predeterminada del usuario obtenida:', defaultAgencyId);\n          let agenciaSeleccionada: number | null = null;\n          \n          if (defaultAgencyId && this.agenciasSubject.value.length > 0) {\n            // Buscar la agencia predeterminada del usuario en la lista\n            const agenciaPredeterminada = this.agenciasSubject.value.find(ag => ag.Id === defaultAgencyId);\n            if (agenciaPredeterminada) {\n              console.log('✅ DefaultAgencyService - Agencia predeterminada del usuario encontrada:', agenciaPredeterminada);\n              agenciaSeleccionada = defaultAgencyId;\n            } else {\n              // Si no se encuentra la agencia predeterminada, seleccionar la primera\n              if (autoSelect) {\n                console.log('⚠️ DefaultAgencyService - Agencia predeterminada del usuario no encontrada, seleccionando primera agencia');\n                agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n                console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n              }\n            }\n          } else {\n            // Si el usuario no tiene agencia predeterminada, seleccionar la primera de la lista\n            if (autoSelect && this.agenciasSubject.value.length > 0) {\n              console.log('ℹ️ DefaultAgencyService - Usuario sin agencia predeterminada, seleccionando primera agencia de la lista');\n              agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n              console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n            }\n          }\n          \n          // Actualizar el BehaviorSubject\n          if (agenciaSeleccionada) {\n            console.log('🎯 DefaultAgencyService - Estableciendo agencia seleccionada:', agenciaSeleccionada);\n            this.selectedAgencySubject.next(agenciaSeleccionada);\n          }\n          \n          observer.next(agenciaSeleccionada);\n          observer.complete();\n        },\n        error: (error) => {\n          console.error('❌ DefaultAgencyService - Error obteniendo agencia predeterminada después de reintentos:', error);\n          console.warn('⚠️ DefaultAgencyService - No se pudo obtener agencia predeterminada, seleccionando primera agencia de la lista');\n          // En caso de error, seleccionar la primera agencia disponible si está habilitado\n          let agenciaSeleccionada: number | null = null;\n          if (autoSelect && this.agenciasSubject.value.length > 0) {\n            agenciaSeleccionada = this.agenciasSubject.value[0].Id;\n            console.log('ℹ️ DefaultAgencyService - Seleccionada primera agencia por defecto:', agenciaSeleccionada);\n            console.log('🔍 DefaultAgencyService - Primera agencia de la lista:', this.agenciasSubject.value[0]);\n            this.selectedAgencySubject.next(agenciaSeleccionada);\n          }\n          \n          observer.next(agenciaSeleccionada);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  /**\n   * Seleccionar una agencia específica\n   */\n  seleccionarAgencia(agenciaId: number): void {\n    this.selectedAgencySubject.next(agenciaId);\n  }\n\n  /**\n   * Obtener la agencia actualmente seleccionada\n   */\n  getAgenciaSeleccionada(): number | null {\n    return this.selectedAgencySubject.value;\n  }\n\n  /**\n   * Obtener las agencias disponibles\n   */\n  getAgencias(): Agencia[] {\n    return this.agenciasSubject.value;\n  }\n\n  /**\n   * Limpiar la selección de agencia\n   */\n  limpiarSeleccion(): void {\n    this.selectedAgencySubject.next(null);\n  }\n\n  /**\n   * Verificar si una agencia está habilitada\n   */\n  esAgenciaHabilitada(agencia: Agencia): boolean {\n    return agencia && this.esHabilitado(agencia.Enabled);\n  }\n\n  /**\n   * Método de utilidad para validar estado habilitado de cualquier campo\n   */\n  private esHabilitado(valor: any): boolean {\n    if (valor === null || valor === undefined) {\n      return false;\n    }\n    \n    // Convertir a string para comparación segura\n    const valorStr = String(valor).toLowerCase();\n    return valorStr === 'true' || valorStr === '1' || valorStr === 'enabled';\n  }\n\n  /**\n   * Obtener agencias habilitadas\n   */\n  getAgenciasHabilitadas(): Agencia[] {\n    return this.agenciasSubject.value.filter(ag => this.esAgenciaHabilitada(ag));\n  }\n\n  /**\n   * Obtener agencias por estado (habilitadas o deshabilitadas)\n   */\n  getAgenciasPorEstado(habilitadas: boolean = true): Agencia[] {\n    return this.agenciasSubject.value.filter(ag => this.esAgenciaHabilitada(ag) === habilitadas);\n  }\n\n  /**\n   * Verificar si hay agencias disponibles\n   */\n  tieneAgencias(): boolean {\n    return this.agenciasSubject.value.length > 0;\n  }\n\n  /**\n   * Verificar si hay agencias habilitadas\n   */\n  tieneAgenciasHabilitadas(): boolean {\n    return this.getAgenciasHabilitadas().length > 0;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-client-selection-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule\n  ],\n              template: `\n                <div class=\"dialog-container\">\n                  <h2 mat-dialog-title class=\"text-xl font-semibold mb-4\">\n                    <mat-icon class=\"mr-2\">people</mat-icon>\n                    Seleccionar Cliente\n                  </h2>\n                  \n                  <div mat-dialog-content class=\"mb-6 dialog-content\">\n                    <p class=\"text-gray-600 mb-4 client-info\">\n                      Se encontraron {{ data.clients.length }} clientes. Selecciona uno de la lista:\n                    </p>\n                    \n                    <div class=\"overflow-x-auto table-container\">\n                      <table mat-table [dataSource]=\"data.clients\" class=\"w-full\">\n            <!-- Número de Cliente Column -->\n            <ng-container matColumnDef=\"ndCliente\">\n              <th mat-header-cell *matHeaderCellDef>N° Cliente</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <div class=\"flex items-center client-info\">\n                  <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 14px;\">fingerprint</mat-icon>\n                  <span class=\"font-medium\">{{ client.ndCliente }}</span>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- Nombre Cliente Column -->\n            <ng-container matColumnDef=\"cliente\">\n              <th mat-header-cell *matHeaderCellDef>Cliente</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <div class=\"client-info\">\n                  <div class=\"client-name\">{{ client.cliente }}</div>\n                  <div *ngIf=\"client.razonSocial && client.razonSocial !== client.cliente\" class=\"client-rfc\">Razón Social: {{ client.razonSocial }}</div>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- RFC Column -->\n            <ng-container matColumnDef=\"rfc\">\n              <th mat-header-cell *matHeaderCellDef>RFC</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <span *ngIf=\"client.rfc; else noRfc\" class=\"client-info\">{{ client.rfc }}</span>\n                <ng-template #noRfc>\n                  <span class=\"text-gray-400 italic client-info\">Sin RFC</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"email\">\n              <th mat-header-cell *matHeaderCellDef>Email</th>\n              <td mat-cell *matCellDef=\"let client\">\n                <span *ngIf=\"client.email; else noEmail\" class=\"client-info\">{{ client.email }}</span>\n                <ng-template #noEmail>\n                  <span class=\"text-gray-400 italic client-info\">Sin email</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" \n                class=\"hover:bg-gray-50 cursor-pointer\"\n                (click)=\"selectClient(row)\"></tr>\n          </table>\n        </div>\n      </div>\n\n      <div mat-dialog-actions class=\"flex justify-end gap-2\">\n        <button mat-button (click)=\"onCancel()\" class=\"text-sm\">\n          <mat-icon class=\"mr-1\" style=\"font-size: 16px;\">close</mat-icon>\n          Cancelar\n        </button>\n      </div>\n    </div>\n  `,\n              styles: [`\n                .mat-mdc-dialog-container {\n                  --mdc-dialog-container-color: white;\n                }\n                \n                // Contenedor principal del diálogo\n                .dialog-container {\n                  width: calc(100% - 20px);\n                  height: calc(100% - 20px);\n                  margin: 10px;\n                  padding: 0;\n                  display: flex;\n                  flex-direction: column;\n                }\n                \n                // Contenedor de contenido\n                .dialog-content {\n                  flex: 1;\n                  overflow: hidden;\n                  display: flex;\n                  flex-direction: column;\n                }\n                \n                // Contenedor de la tabla\n                .table-container {\n                  flex: 1;\n                  overflow: auto;\n                  min-height: 0;\n                }\n                \n                // Estilos específicos para las tablas (tomados de validación)\n    :host ::ng-deep {\n      mat-table {\n        .mat-mdc-table {\n          border-collapse: separate !important;\n          border-spacing: 0 !important;\n          width: 100% !important;\n        }\n        \n        // Altura compacta para las filas\n        .mat-mdc-row {\n          min-height: 32px !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          border-bottom: 1px solid rgba(0,0,0,.12) !important;\n          display: table-row !important;\n          cursor: pointer;\n          \n          &:hover {\n            background-color: #f1f5f9 !important;\n          }\n        }\n        \n        .mat-mdc-header-row {\n          min-height: 32px !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          border-bottom: 1px solid rgba(0,0,0,.12) !important;\n          display: table-row !important;\n          background-color: #f8fafc !important;\n        }\n        \n        // Padding compacto para las celdas\n        .mat-mdc-cell {\n          padding: 4px 8px !important;\n          vertical-align: middle !important;\n          line-height: 1.2 !important;\n          font-size: 12px !important;\n          border: none !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          overflow: hidden !important;\n          white-space: nowrap !important;\n          text-overflow: ellipsis !important;\n          text-align: left !important;\n        }\n        \n        .mat-mdc-header-cell {\n          padding: 4px 8px !important;\n          vertical-align: middle !important;\n          line-height: 1.2 !important;\n          font-size: 12px !important;\n          font-weight: 500 !important;\n          border: none !important;\n          height: 32px !important;\n          max-height: 32px !important;\n          overflow: hidden !important;\n          white-space: nowrap !important;\n          text-overflow: ellipsis !important;\n          text-align: left !important;\n        }\n        \n        // Eliminar cualquier espaciado extra\n        .mat-mdc-cell, .mat-mdc-header-cell {\n          margin: 0 !important;\n          border-spacing: 0 !important;\n        }\n      }\n      \n      // Estilos específicos para elementos que puedan estar causando diferencias\n      .mat-mdc-table-container {\n        overflow: hidden !important;\n      }\n      \n      .mat-mdc-table-wrapper {\n        overflow: hidden !important;\n      }\n      \n      // Estilos específicos para elementos internos\n      .mat-mdc-cell div,\n      .mat-mdc-cell span,\n      .mat-mdc-header-cell div,\n      .mat-mdc-header-cell span {\n        line-height: 1.2 !important;\n        margin: 0 !important;\n        padding: 0 !important;\n        font-size: 12px !important;\n      }\n    }\n    \n    // Estilos para el diálogo\n    .dialog-content {\n      max-height: 70vh;\n      overflow-y: auto;\n    }\n    \n    .client-info {\n      font-size: 12px;\n      line-height: 1.2;\n    }\n    \n    .client-name {\n      font-weight: 500;\n      color: #1f2937;\n    }\n    \n    .client-rfc {\n      color: #6b7280;\n      font-size: 11px;\n    }\n    \n    // Estilos específicos para columnas\n    :host ::ng-deep {\n      // Hacer la columna cliente más ancha\n      mat-table {\n        .mat-column-cliente {\n          min-width: 300px !important;\n          max-width: 400px !important;\n          width: 35% !important;\n        }\n        \n        .mat-column-ndCliente {\n          min-width: 120px !important;\n          width: 15% !important;\n        }\n        \n        .mat-column-rfc {\n          min-width: 150px !important;\n          width: 20% !important;\n        }\n        \n        .mat-column-email {\n          min-width: 200px !important;\n          width: 30% !important;\n        }\n      }\n    }\n  `]\n})\nexport class ClientSelectionDialogComponent {\n  displayedColumns: string[] = ['ndCliente', 'cliente', 'rfc', 'email'];\n\n  constructor(\n    public dialogRef: MatDialogRef<ClientSelectionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { clients: any[] }\n  ) {}\n\n  selectClient(client: any): void {\n    this.dialogRef.close(client);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { Subject, takeUntil } from 'rxjs';\nimport { DefaultAgencyService } from '../../../core/services/default-agency.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { ClientSelectionDialogComponent } from './client-selection-dialog.component';\n\n@Component({\n  selector: 'vex-integracion',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatDialogModule,\n    MatTableModule,\n    MatMenuModule\n  ],\n  templateUrl: './integracion.component.html',\n  styleUrls: ['./integracion.component.scss']\n})\nexport class IntegracionComponent implements OnInit, OnDestroy {\n  loading = false;\n  integrationStatus = 'inactive'; // inactive, active, error\n  lastUpdate = new Date();\n  \n  // Agency filter properties\n  agencies: any[] = [];\n  selectedAgencyId: number | null = null;\n  agenciesLoading = true;\n  \n  // Client search properties\n  clientSearchTerm = '';\n  clients: any[] = [];\n  clientsLoading = false;\n  showClientResults = false;\n  selectedClient: any = null;\n\n  // Files/Pedidos properties\n  files: any[] = [];\n  filesLoading = false;\n  filesDisplayedColumns: string[] = [\n    'numeroPedido',\n    'numeroInventario', \n    'proceso',\n    'operacion',\n    'tipoCliente',\n    'vehiculo',\n    'year',\n    'modelo',\n    'vin',\n    'agencia',\n    'fechaRegistro',\n    'actions'\n  ];\n\n  // User permissions\n  userRole: string = '';\n  isManagerOrAdmin: boolean = false;\n\n  // Document management properties\n  selectedFile: any = null;\n  requiredDocuments: any[] = [];\n  documentsLoading = false;\n  selectedFiles: { [key: string]: File } = {};\n  \n  // Dialog properties\n  displayedColumns: string[] = ['ndCliente', 'cliente', 'rfc', 'email', 'actions'];\n  \n  // Process properties - Fixed process for integration\n  integrationProcessId = 1; // Gestión de Clientes\n  \n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private defaultAgencyService: DefaultAgencyService,\n    private http: HttpClient,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.loadIntegrationStatus();\n    this.loadAgencies();\n    this.checkUserPermissions();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  checkUserPermissions(): void {\n    // Obtener el rol del usuario desde el token o servicio de autenticación\n    // Por ahora simulamos que es gerente/administrador\n    this.userRole = 'manager'; // Cambiar por la lógica real de obtención del rol\n    this.isManagerOrAdmin = this.userRole === 'manager' || this.userRole === 'admin';\n    \n    // Si no es gerente/admin, quitar la columna de acciones\n    if (!this.isManagerOrAdmin) {\n      this.filesDisplayedColumns = this.filesDisplayedColumns.filter(col => col !== 'actions');\n    }\n  }\n\n  loadIntegrationStatus(): void {\n    this.loading = true;\n    // Simular carga de estado de integración\n    setTimeout(() => {\n      this.integrationStatus = 'active';\n      this.loading = false;\n    }, 1000);\n  }\n\n  startIntegration(): void {\n    this.loading = true;\n    this.snackBar.open('Iniciando proceso de integración...', 'Cerrar', {\n      duration: 3000\n    });\n    \n    // Simular proceso de integración\n    setTimeout(() => {\n      this.integrationStatus = 'active';\n      this.loading = false;\n      this.snackBar.open('Integración completada exitosamente', 'Cerrar', {\n        duration: 5000\n      });\n    }, 3000);\n  }\n\n  stopIntegration(): void {\n    this.integrationStatus = 'inactive';\n    this.snackBar.open('Integración detenida', 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  getStatusColor(): string {\n    switch (this.integrationStatus) {\n      case 'active': return 'text-green-600';\n      case 'error': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  }\n\n  getStatusIcon(): string {\n    switch (this.integrationStatus) {\n      case 'active': return 'check_circle';\n      case 'error': return 'error';\n      default: return 'pause_circle';\n    }\n  }\n\n  getStatusText(): string {\n    switch (this.integrationStatus) {\n      case 'active': return 'Activa';\n      case 'error': return 'Error';\n      default: return 'Inactiva';\n    }\n  }\n\n  // Agency filter methods\n  private loadAgencies(): void {\n    this.agenciesLoading = true;\n    \n    this.defaultAgencyService.obtenerAgencias()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (agencias) => {\n          console.log('🏢 Agencias asignadas al usuario:', agencias);\n          this.agencies = agencias;\n          this.agenciesLoading = false;\n          \n          // Establecer agencia predeterminada\n          setTimeout(() => {\n            this.defaultAgencyService.establecerAgenciaPredeterminada(true).subscribe({\n              next: (agenciaId) => {\n                if (agenciaId) {\n                  console.log('✅ Agencia predeterminada establecida:', agenciaId);\n                  this.selectedAgencyId = agenciaId;\n                  this.onAgencyChange(agenciaId);\n                } else {\n                  console.warn('⚠️ No se pudo establecer agencia predeterminada');\n                }\n              },\n              error: (error) => {\n                console.error('❌ Error estableciendo agencia predeterminada:', error);\n                // Si falla, intentar seleccionar la primera agencia disponible\n                if (this.agencies.length > 0) {\n                  const primeraAgencia = this.agencies[0];\n                  console.log('🔄 Seleccionando primera agencia disponible como fallback:', primeraAgencia);\n                  this.selectedAgencyId = primeraAgencia.Id;\n                  this.onAgencyChange(primeraAgencia.Id);\n                }\n              }\n            });\n          }, 100);\n        },\n        error: (error) => {\n          console.error('🏢 Error cargando agencias:', error);\n          this.agencies = [];\n          this.agenciesLoading = false;\n          this.snackBar.open('Error al cargar las agencias', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  onAgencyChange(agencyId: number | null): void {\n    this.selectedAgencyId = agencyId;\n    // Aquí puedes agregar lógica adicional cuando cambie la agencia seleccionada\n    console.log('Selected agency:', agencyId);\n  }\n\n  clearAgencyFilter(): void {\n    this.selectedAgencyId = null;\n  }\n\n  hasAgencies(): boolean {\n    return this.agencies && this.agencies.length > 0;\n  }\n\n  trackByAgencyId(index: number, agency: any): number {\n    return agency.Id;\n  }\n\n  // Client search methods\n  onClientSearchChange(): void {\n    // Ya no buscamos automáticamente, solo limpiamos resultados si el campo está vacío\n    if (!this.clientSearchTerm.trim()) {\n      this.clients = [];\n      this.showClientResults = false;\n    }\n  }\n\n  searchClients(): void {\n    if (this.clientSearchTerm.trim().length < 3) {\n      this.snackBar.open('Debe ingresar al menos 3 caracteres para buscar', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n    this.performClientSearch();\n  }\n\n  private performClientSearch(): void {\n    if (!this.clientSearchTerm.trim()) {\n      this.clients = [];\n      this.showClientResults = false;\n      return;\n    }\n\n    // Verificar que tenemos agencia seleccionada\n    if (!this.selectedAgencyId) {\n      this.snackBar.open('Debe seleccionar una agencia para buscar clientes', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n\n    this.clientsLoading = true;\n    this.showClientResults = true;\n\n    let params = new HttpParams();\n    params = params.set('id', this.selectedAgencyId.toString());\n    params = params.set('search', this.clientSearchTerm.trim());\n    params = params.set('limit', '50');\n\n    this.http.get<any>(`${environment.apiBaseUrl}/api/client/search`, { params })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('🔍 Clientes encontrados:', response);\n          \n          if (response && response.success && response.data && response.data.clientes) {\n            this.clients = response.data.clientes;\n            \n            // Si hay múltiples resultados, mostrar diálogo\n            if (this.clients.length > 1) {\n              this.showClientSelectionDialog();\n            } else if (this.clients.length === 1) {\n              // Si hay solo un resultado, seleccionarlo automáticamente\n              this.selectClient(this.clients[0]);\n            } else {\n              // Sin resultados\n              this.showClientResults = true;\n            }\n          } else {\n            this.clients = [];\n            this.showClientResults = true;\n          }\n          \n          this.clientsLoading = false;\n        },\n        error: (error) => {\n          console.error('❌ Error buscando clientes:', error);\n          this.clients = [];\n          this.clientsLoading = false;\n          this.snackBar.open('Error al buscar clientes', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  clearClientSearch(): void {\n    this.clientSearchTerm = '';\n    this.clients = [];\n    this.showClientResults = false;\n    this.selectedClient = null;\n  }\n\n  selectClient(client: any): void {\n    console.log('Cliente seleccionado:', client);\n    this.selectedClient = client;\n    this.showClientResults = false; // Ocultar resultados después de seleccionar\n    this.clientSearchTerm = ''; // Limpiar el campo de búsqueda\n    \n    // Cargar los files/pedidos del cliente seleccionado\n    this.loadClientFiles();\n    \n    this.snackBar.open(`Cliente seleccionado: ${client.cliente}`, 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  showClientSelectionDialog(): void {\n    const dialogRef = this.dialog.open(ClientSelectionDialogComponent, {\n      width: '95vw',\n      height: '80vh',\n      maxWidth: '1200px',\n      data: { clients: this.clients }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.selectClient(result);\n      } else {\n        // Si se canceló el diálogo, limpiar la búsqueda\n        this.clearClientSearch();\n      }\n    });\n  }\n\n  clearClientSelection(): void {\n    this.selectedClient = null;\n    this.files = []; // Limpiar también los files\n    this.snackBar.open('Selección de cliente limpiada', 'Cerrar', {\n      duration: 2000\n    });\n  }\n\n  loadClientFiles(): void {\n    if (!this.selectedClient || !this.selectedClient.ndCliente) {\n      this.files = [];\n      return;\n    }\n\n    this.filesLoading = true;\n\n    let params = new HttpParams();\n    params = params.set('ndCliente', this.selectedClient.ndCliente);\n    params = params.set('status', 'Integracion'); // Filtrar por estatus de integración\n    params = params.set('limit', '100');\n\n    this.http.get<any>(`${environment.apiBaseUrl}/api/files/by-client`, { params })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📁 Files encontrados:', response);\n          \n          if (response && response.success && response.data && response.data.files) {\n            this.files = response.data.files;\n          } else {\n            this.files = [];\n          }\n          \n          this.filesLoading = false;\n        },\n        error: (error) => {\n          console.error('❌ Error cargando files:', error);\n          this.files = [];\n          this.filesLoading = false;\n          this.snackBar.open('Error al cargar los pedidos del cliente', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  trackByClientId(index: number, client: any): number {\n    return client.ndCliente;\n  }\n\n  // Métodos para acciones de pedidos\n  cancelarPedido(file: any): void {\n    console.log('Cancelando pedido:', file.numeroPedido);\n    // Aquí implementarías la lógica para cancelar el pedido\n    this.snackBar.open(`Pedido ${file.numeroPedido} cancelado`, 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  excepcionPedido(file: any): void {\n    console.log('Creando excepción para pedido:', file.numeroPedido);\n    // Aquí implementarías la lógica para crear una excepción\n    this.snackBar.open(`Excepción creada para pedido ${file.numeroPedido}`, 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  agregarPedidoIntegracion(): void {\n    console.log('Agregando nuevo pedido de integración para cliente:', this.selectedClient.ndCliente);\n    // Aquí implementarías la lógica para agregar un nuevo pedido\n    this.snackBar.open(`Agregando nuevo pedido para cliente ${this.selectedClient.ndCliente}`, 'Cerrar', {\n      duration: 3000\n    });\n  }\n\n  // Métodos para manejo de documentos\n  selectFile(file: any): void {\n    this.selectedFile = file;\n    this.loadRequiredDocuments(file.fileId); // Usar fileId en lugar de numeroPedido\n  }\n\n  loadRequiredDocuments(fileId: string): void {\n    this.documentsLoading = true;\n    this.requiredDocuments = [];\n\n    let params = new HttpParams();\n    params = params.set('fileId', fileId);\n    params = params.set('status', 'Integración'); // Solo documentos para pedidos en integración\n\n    this.http.get<any>(`${environment.apiBaseUrl}/api/documents/required`, { params })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📄 Documentos requeridos:', response);\n          \n          if (response && response.success && response.data && response.data.documents) {\n            this.requiredDocuments = response.data.documents;\n          } else {\n            this.requiredDocuments = [];\n          }\n          \n          this.documentsLoading = false;\n        },\n        error: (error) => {\n          console.error('❌ Error cargando documentos:', error);\n          this.requiredDocuments = [];\n          this.documentsLoading = false;\n          this.snackBar.open('Error al cargar documentos requeridos', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  onFileSelected(event: any, documentId: string): void {\n    const file = event.target.files[0];\n    if (file) {\n      this.selectedFiles[documentId] = file;\n    }\n  }\n\n  uploadDocument(document: any): void {\n    if (!this.selectedFiles[document.documentId]) {\n      this.snackBar.open('Debe seleccionar un archivo', 'Cerrar', {\n        duration: 3000\n      });\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('fileId', this.selectedFile.fileId); // Usar fileId en lugar de numeroPedido\n    formData.append('documentTypeId', document.documentId);\n    formData.append('document', this.selectedFiles[document.documentId]);\n\n    this.http.post<any>(`${environment.apiBaseUrl}/api/documents/upload`, formData)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('📤 Documento subido:', response);\n          this.snackBar.open(`Documento ${document.documentName} subido exitosamente`, 'Cerrar', {\n            duration: 3000\n          });\n          // Recargar documentos\n          this.loadRequiredDocuments(this.selectedFile.fileId); // Usar fileId\n          // Limpiar archivo seleccionado\n          delete this.selectedFiles[document.documentId];\n        },\n        error: (error) => {\n          console.error('❌ Error subiendo documento:', error);\n          this.snackBar.open('Error al subir documento', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  viewDocument(document: any): void {\n    if (document.filePath) {\n      window.open(`${environment.apiBaseUrl}/${document.filePath}`, '_blank');\n    }\n  }\n\n  getDocumentStatusIcon(status: string, idCurrentStatus?: string): string {\n    // Si tenemos idCurrentStatus, usamos ese para determinar el icono\n    if (idCurrentStatus) {\n      switch (idCurrentStatus) {\n        case '1': return 'fiber_new'; // Nuevo\n        case '2': return 'upload_file'; // Documento cargado\n        case '3': return 'visibility'; // En revisión\n        case '4': return 'check_circle'; // Revisado y OK\n        case '5': return 'cancel'; // Rechazado\n        case '6': return 'error'; // Documento no válido\n        default: return 'help';\n      }\n    }\n    \n    // Fallback al status calculado si no hay idCurrentStatus\n    switch (status) {\n      case 'uploaded': return 'check_circle';\n      case 'required': return 'info';\n      case 'optional': return 'help';\n      default: return 'help';\n    }\n  }\n\n  getDocumentStatusColor(status: string, idCurrentStatus?: string): string {\n    // Si tenemos idCurrentStatus, usamos ese para determinar el color\n    if (idCurrentStatus) {\n      switch (idCurrentStatus) {\n        case '1': return 'text-blue-600'; // Nuevo - Azul\n        case '2': return 'text-orange-600'; // Documento cargado - Naranja\n        case '3': return 'text-yellow-600'; // En revisión - Amarillo\n        case '4': return 'text-green-600'; // Revisado y OK - Verde\n        case '5': return 'text-red-600'; // Rechazado - Rojo\n        case '6': return 'text-red-800'; // Documento no válido - Rojo oscuro\n        default: return 'text-gray-600';\n      }\n    }\n    \n    // Fallback al status calculado si no hay idCurrentStatus\n    switch (status) {\n      case 'uploaded': return 'text-green-600';\n      case 'required': return 'text-yellow-600';\n      case 'optional': return 'text-gray-600';\n      default: return 'text-gray-600';\n    }\n  }\n}\n","<div class=\"integracion-container\">\n\n  <!-- Filtros de Agencia y Cliente -->\n  <div class=\"filters-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-content class=\"p-2\">\n        <div class=\"flex items-center justify-between gap-3\">\n          <!-- Filtro de Agencia -->\n          <div class=\"flex items-center space-x-3\">\n            <mat-form-field appearance=\"outline\" class=\"min-w-48\">\n              <mat-label>Agencia</mat-label>\n              <mat-select \n                [value]=\"selectedAgencyId\" \n                (selectionChange)=\"onAgencyChange($event.value)\"\n                [disabled]=\"agenciesLoading || !hasAgencies()\">\n                <mat-option [value]=\"null\">Todas las agencias</mat-option>\n                <mat-option \n                  *ngFor=\"let agency of agencies; trackBy: trackByAgencyId\" \n                  [value]=\"agency.Id\">\n                  {{ agency.Name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n\n          <!-- Filtro de Cliente y Botones -->\n          <div class=\"flex items-center space-x-3 flex-1\">\n            <mat-form-field appearance=\"outline\" class=\"flex-1\">\n              <mat-label>Buscar Cliente</mat-label>\n              <input \n                matInput \n                [(ngModel)]=\"clientSearchTerm\"\n                (keyup.enter)=\"searchClients()\"\n                placeholder=\"Buscar por número de cliente o nombre completo\"\n                autocomplete=\"off\">\n            </mat-form-field>\n            \n            <!-- Contenedor de botones alineados -->\n            <div class=\"flex items-center space-x-2\">\n              <!-- Botón de buscar -->\n              <button \n                mat-raised-button \n                color=\"primary\" \n                (click)=\"searchClients()\"\n                [disabled]=\"clientsLoading || clientSearchTerm.trim().length < 3\"\n                matTooltip=\"Buscar cliente\"\n                style=\"height: 40px; min-height: 40px;\">\n                <mat-icon>search</mat-icon>\n                Buscar\n              </button>\n              \n              <!-- Botón de limpiar búsqueda -->\n              <button \n                *ngIf=\"clientSearchTerm\"\n                mat-raised-button \n                color=\"warn\" \n                (click)=\"clearClientSearch()\"\n                matTooltip=\"Limpiar búsqueda\"\n                style=\"height: 40px; min-height: 40px;\">\n                <mat-icon>clear</mat-icon>\n                Limpiar\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Sin resultados -->\n        <div *ngIf=\"showClientResults && clients.length === 0 && !clientsLoading\" class=\"mt-3 text-center py-6\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">search_off</mat-icon>\n          <p class=\"text-gray-500\">No se encontraron clientes con el término de búsqueda</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- Información del Cliente Seleccionado -->\n  <div *ngIf=\"selectedClient\" class=\"client-info-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-header class=\"pb-1\">\n        <mat-card-title class=\"flex items-center text-sm\">\n          <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 18px;\">person</mat-icon>\n          Información del Cliente\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content class=\"p-2\">\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-2\">\n          <div class=\"field-group\">\n            <label class=\"field-label\">N° Cliente</label>\n            <div class=\"field-value\">{{ selectedClient.ndCliente || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Razón Social</label>\n            <div class=\"field-value\">{{ selectedClient.razonSocial || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">RFC</label>\n            <div class=\"field-value\">{{ selectedClient.rfc || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Correo</label>\n            <div class=\"field-value\">{{ selectedClient.email || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Teléfono</label>\n            <div class=\"field-value\">{{ selectedClient.telefono || 'N/A' }}</div>\n          </div>\n          <div class=\"field-group\">\n            <label class=\"field-label\">Teléfono 2</label>\n            <div class=\"field-value\">{{ selectedClient.telefono2 || 'N/A' }}</div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- Tabla de Pedidos del Cliente -->\n  <div *ngIf=\"selectedClient\" class=\"files-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-header class=\"pb-1\">\n        <mat-card-title class=\"flex items-center justify-between text-sm\">\n          <div class=\"flex items-center\">\n            <mat-icon class=\"mr-1 text-green-600\" style=\"font-size: 18px;\">description</mat-icon>\n            Pedidos en Integración\n          </div>\n          <button \n            mat-icon-button \n            color=\"primary\"\n            (click)=\"agregarPedidoIntegracion()\"\n            matTooltip=\"Agregar nuevo pedido de integración\"\n            *ngIf=\"isManagerOrAdmin\">\n            <mat-icon style=\"font-size: 18px;\">add</mat-icon>\n          </button>\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content class=\"p-2\">\n        <!-- Loading spinner -->\n        <div *ngIf=\"filesLoading\" class=\"flex justify-center py-8\">\n          <mat-spinner diameter=\"40\"></mat-spinner>\n        </div>\n\n        <!-- Tabla de pedidos -->\n        <div *ngIf=\"!filesLoading\" class=\"overflow-x-auto\">\n          <table mat-table [dataSource]=\"files\" class=\"w-full files-table\">\n            <!-- Número de Pedido -->\n            <ng-container matColumnDef=\"numeroPedido\">\n              <th mat-header-cell *matHeaderCellDef>N° Pedido</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <div class=\"flex items-center\">\n                  <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 14px;\">receipt</mat-icon>\n                  <span class=\"font-medium\">{{ file.numeroPedido }}</span>\n                </div>\n              </td>\n            </ng-container>\n\n            <!-- Número de Inventario -->\n            <ng-container matColumnDef=\"numeroInventario\">\n              <th mat-header-cell *matHeaderCellDef>N° Inventario</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.numeroInventario; else noInventory\" class=\"text-sm\">{{ file.numeroInventario }}</span>\n                <ng-template #noInventory>\n                  <span class=\"text-gray-400 italic text-sm\">Sin inventario</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Proceso -->\n            <ng-container matColumnDef=\"proceso\">\n              <th mat-header-cell *matHeaderCellDef>Proceso</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.proceso; else noProcess\" class=\"text-sm\">{{ file.proceso }}</span>\n                <ng-template #noProcess>\n                  <span class=\"text-gray-400 italic text-sm\">Sin proceso</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Operación -->\n            <ng-container matColumnDef=\"operacion\">\n              <th mat-header-cell *matHeaderCellDef>Operación</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.operacion; else noOperation\" class=\"text-sm\">{{ file.operacion }}</span>\n                <ng-template #noOperation>\n                  <span class=\"text-gray-400 italic text-sm\">Sin operación</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Tipo de Cliente -->\n            <ng-container matColumnDef=\"tipoCliente\">\n              <th mat-header-cell *matHeaderCellDef>Tipo Cliente</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.tipoCliente; else noClientType\" class=\"text-sm\">{{ file.tipoCliente }}</span>\n                <ng-template #noClientType>\n                  <span class=\"text-gray-400 italic text-sm\">Sin tipo</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Vehículo -->\n            <ng-container matColumnDef=\"vehiculo\">\n              <th mat-header-cell *matHeaderCellDef>Vehículo</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.vehiculo; else noVehicle\" class=\"text-sm\">{{ file.vehiculo }}</span>\n                <ng-template #noVehicle>\n                  <span class=\"text-gray-400 italic text-sm\">Sin vehículo</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Año -->\n            <ng-container matColumnDef=\"year\">\n              <th mat-header-cell *matHeaderCellDef>Año</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.year; else noYear\" class=\"text-sm\">{{ file.year }}</span>\n                <ng-template #noYear>\n                  <span class=\"text-gray-400 italic text-sm\">-</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Modelo -->\n            <ng-container matColumnDef=\"modelo\">\n              <th mat-header-cell *matHeaderCellDef>Modelo</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.modelo; else noModel\" class=\"text-sm\">{{ file.modelo }}</span>\n                <ng-template #noModel>\n                  <span class=\"text-gray-400 italic text-sm\">Sin modelo</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- VIN -->\n            <ng-container matColumnDef=\"vin\">\n              <th mat-header-cell *matHeaderCellDef>VIN</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.vin; else noVin\" class=\"text-sm font-mono\">{{ file.vin }}</span>\n                <ng-template #noVin>\n                  <span class=\"text-gray-400 italic text-sm\">Sin VIN</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Agencia -->\n            <ng-container matColumnDef=\"agencia\">\n              <th mat-header-cell *matHeaderCellDef>Agencia</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.agencia; else noAgency\" class=\"text-sm\">{{ file.agencia }}</span>\n                <ng-template #noAgency>\n                  <span class=\"text-gray-400 italic text-sm\">Sin agencia</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Fecha de Registro -->\n            <ng-container matColumnDef=\"fechaRegistro\">\n              <th mat-header-cell *matHeaderCellDef>Fecha Registro</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <span *ngIf=\"file.fechaRegistro; else noDate\" class=\"text-sm\">{{ file.fechaRegistro | date:'dd/MM/yyyy HH:mm' }}</span>\n                <ng-template #noDate>\n                  <span class=\"text-gray-400 italic text-sm\">Sin fecha</span>\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <!-- Acciones (solo para gerentes y administradores) -->\n            <ng-container matColumnDef=\"actions\">\n              <th mat-header-cell *matHeaderCellDef>Acciones</th>\n              <td mat-cell *matCellDef=\"let file\">\n                <button \n                  mat-icon-button \n                  [matMenuTriggerFor]=\"actionsMenu\"\n                  *ngIf=\"isManagerOrAdmin\"\n                  matTooltip=\"Opciones del pedido\">\n                  <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #actionsMenu=\"matMenu\">\n                  <button mat-menu-item (click)=\"cancelarPedido(file)\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancelar</span>\n                  </button>\n                  <button mat-menu-item (click)=\"excepcionPedido(file)\">\n                    <mat-icon>warning</mat-icon>\n                    <span>Excepción</span>\n                  </button>\n                </mat-menu>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"filesDisplayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: filesDisplayedColumns;\" \n                class=\"hover:bg-gray-50 cursor-pointer\"\n                (click)=\"selectFile(row)\"></tr>\n          </table>\n        </div>\n\n        <!-- Sin pedidos -->\n        <div *ngIf=\"!filesLoading && files.length === 0\" class=\"text-center py-8\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">folder_open</mat-icon>\n          <p class=\"text-gray-500\">No se encontraron pedidos en estatus de integración para este cliente</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- Sección de Documentos del Pedido Seleccionado -->\n  <div *ngIf=\"selectedFile\" class=\"documents-section mb-2\">\n    <mat-card class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <mat-card-header class=\"pb-1\">\n        <mat-card-title class=\"flex flex-col text-sm\">\n          <div class=\"flex items-center mb-1\">\n            <mat-icon class=\"mr-1 text-blue-600\" style=\"font-size: 18px;\">folder</mat-icon>\n            <span class=\"font-semibold\">Documentos Requeridos</span>\n          </div>\n          <div class=\"text-xs text-gray-600 ml-6\">\n            Pedido {{ selectedFile.numeroPedido }} • {{ selectedFile.proceso }} • {{ selectedFile.operacion }} • {{ selectedFile.tipoCliente }} • {{ selectedFile.modelo }} {{ selectedFile.vehiculo }} {{ selectedFile.year }} • VIN: {{ selectedFile.vin }}\n          </div>\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content class=\"p-2\">\n        <!-- Loading spinner -->\n        <div *ngIf=\"documentsLoading\" class=\"flex justify-center py-8\">\n          <mat-spinner diameter=\"40\"></mat-spinner>\n        </div>\n\n        <!-- Lista de documentos -->\n        <div *ngIf=\"!documentsLoading\" class=\"space-y-2\">\n          <div *ngFor=\"let document of requiredDocuments\" \n               class=\"document-item flex items-center justify-between p-2 border border-gray-200 rounded hover:bg-gray-50\">\n            \n            <!-- Información del documento -->\n            <div class=\"flex items-center space-x-2 flex-1\">\n              <!-- Icono de estado -->\n              <mat-icon [class]=\"getDocumentStatusColor(document.status, document.idCurrentStatus)\" style=\"font-size: 16px;\">\n                {{ getDocumentStatusIcon(document.status, document.idCurrentStatus) }}\n              </mat-icon>\n              \n                <!-- Nombre del documento -->\n                <div class=\"flex-1\">\n                  <div class=\"font-medium text-gray-900 text-sm\">{{ document.documentName }}</div>\n                  <div *ngIf=\"document.hasExpiration === '1' && document.expirationDate\" \n                       class=\"text-xs text-gray-500\">\n                    Vencimiento: {{ document.expirationDate | date:'dd/MM/yyyy' }}\n                  </div>\n                </div>\n            </div>\n\n            <!-- Controles de archivo -->\n            <div class=\"flex items-center space-x-1\">\n              <!-- Input de archivo -->\n              <div class=\"file-input-container\">\n                <input \n                  type=\"file\" \n                  #fileInput\n                  (change)=\"onFileSelected($event, document.documentId)\"\n                  accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n                  class=\"hidden\"\n                  [id]=\"'file-' + document.documentId\">\n                <button \n                  mat-stroked-button \n                  (click)=\"fileInput.click()\"\n                  [disabled]=\"document.idCurrentStatus === '3' || document.idCurrentStatus === '4'\"\n                  class=\"text-xs\">\n                  <mat-icon class=\"mr-1\" style=\"font-size: 14px;\">attach_file</mat-icon>\n                  {{ selectedFiles[document.documentId] ? selectedFiles[document.documentId].name : 'Seleccionar archivo' }}\n                </button>\n              </div>\n\n              <!-- Botón Cargar -->\n              <button \n                mat-raised-button \n                color=\"primary\"\n                (click)=\"uploadDocument(document)\"\n                [disabled]=\"!selectedFiles[document.documentId] || document.idCurrentStatus === '3' || document.idCurrentStatus === '4'\"\n                class=\"text-xs\">\n                <mat-icon class=\"mr-1\" style=\"font-size: 14px;\">upload</mat-icon>\n                CARGAR\n              </button>\n\n              <!-- Botón Ver -->\n              <button \n                mat-raised-button \n                color=\"accent\"\n                (click)=\"viewDocument(document)\"\n                [disabled]=\"!document.filePath\"\n                class=\"text-xs\">\n                <mat-icon class=\"mr-1\" style=\"font-size: 14px;\">visibility</mat-icon>\n                VER\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Sin documentos -->\n        <div *ngIf=\"!documentsLoading && requiredDocuments.length === 0\" class=\"text-center py-8\">\n          <mat-icon class=\"text-gray-400 mb-2\" style=\"font-size: 40px;\">folder_open</mat-icon>\n          <p class=\"text-gray-500\">No se encontraron documentos requeridos para este pedido</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n</div>\n"],"names":["Observable","BehaviorSubject","map","tap","environment","DefaultAgencyService","constructor","http","apiUrl","apiBaseUrl","selectedAgencySubject","selectedAgency$","asObservable","agenciasSubject","agencias$","obtenerAgencias","get","pipe","response","success","data","agencies","Array","isArray","agencias","next","obtenerAgenciaUsuario","DefaultAgency","obtenerAgenciaUsuarioConReintentos","maxReintentos","delayMs","observer","intentos","intentarObtener","console","log","subscribe","defaultAgencyId","complete","error","warn","status","statusText","message","setTimeout","establecerAgenciaPredeterminada","autoSelect","value","agenciaSeleccionada","length","agenciaPredeterminada","find","ag","Id","seleccionarAgencia","agenciaId","getAgenciaSeleccionada","getAgencias","limpiarSeleccion","esAgenciaHabilitada","agencia","esHabilitado","Enabled","valor","undefined","valorStr","String","toLowerCase","getAgenciasHabilitadas","filter","getAgenciasPorEstado","habilitadas","tieneAgencias","tieneAgenciasHabilitadas","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn","CommonModule","MatDialogModule","MAT_DIALOG_DATA","MatButtonModule","MatTableModule","MatIconModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","client_r10","ndCliente","ɵɵtextInterpolate1","client_r11","razonSocial","ɵɵtemplate","ClientSelectionDialogComponent_td_15_div_4_Template","cliente","ɵɵproperty","client_r14","rfc","ClientSelectionDialogComponent_td_18_span_1_Template","ClientSelectionDialogComponent_td_18_ng_template_2_Template","ɵɵtemplateRefExtractor","_r17","client_r19","email","ClientSelectionDialogComponent_td_21_span_1_Template","ClientSelectionDialogComponent_td_21_ng_template_2_Template","_r22","ɵɵelement","ɵɵlistener","ClientSelectionDialogComponent_tr_23_Template_tr_click_0_listener","restoredCtx","ɵɵrestoreView","_r26","row_r24","$implicit","ctx_r25","ɵɵnextContext","ɵɵresetView","selectClient","ClientSelectionDialogComponent","dialogRef","displayedColumns","client","close","onCancel","ɵɵdirectiveInject","MatDialogRef","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ClientSelectionDialogComponent_Template","rf","ctx","ɵɵelementContainerStart","ClientSelectionDialogComponent_th_11_Template","ClientSelectionDialogComponent_td_12_Template","ɵɵelementContainerEnd","ClientSelectionDialogComponent_th_14_Template","ClientSelectionDialogComponent_td_15_Template","ClientSelectionDialogComponent_th_17_Template","ClientSelectionDialogComponent_td_18_Template","ClientSelectionDialogComponent_th_20_Template","ClientSelectionDialogComponent_td_21_Template","ClientSelectionDialogComponent_tr_22_Template","ClientSelectionDialogComponent_tr_23_Template","ClientSelectionDialogComponent_Template_button_click_25_listener","clients","i2","NgIf","MatDialogTitle","MatDialogActions","MatDialogContent","i3","MatButton","i4","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i5","MatIcon","styles","FormsModule","MatCardModule","MatProgressSpinnerModule","MatSnackBarModule","MatFormFieldModule","MatSelectModule","MatTooltipModule","MatInputModule","MatMenuModule","Subject","takeUntil","HttpParams","agency_r6","Name","IntegracionComponent_button_23_Template_button_click_0_listener","_r8","ctx_r7","clearClientSearch","ctx_r3","selectedClient","telefono","telefono2","IntegracionComponent_div_26_button_8_Template_button_click_0_listener","_r14","ctx_r13","agregarPedidoIntegracion","file_r41","numeroPedido","file_r42","numeroInventario","IntegracionComponent_div_26_div_11_td_7_span_1_Template","IntegracionComponent_div_26_div_11_td_7_ng_template_2_Template","_r45","file_r47","proceso","IntegracionComponent_div_26_div_11_td_10_span_1_Template","IntegracionComponent_div_26_div_11_td_10_ng_template_2_Template","_r50","file_r52","operacion","IntegracionComponent_div_26_div_11_td_13_span_1_Template","IntegracionComponent_div_26_div_11_td_13_ng_template_2_Template","_r55","file_r57","tipoCliente","IntegracionComponent_div_26_div_11_td_16_span_1_Template","IntegracionComponent_div_26_div_11_td_16_ng_template_2_Template","_r60","file_r62","vehiculo","IntegracionComponent_div_26_div_11_td_19_span_1_Template","IntegracionComponent_div_26_div_11_td_19_ng_template_2_Template","_r65","file_r67","year","IntegracionComponent_div_26_div_11_td_22_span_1_Template","IntegracionComponent_div_26_div_11_td_22_ng_template_2_Template","_r70","file_r72","modelo","IntegracionComponent_div_26_div_11_td_25_span_1_Template","IntegracionComponent_div_26_div_11_td_25_ng_template_2_Template","_r75","file_r77","vin","IntegracionComponent_div_26_div_11_td_28_span_1_Template","IntegracionComponent_div_26_div_11_td_28_ng_template_2_Template","_r80","file_r82","IntegracionComponent_div_26_div_11_td_31_span_1_Template","IntegracionComponent_div_26_div_11_td_31_ng_template_2_Template","_r85","ɵɵpipeBind2","file_r87","fechaRegistro","IntegracionComponent_div_26_div_11_td_34_span_1_Template","IntegracionComponent_div_26_div_11_td_34_ng_template_2_Template","_r90","_r94","IntegracionComponent_div_26_div_11_td_37_button_1_Template","IntegracionComponent_div_26_div_11_td_37_Template_button_click_4_listener","_r96","file_r92","ctx_r95","cancelarPedido","IntegracionComponent_div_26_div_11_td_37_Template_button_click_9_listener","ctx_r97","excepcionPedido","ctx_r38","isManagerOrAdmin","IntegracionComponent_div_26_div_11_tr_39_Template_tr_click_0_listener","_r100","row_r98","ctx_r99","selectFile","IntegracionComponent_div_26_div_11_th_3_Template","IntegracionComponent_div_26_div_11_td_4_Template","IntegracionComponent_div_26_div_11_th_6_Template","IntegracionComponent_div_26_div_11_td_7_Template","IntegracionComponent_div_26_div_11_th_9_Template","IntegracionComponent_div_26_div_11_td_10_Template","IntegracionComponent_div_26_div_11_th_12_Template","IntegracionComponent_div_26_div_11_td_13_Template","IntegracionComponent_div_26_div_11_th_15_Template","IntegracionComponent_div_26_div_11_td_16_Template","IntegracionComponent_div_26_div_11_th_18_Template","IntegracionComponent_div_26_div_11_td_19_Template","IntegracionComponent_div_26_div_11_th_21_Template","IntegracionComponent_div_26_div_11_td_22_Template","IntegracionComponent_div_26_div_11_th_24_Template","IntegracionComponent_div_26_div_11_td_25_Template","IntegracionComponent_div_26_div_11_th_27_Template","IntegracionComponent_div_26_div_11_td_28_Template","IntegracionComponent_div_26_div_11_th_30_Template","IntegracionComponent_div_26_div_11_td_31_Template","IntegracionComponent_div_26_div_11_th_33_Template","IntegracionComponent_div_26_div_11_td_34_Template","IntegracionComponent_div_26_div_11_th_36_Template","IntegracionComponent_div_26_div_11_td_37_Template","IntegracionComponent_div_26_div_11_tr_38_Template","IntegracionComponent_div_26_div_11_tr_39_Template","ctx_r11","files","filesDisplayedColumns","IntegracionComponent_div_26_button_8_Template","IntegracionComponent_div_26_div_10_Template","IntegracionComponent_div_26_div_11_Template","IntegracionComponent_div_26_div_12_Template","ctx_r4","filesLoading","document_r105","expirationDate","IntegracionComponent_div_27_div_13_div_1_div_7_Template","IntegracionComponent_div_27_div_13_div_1_Template_input_change_10_listener","$event","_r110","ctx_r109","onFileSelected","documentId","IntegracionComponent_div_27_div_13_div_1_Template_button_click_12_listener","_r107","ɵɵreference","click","IntegracionComponent_div_27_div_13_div_1_Template_button_click_16_listener","ctx_r112","uploadDocument","IntegracionComponent_div_27_div_13_div_1_Template_button_click_20_listener","ctx_r113","viewDocument","ɵɵclassMap","ctx_r104","getDocumentStatusColor","idCurrentStatus","getDocumentStatusIcon","documentName","hasExpiration","selectedFiles","name","filePath","IntegracionComponent_div_27_div_13_div_1_Template","ctx_r102","requiredDocuments","IntegracionComponent_div_27_div_12_Template","IntegracionComponent_div_27_div_13_Template","IntegracionComponent_div_27_div_14_Template","ɵɵtextInterpolate8","ctx_r5","selectedFile","documentsLoading","IntegracionComponent","snackBar","defaultAgencyService","dialog","loading","integrationStatus","lastUpdate","Date","selectedAgencyId","agenciesLoading","clientSearchTerm","clientsLoading","showClientResults","userRole","integrationProcessId","destroy$","ngOnInit","loadIntegrationStatus","loadAgencies","checkUserPermissions","ngOnDestroy","col","startIntegration","open","duration","stopIntegration","getStatusColor","getStatusIcon","getStatusText","onAgencyChange","primeraAgencia","agencyId","clearAgencyFilter","hasAgencies","trackByAgencyId","index","agency","onClientSearchChange","trim","searchClients","performClientSearch","params","set","toString","clientes","showClientSelectionDialog","loadClientFiles","width","height","maxWidth","afterClosed","result","clearClientSelection","trackByClientId","file","loadRequiredDocuments","fileId","documents","event","target","document","formData","FormData","append","post","window","MatSnackBar","MatDialog","IntegracionComponent_Template","IntegracionComponent_Template_mat_select_selectionChange_9_listener","IntegracionComponent_mat_option_12_Template","IntegracionComponent_Template_input_ngModelChange_17_listener","IntegracionComponent_Template_input_keyup_enter_17_listener","IntegracionComponent_Template_button_click_19_listener","IntegracionComponent_button_23_Template","IntegracionComponent_div_24_Template","IntegracionComponent_div_25_Template","IntegracionComponent_div_26_Template","IntegracionComponent_div_27_Template","NgForOf","DatePipe","i6","DefaultValueAccessor","NgControlStatus","NgModel","i7","MatCard","MatCardContent","MatCardHeader","MatCardTitle","i8","MatIconButton","i9","i10","MatProgressSpinner","i11","MatFormField","MatLabel","i12","MatSelect","i13","MatOption","i14","MatTooltip","i15","MatInput","i16","i17","MatMenu","MatMenuItem","MatMenuTrigger"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}