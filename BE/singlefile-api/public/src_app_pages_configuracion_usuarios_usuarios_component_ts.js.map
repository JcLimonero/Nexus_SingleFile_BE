{"version":3,"file":"src_app_pages_configuracion_usuarios_usuarios_component_ts.js","mappings":"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","sources":["./src/app/core/services/user-access.service.ts","./src/app/core/services/user.service.ts","./src/app/pages/configuracion/usuarios/user-access-dialog/user-access-dialog.component.ts","./src/app/pages/configuracion/usuarios/user-access-dialog/user-access-dialog.component.html","./src/app/pages/configuracion/usuarios/user-edit-dialog/user-edit-dialog.component.ts","./src/app/pages/configuracion/usuarios/user-edit-dialog/user-edit-dialog.component.html","./src/app/pages/configuracion/usuarios/usuarios.component.ts","./src/app/pages/configuracion/usuarios/usuarios.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserAccess, UserAccessResponse, Agency, Process, AgencyResponse, ProcessResponse } from '../interfaces/user-access.interface';\nimport { ApiBaseService } from './api-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAccessService {\n  private readonly API_URL = '';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) { }\n\n  // Obtener accesos actuales de un usuario\n  getUserAccess(userId: string): Observable<UserAccessResponse> {\n    return this.http.get<UserAccessResponse>(`${this.apiBaseService.buildApiUrl('user')}/${userId}/access`);\n  }\n\n  // Actualizar accesos de un usuario\n  updateUserAccess(userId: string, access: UserAccess): Observable<any> {\n    return this.http.put(`${this.apiBaseService.buildApiUrl('user')}/${userId}/access`, access);\n  }\n\n  // Obtener todas las agencias activas\n  getActiveAgencies(): Observable<AgencyResponse> {\n    return this.http.get<AgencyResponse>(`${this.apiBaseService.buildApiUrl('agency')}?enabled=1`);\n  }\n\n  // Obtener todos los procesos activos\n  getActiveProcesses(): Observable<ProcessResponse> {\n    return this.http.get<ProcessResponse>(`${this.apiBaseService.buildApiUrl('process')}?enabled=1`);\n  }\n\n  // Obtener todas las agencias (activas e inactivas)\n  getAllAgencies(): Observable<AgencyResponse> {\n    return this.http.get<AgencyResponse>(`${this.apiBaseService.buildApiUrl('agency')}`);\n  }\n\n  // Obtener todos los procesos (activos e inactivos)\n  getAllProcesses(): Observable<ProcessResponse> {\n    return this.http.get<ProcessResponse>(`${this.apiBaseService.buildApiUrl('process')}`);\n  }\n\n  // Obtener agencias asignadas a un usuario\n  getUserAgencies(userId: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl('user')}/${userId}/agencies`);\n  }\n\n  // Obtener procesos asignados a un usuario\n  getUserProcesses(userId: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl('user')}/${userId}/processes`);\n  }\n\n  // Asignar agencias a un usuario\n  assignAgenciesToUser(userId: string, agencyIds: string[]): Observable<any> {\n    return this.http.post(`${this.apiBaseService.buildApiUrl('user')}/${userId}/agencies`, { agencies: agencyIds });\n  }\n\n  // Asignar procesos a un usuario\n  assignProcessesToUser(userId: string, processIds: string[]): Observable<any> {\n    return this.http.post(`${this.apiBaseService.buildApiUrl('user')}/${userId}/processes`, { processes: processIds });\n  }\n\n  // Remover agencia de un usuario\n  removeAgencyFromUser(userId: string, agencyId: string): Observable<any> {\n    return this.http.delete(`${this.apiBaseService.buildApiUrl('user')}/${userId}/agencies/${agencyId}`);\n  }\n\n  // Remover proceso de un usuario\n  removeProcessFromUser(userId: string, processId: string): Observable<any> {\n    return this.http.delete(`${this.apiBaseService.buildApiUrl('user')}/${userId}/processes/${processId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, UserCreateRequest, UserUpdateRequest, UserResponse, UserRole, UserRoleResponse, Agency, AgencyResponse } from '../interfaces/user.interface';\nimport { ApiBaseService } from './api-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private readonly API_URL = 'user';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) { }\n\n  getUsers(limit?: number): Observable<UserResponse> {\n    const params = limit ? `?limit=${limit}` : '';\n    return this.http.get<UserResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}${params}`);\n  }\n\n  getAllUsers(): Observable<UserResponse> {\n    return this.http.get<UserResponse>(this.apiBaseService.buildApiUrl(this.API_URL));\n  }\n\n  getUsersByStatus(enabled: string): Observable<UserResponse> {\n    return this.http.get<UserResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}?enabled=${enabled}`);\n  }\n\n  getUserById(id: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  createUser(user: UserCreateRequest): Observable<any> {\n    return this.http.post(this.apiBaseService.buildApiUrl(this.API_URL), user);\n  }\n\n  updateUser(id: string, user: UserUpdateRequest): Observable<any> {\n    return this.http.put(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, user);\n  }\n\n  deleteUser(id: string): Observable<any> {\n    return this.http.delete(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  toggleStatus(id: string): Observable<any> {\n    return this.http.patch(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/toggle-status`, {});\n  }\n\n  changePassword(id: string, newPassword: string): Observable<any> {\n    return this.http.post(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/change-password`, { new_password: newPassword });\n  }\n\n  resetPassword(id: string): Observable<any> {\n    return this.http.post(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/reset-password`, {});\n  }\n\n  searchUsers(query: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/search?q=${query}`);\n  }\n\n  getStats(): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/stats`);\n  }\n\n  checkUsernameAvailability(username: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/check-username?username=${username}`);\n  }\n\n  checkEmailAvailability(email: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl(this.API_URL)}/check-email?email=${email}`);\n  }\n\n  // Métodos para obtener datos de referencia\n  getUserRoles(): Observable<UserRoleResponse> {\n    return this.http.get<UserRoleResponse>(this.apiBaseService.buildApiUrl('user-role'));\n  }\n\n  getAgencies(): Observable<AgencyResponse> {\n    return this.http.get<AgencyResponse>(this.apiBaseService.buildApiUrl('agency'));\n  }\n\n  // Obtener agencias asignadas a un usuario específico\n  getUserAgencies(userId: string): Observable<any> {\n    return this.http.get(`${this.apiBaseService.buildApiUrl('user')}/${userId}/agencies`);\n  }\n\n  // Obtener usuarios por agencia\n  getUsersByAgency(agencyId?: number): Observable<UserResponse> {\n    const params = agencyId ? `?default_agency=${agencyId}` : '';\n    return this.http.get<UserResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}${params}`);\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { UserAccessDialogData, UserAccess, Agency, Process, AgencyResponse, ProcessResponse } from '../../../../core/interfaces/user-access.interface';\nimport { UserAccessService } from '../../../../core/services/user-access.service';\n\n@Component({\n  selector: 'app-user-access-dialog',\n  templateUrl: './user-access-dialog.component.html',\n  styleUrls: ['./user-access-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatListModule,\n    MatTabsModule\n  ]\n})\nexport class UserAccessDialogComponent implements OnInit {\n  accessForm!: FormGroup;\n  loading = false;\n  \n  // Datos disponibles\n  allAgencies: Agency[] = [];\n  allProcesses: Process[] = [];\n  \n  // Datos asignados al usuario\n  userAgencies: string[] = [];\n  userProcesses: string[] = [];\n  \n  // Datos temporales para el formulario\n  selectedAgencies: string[] = [];\n  selectedProcesses: string[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private userAccessService: UserAccessService,\n    private dialogRef: MatDialogRef<UserAccessDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: UserAccessDialogData,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.loadData();\n  }\n\n  private initializeForm(): void {\n    this.accessForm = this.fb.group({\n      agencies: [[]],\n      processes: [[]]\n    });\n  }\n\n  private loadData(): void {\n    this.loading = true;\n    \n    // Cargar agencias y procesos disponibles, y los accesos actuales del usuario\n    Promise.all([\n      this.userAccessService.getActiveAgencies().toPromise(),\n      this.userAccessService.getActiveProcesses().toPromise(),\n      this.userAccessService.getUserAccess(this.data.user.Id).toPromise()\n    ]).then(([agenciesResponse, processesResponse, userAccessResponse]) => {\n      // Procesar agencias disponibles\n      if (agenciesResponse?.success) {\n        this.allAgencies = agenciesResponse.data.agencies || [];\n      }\n      \n      // Procesar procesos disponibles\n      if (processesResponse?.success) {\n        this.allProcesses = processesResponse.data.processes || [];\n      }\n      \n      // Cargar accesos actuales del usuario\n      if (userAccessResponse?.success) {\n        this.userAgencies = userAccessResponse.data.agencies || [];\n        this.userProcesses = userAccessResponse.data.processes || [];\n      } else {\n        // Si no hay accesos o hay error, inicializar vacío\n        this.userAgencies = [];\n        this.userProcesses = [];\n      }\n      \n      // Inicializar selecciones con los datos del usuario\n      this.selectedAgencies = [...this.userAgencies];\n      this.selectedProcesses = [...this.userProcesses];\n      \n      // Actualizar formulario\n      this.accessForm.patchValue({\n        agencies: this.selectedAgencies,\n        processes: this.selectedProcesses\n      });\n      \n      this.loading = false;\n    }).catch(error => {\n      this.snackBar.open('Error al cargar datos de acceso', 'Error', {\n        duration: 3000\n      });\n      this.loading = false;\n    });\n  }\n\n  onAgencySelectionChange(agencies: string[]): void {\n    this.selectedAgencies = agencies;\n  }\n\n  onProcessSelectionChange(processes: string[]): void {\n    this.selectedProcesses = processes;\n  }\n\n  removeAgency(agencyId: string): void {\n    this.selectedAgencies = this.selectedAgencies.filter(id => id !== agencyId);\n    this.accessForm.patchValue({ agencies: this.selectedAgencies });\n  }\n\n  removeProcess(processId: string): void {\n    this.selectedProcesses = this.selectedProcesses.filter(id => id !== processId);\n    this.accessForm.patchValue({ processes: this.selectedProcesses });\n  }\n\n  /**\n   * Asignar todas las agencias disponibles\n   */\n  assignAllAgencies(): void {\n    this.selectedAgencies = this.allAgencies.map(agency => agency.Id);\n    this.accessForm.patchValue({ agencies: this.selectedAgencies });\n    \n    this.snackBar.open(`Todas las agencias (${this.allAgencies.length}) han sido asignadas`, 'Éxito', {\n      duration: 2000\n    });\n  }\n\n  /**\n   * Quitar todas las agencias asignadas\n   */\n  removeAllAgencies(): void {\n    this.selectedAgencies = [];\n    this.accessForm.patchValue({ agencies: this.selectedAgencies });\n    \n    this.snackBar.open('Todas las agencias han sido removidas', 'Info', {\n      duration: 2000\n    });\n  }\n\n  /**\n   * Asignar todos los procesos disponibles\n   */\n  assignAllProcesses(): void {\n    this.selectedProcesses = this.allProcesses.map(process => process.Id);\n    this.accessForm.patchValue({ processes: this.selectedProcesses });\n    \n    this.snackBar.open(`Todos los procesos (${this.allProcesses.length}) han sido asignados`, 'Éxito', {\n      duration: 2000\n    });\n  }\n\n  /**\n   * Quitar todos los procesos asignados\n   */\n  removeAllProcesses(): void {\n    this.selectedProcesses = [];\n    this.accessForm.patchValue({ processes: this.selectedProcesses });\n    \n    this.snackBar.open('Todos los procesos han sido removidos', 'Info', {\n      duration: 2000\n    });\n  }\n\n  getAgencyName(agencyId: string): string {\n    const agency = this.allAgencies.find(a => a.Id === agencyId);\n    return agency?.Name || `Agencia ${agencyId}`;\n  }\n\n  getProcessName(processId: string): string {\n    const process = this.allProcesses.find(p => p.Id === processId);\n    return process?.Name || `Proceso ${processId}`;\n  }\n\n  onSubmit(): void {\n    if (this.data.mode === 'view') {\n      this.onCancel();\n      return;\n    }\n\n    this.loading = true;\n\n    const accessData: UserAccess = {\n      userId: this.data.user.Id,\n      agencies: this.selectedAgencies,\n      processes: this.selectedProcesses\n    };\n\n    this.userAccessService.updateUserAccess(this.data.user.Id, accessData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Accesos actualizados exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al actualizar accesos', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al actualizar accesos', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  get dialogTitle(): string {\n    return `${this.data.mode === 'view' ? 'Ver' : 'Gestionar'} Accesos - ${this.data.user.Name}`;\n  }\n\n  get submitButtonText(): string {\n    return this.data.mode === 'view' ? 'Cerrar' : 'Guardar Cambios';\n  }\n\n  get isReadonly(): boolean {\n    return this.data.mode === 'view';\n  }\n}\n","<div class=\"p-0\">\n  <!-- Header del diálogo -->\n  <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\n    <h2 class=\"text-xl font-semibold text-gray-900\">\n      {{ dialogTitle }}\n    </h2>\n    <button mat-icon-button (click)=\"onCancel()\" matTooltip=\"Cerrar\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Loading Spinner -->\n  <div *ngIf=\"loading\" class=\"flex justify-center items-center py-8\">\n    <mat-spinner diameter=\"40\"></mat-spinner>\n  </div>\n\n  <!-- Contenido principal -->\n  <div *ngIf=\"!loading\" class=\"p-6\">\n    <!-- Información del usuario -->\n    <div class=\"bg-blue-50 p-4 rounded-lg mb-6\">\n      <h3 class=\"text-sm font-medium text-blue-900 mb-3\">Información del Usuario</h3>\n      <div class=\"grid grid-cols-2 gap-4 text-sm\">\n        <div>\n          <span class=\"text-blue-700 font-medium\">ID:</span>\n          <span class=\"ml-2 font-mono text-blue-900\">{{ data.user.Id }}</span>\n        </div>\n        <div>\n          <span class=\"text-blue-700 font-medium\">Usuario DMS:</span>\n          <span class=\"ml-2 text-blue-900\">{{ data.user.User }}</span>\n        </div>\n        <div class=\"col-span-2\" *ngIf=\"data.user.Email\">\n          <span class=\"text-blue-700 font-medium\">Correo Electrónico:</span>\n          <span class=\"ml-2 text-blue-900\">{{ data.user.Email }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Tabs para Agencias y Procesos -->\n    <mat-tab-group animationDuration=\"300ms\">\n      <!-- Tab de Agencias -->\n      <mat-tab label=\"Agencias Autorizadas\">\n        <div class=\"py-4\">\n          <!-- Selector de agencias (solo en modo edición) -->\n          <div *ngIf=\"!isReadonly\" class=\"mb-4\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n              <mat-label>Seleccionar Agencias</mat-label>\n              <mat-select \n                multiple \n                [value]=\"selectedAgencies\"\n                (selectionChange)=\"onAgencySelectionChange($event.value)\">\n                <mat-option *ngFor=\"let agency of allAgencies\" [value]=\"agency.Id\">\n                  {{ agency.Name }}\n                </mat-option>\n              </mat-select>\n              <mat-hint>Selecciona las agencias a las que el usuario tendrá acceso</mat-hint>\n            </mat-form-field>\n            \n            <!-- Botones de acción masiva para agencias -->\n            <div class=\"flex gap-2 mt-3\">\n              <button \n                type=\"button\" \n                mat-stroked-button \n                color=\"primary\" \n                (click)=\"assignAllAgencies()\"\n                class=\"flex items-center gap-2\"\n                [disabled]=\"selectedAgencies.length === allAgencies.length\">\n                <mat-icon>add_circle</mat-icon>\n                Asignar Todas\n              </button>\n              <button \n                type=\"button\" \n                mat-stroked-button \n                color=\"warn\" \n                (click)=\"removeAllAgencies()\"\n                class=\"flex items-center gap-2\"\n                [disabled]=\"selectedAgencies.length === 0\">\n                <mat-icon>remove_circle</mat-icon>\n                Quitar Todas\n              </button>\n            </div>\n          </div>\n\n          <!-- Lista de agencias seleccionadas -->\n          <div class=\"space-y-2\">\n            <h4 class=\"text-sm font-medium text-gray-700 mb-3\">\n              Agencias Asignadas ({{ selectedAgencies.length }})\n            </h4>\n            \n            <div *ngIf=\"selectedAgencies.length === 0\" class=\"text-center py-6 text-gray-500\">\n              <mat-icon class=\"text-gray-400 text-3xl mb-2\">business_center</mat-icon>\n              <p class=\"text-sm\">No hay agencias asignadas</p>\n            </div>\n\n            <!-- Chips compactos para las agencias -->\n            <div *ngIf=\"selectedAgencies.length > 0\" class=\"chips-container\">\n              <mat-chip-set>\n                <mat-chip \n                  *ngFor=\"let agencyId of selectedAgencies\" \n                  class=\"!text-xs !h-7 !px-2\"\n                  [removable]=\"!isReadonly\"\n                  (removed)=\"removeAgency(agencyId)\">\n                  <mat-icon matChipAvatar class=\"!text-sm !w-4 !h-4\">business</mat-icon>\n                  <span class=\"!text-xs\">{{ getAgencyName(agencyId) }}</span>\n                  <mat-icon \n                    *ngIf=\"!isReadonly\"\n                    matChipRemove \n                    class=\"!text-sm !w-4 !h-4\">\n                    cancel\n                  </mat-icon>\n                </mat-chip>\n              </mat-chip-set>\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n\n      <!-- Tab de Procesos -->\n      <mat-tab label=\"Procesos Autorizados\">\n        <div class=\"py-4\">\n          <!-- Selector de procesos (solo en modo edición) -->\n          <div *ngIf=\"!isReadonly\" class=\"mb-4\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n              <mat-label>Seleccionar Procesos</mat-label>\n              <mat-select \n                multiple \n                [value]=\"selectedProcesses\"\n                (selectionChange)=\"onProcessSelectionChange($event.value)\">\n                <mat-option *ngFor=\"let process of allProcesses\" [value]=\"process.Id\">\n                  {{ process.Name }}\n                </mat-option>\n              </mat-select>\n              <mat-hint>Selecciona los procesos que el usuario podrá gestionar</mat-hint>\n            </mat-form-field>\n            \n            <!-- Botones de acción masiva para procesos -->\n            <div class=\"flex gap-2 mt-3\">\n              <button \n                type=\"button\" \n                mat-stroked-button \n                color=\"primary\" \n                (click)=\"assignAllProcesses()\"\n                class=\"flex items-center gap-2\"\n                [disabled]=\"selectedProcesses.length === allProcesses.length\">\n                <mat-icon>add_circle</mat-icon>\n                Asignar Todos\n              </button>\n              <button \n                type=\"button\" \n                mat-stroked-button \n                color=\"warn\" \n                (click)=\"removeAllProcesses()\"\n                class=\"flex items-center gap-2\"\n                [disabled]=\"selectedProcesses.length === 0\">\n                <mat-icon>remove_circle</mat-icon>\n                Quitar Todos\n              </button>\n            </div>\n          </div>\n\n          <!-- Lista de procesos seleccionados -->\n          <div class=\"space-y-2\">\n            <h4 class=\"text-sm font-medium text-gray-700 mb-3\">\n              Procesos Asignados ({{ selectedProcesses.length }})\n            </h4>\n            \n            <div *ngIf=\"selectedProcesses.length === 0\" class=\"text-center py-6 text-gray-500\">\n              <mat-icon class=\"text-gray-400 text-3xl mb-2\">settings</mat-icon>\n              <p class=\"text-sm\">No hay procesos asignados</p>\n            </div>\n\n            <!-- Chips compactos para los procesos -->\n            <div *ngIf=\"selectedProcesses.length > 0\" class=\"chips-container\">\n              <mat-chip-set>\n                <mat-chip \n                  *ngFor=\"let processId of selectedProcesses\" \n                  class=\"!text-xs !h-7 !px-2\"\n                  [removable]=\"!isReadonly\"\n                  (removed)=\"removeProcess(processId)\">\n                  <mat-icon matChipAvatar class=\"!text-sm !w-4 !h-4\">settings</mat-icon>\n                  <span class=\"!text-xs\">{{ getProcessName(processId) }}</span>\n                  <mat-icon \n                    *ngIf=\"!isReadonly\"\n                    matChipRemove \n                    class=\"!text-sm !w-4 !h-4\">\n                    cancel\n                  </mat-icon>\n                </mat-chip>\n              </mat-chip-set>\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n    </mat-tab-group>\n\n    <!-- Botones de Acción -->\n    <div class=\"flex justify-end space-x-3 pt-6 border-t mt-6\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancel()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      <button \n        *ngIf=\"!isReadonly\"\n        type=\"button\" \n        mat-raised-button \n        color=\"primary\"\n        (click)=\"onSubmit()\"\n        [disabled]=\"loading\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\">save</mat-icon>\n        {{ submitButtonText }}\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { User, UserCreateRequest, UserUpdateRequest, UserRole, Agency } from '../../../../core/interfaces/user.interface';\nimport { UserService } from '../../../../core/services/user.service';\n\n@Component({\n  selector: 'app-user-edit-dialog',\n  templateUrl: './user-edit-dialog.component.html',\n  styleUrls: ['./user-edit-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatCheckboxModule\n  ]\n})\nexport class UserEditDialogComponent implements OnInit {\n  userForm!: FormGroup;\n  loading = false;\n  showPassword = false;\n  showConfirmPassword = false;\n  roles: UserRole[] = [];\n  agencies: Agency[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private dialogRef: MatDialogRef<UserEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { user: User; mode: 'create' | 'edit' },\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.loadRoles();\n    this.loadAgencies();\n    this.populateForm();\n  }\n\n  private initializeForm(): void {\n    this.userForm = this.fb.group({\n      Name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      User: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50), Validators.pattern(/^[a-zA-Z0-9_]+$/)]],\n      Mail: ['', [Validators.required, Validators.email, Validators.maxLength(100)]],\n      Pass: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(100)]],\n      ConfirmPassword: ['', [Validators.required]],\n      IdUserRol: ['', Validators.required],\n      DefaultAgency: ['', Validators.required],\n      Enabled: ['1'] // Por defecto activo\n    }, { validators: this.passwordMatchValidator() });\n\n    // En modo edición, la contraseña no es requerida\n    if (this.data.mode === 'edit') {\n      this.userForm.get('Pass')?.setValidators([Validators.minLength(6), Validators.maxLength(100)]);\n      this.userForm.get('ConfirmPassword')?.setValidators([]);\n    }\n  }\n\n  private passwordMatchValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get('Pass');\n      const confirmPassword = control.get('ConfirmPassword');\n      \n      if (password && confirmPassword && password.value !== confirmPassword.value) {\n        return { passwordMismatch: true };\n      }\n      \n      return null;\n    };\n  }\n\n  private populateForm(): void {\n    if (this.data.user && this.data.user.Id) {\n      this.userForm.patchValue({\n        Name: this.data.user.Name,\n        User: this.data.user.User,\n        Mail: this.data.user.Mail,\n        IdUserRol: this.data.user.IdUserRol,\n        DefaultAgency: this.data.user.DefaultAgency,\n        Enabled: this.data.user.Enabled || '1'\n      });\n      \n      // Limpiar campos de contraseña en edición\n      this.userForm.get('Pass')?.setValue('');\n      this.userForm.get('ConfirmPassword')?.setValue('');\n    }\n  }\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      this.loading = true;\n\n      if (this.data.mode === 'create') {\n        this.createUser();\n      } else {\n        this.updateUser();\n      }\n    }\n  }\n\n  private createUser(): void {\n    const userData: UserCreateRequest = {\n      Name: this.userForm.value.Name,\n      User: this.userForm.value.User,\n      Mail: this.userForm.value.Mail,\n      Pass: this.userForm.value.Pass,\n      IdUserRol: this.userForm.value.IdUserRol,\n      DefaultAgency: this.userForm.value.DefaultAgency,\n      Enabled: '1'\n    };\n\n    this.userService.createUser(userData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Usuario creado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al crear usuario', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al crear usuario', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  private updateUser(): void {\n    const userData: UserUpdateRequest = {\n      Id: this.data.user.Id,\n      Name: this.userForm.value.Name,\n      User: this.userForm.value.User,\n      Mail: this.userForm.value.Mail,\n      IdUserRol: this.userForm.value.IdUserRol,\n      DefaultAgency: this.userForm.value.DefaultAgency,\n      Enabled: this.userForm.value.Enabled\n    };\n\n    // Solo incluir contraseña si se proporcionó una nueva\n    if (this.userForm.value.Pass) {\n      userData.Pass = this.userForm.value.Pass;\n    }\n\n    this.userService.updateUser(this.data.user.Id, userData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Usuario actualizado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al actualizar usuario', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al actualizar usuario', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  toggleConfirmPasswordVisibility(): void {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n\n  /**\n   * Manejar cambio de estado del usuario\n   */\n  onStatusChange(checked: boolean): void {\n    const enabledValue = checked ? '1' : '0';\n    const previousValue = this.userForm.get('Enabled')?.value;\n    \n    // Solo mostrar mensaje si realmente cambió el valor\n    if (previousValue !== enabledValue) {\n      this.userForm.patchValue({ Enabled: enabledValue });\n      \n      // Mostrar mensaje informativo\n      const statusMessage = checked ? \n        'Usuario habilitado - Podrá acceder al sistema' : \n        'Usuario deshabilitado - No podrá acceder al sistema';\n      \n      this.snackBar.open(statusMessage, 'Info', { \n        duration: 3000,\n        panelClass: checked ? 'success-snackbar' : 'warning-snackbar'\n      });\n    }\n  }\n\n  /**\n   * Cambiar estado del usuario con confirmación\n   */\n  toggleUserStatus(): void {\n    const currentStatus = this.userForm.get('Enabled')?.value === '1';\n    const newStatus = !currentStatus;\n    const actionText = newStatus ? 'habilitar' : 'deshabilitar';\n    \n    // Confirmar la acción\n    if (confirm(`¿Estás seguro de que quieres ${actionText} al usuario \"${this.userForm.get('Name')?.value}\"?`)) {\n      this.onStatusChange(newStatus);\n    }\n  }\n\n  private loadRoles(): void {\n    this.userService.getUserRoles().subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.roles = response.data.roles || response.data;\n        }\n      },\n      error: (error) => {\n        // Error loading roles\n      }\n    });\n  }\n\n  private loadAgencies(): void {\n    this.userService.getAgencies().subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.agencies = response.data.agencies || response.data;\n        }\n      },\n      error: (error) => {\n        // Error loading agencies\n      }\n    });\n  }\n}\n","<div class=\"p-0\">\n  <!-- Header del diálogo -->\n  <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\n    <div class=\"flex items-center space-x-3\">\n      <h2 class=\"text-xl font-semibold text-gray-900\">\n        {{ data.mode === 'edit' ? 'Editar Usuario' : 'Nuevo Usuario' }}\n      </h2>\n      <!-- Indicador de estado (solo en modo edición) -->\n      <div *ngIf=\"data.mode === 'edit'\" class=\"flex items-center space-x-2\">\n        <div class=\"w-3 h-3 rounded-full\" \n             [ngClass]=\"(userForm.get('Enabled')?.value ?? '1') === '1' ? 'bg-green-500' : 'bg-red-500'\"></div>\n        <span class=\"text-sm font-medium\" \n              [ngClass]=\"(userForm.get('Enabled')?.value ?? '1') === '1' ? 'text-green-700' : 'text-red-700'\">\n          {{ (userForm.get('Enabled')?.value ?? '1') === '1' ? 'ACTIVO' : 'INACTIVO' }}\n        </span>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"onCancel()\" matTooltip=\"Cerrar\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Formulario -->\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6 p-6\">\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <!-- Nombre -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Nombre Completo</mat-label>\n        <input \n          matInput \n          formControlName=\"Name\" \n          placeholder=\"Ej: Juan Carlos Limonero\"\n          maxlength=\"100\">\n        <mat-hint>Nombre completo del usuario (máximo 100 caracteres)</mat-hint>\n        <mat-error *ngIf=\"userForm.get('Name')?.hasError('required')\">\n          El nombre es requerido\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('Name')?.hasError('minlength')\">\n          El nombre debe tener al menos 3 caracteres\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('Name')?.hasError('maxlength')\">\n          El nombre no puede exceder 100 caracteres\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Usuario -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Nombre de Usuario</mat-label>\n        <input \n          matInput \n          formControlName=\"User\" \n          placeholder=\"Ej: jclimonero\"\n          maxlength=\"50\">\n        <mat-hint>Nombre de usuario para acceso al sistema (máximo 50 caracteres)</mat-hint>\n        <mat-error *ngIf=\"userForm.get('User')?.hasError('required')\">\n          El nombre de usuario es requerido\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('User')?.hasError('minlength')\">\n          El nombre de usuario debe tener al menos 3 caracteres\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('User')?.hasError('pattern')\">\n          Solo se permiten letras, números y guiones bajos\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Email -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Correo Electrónico</mat-label>\n        <input \n          matInput \n          formControlName=\"Mail\" \n          type=\"email\"\n          placeholder=\"Ej: juan@empresa.com\"\n          maxlength=\"100\">\n        <mat-hint>Correo electrónico del usuario</mat-hint>\n        <mat-error *ngIf=\"userForm.get('Mail')?.hasError('required')\">\n          El correo electrónico es requerido\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('Mail')?.hasError('email')\">\n          Ingrese un correo electrónico válido\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Rol -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Rol de Usuario</mat-label>\n        <mat-select formControlName=\"IdUserRol\">\n          <mat-option *ngFor=\"let role of roles\" [value]=\"role.Id\">\n            {{ role.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-hint>Rol que determina los permisos del usuario</mat-hint>\n        <mat-error *ngIf=\"userForm.get('IdUserRol')?.hasError('required')\">\n          El rol es requerido\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Agencia -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Agencia Predeterminada</mat-label>\n        <mat-select formControlName=\"DefaultAgency\">\n          <mat-option *ngFor=\"let agency of agencies\" [value]=\"agency.Id\">\n            {{ agency.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-hint>Agencia predeterminada del usuario</mat-hint>\n        <mat-error *ngIf=\"userForm.get('DefaultAgency')?.hasError('required')\">\n          La agencia es requerida\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Estado del Usuario (solo en modo edición) -->\n      <div *ngIf=\"data.mode === 'edit'\" class=\"w-full\">\n        <label class=\"block text-sm font-medium text-gray-700 mb-2\">Estado del Usuario</label>\n        \n        <!-- Botón de acción rápida -->\n        <div class=\"mb-3\">\n          <button \n            type=\"button\"\n            mat-stroked-button\n            [color]=\"userForm.get('Enabled')?.value === '1' ? 'warn' : 'primary'\"\n            (click)=\"toggleUserStatus()\"\n            class=\"flex items-center space-x-2\">\n            <mat-icon>{{ userForm.get('Enabled')?.value === '1' ? 'block' : 'check_circle' }}</mat-icon>\n            <span>{{ userForm.get('Enabled')?.value === '1' ? 'Deshabilitar Usuario' : 'Habilitar Usuario' }}</span>\n          </button>\n        </div>\n\n        <!-- Checkbox y estado visual -->\n        <div class=\"flex items-center space-x-4\">\n          <mat-checkbox \n            formControlName=\"Enabled\" \n            [checked]=\"userForm.get('Enabled')?.value === '1'\"\n            (change)=\"onStatusChange($event.checked)\"\n            class=\"flex items-center\">\n            <span class=\"ml-2 text-sm text-gray-700\">Usuario Activo</span>\n          </mat-checkbox>\n          <div class=\"flex items-center space-x-2\">\n            <div class=\"w-3 h-3 rounded-full\" \n                 [ngClass]=\"userForm.get('Enabled')?.value === '1' ? 'bg-green-500' : 'bg-red-500'\"></div>\n            <span class=\"text-sm text-gray-600\">\n              {{ userForm.get('Enabled')?.value === '1' ? 'Activo' : 'Inactivo' }}\n            </span>\n          </div>\n        </div>\n        \n        <!-- Mensaje informativo -->\n        <p class=\"text-xs text-gray-500 mt-1\">\n          {{ userForm.get('Enabled')?.value === '1' ? \n             'El usuario puede acceder al sistema' : \n             'El usuario no puede acceder al sistema' }}\n        </p>\n\n        <!-- Alerta cuando el usuario está deshabilitado -->\n        <div *ngIf=\"userForm.get('Enabled')?.value === '0'\" \n             class=\"mt-3 p-3 bg-red-50 border border-red-200 rounded-md\">\n          <div class=\"flex items-center space-x-2\">\n            <mat-icon class=\"text-red-500 text-sm\">warning</mat-icon>\n            <span class=\"text-sm font-medium text-red-700\">Usuario Deshabilitado</span>\n          </div>\n          <p class=\"text-xs text-red-600 mt-1\">\n            Este usuario no podrá iniciar sesión en el sistema hasta que sea habilitado nuevamente.\n          </p>\n        </div>\n      </div>\n\n\n    </div>\n\n    <!-- Contraseñas -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <!-- Contraseña -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>{{ data.mode === 'edit' ? 'Nueva Contraseña (opcional)' : 'Contraseña' }}</mat-label>\n        <input \n          matInput \n          formControlName=\"Pass\" \n          [type]=\"showPassword ? 'text' : 'password'\"\n          placeholder=\"Ingrese la contraseña\"\n          maxlength=\"100\">\n        <button \n          type=\"button\"\n          mat-icon-button \n          matSuffix \n          (click)=\"togglePasswordVisibility()\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"showPassword\">\n          <mat-icon>{{showPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-hint>{{ data.mode === 'edit' ? 'Deje en blanco para mantener la contraseña actual' : 'Mínimo 6 caracteres' }}</mat-hint>\n        <mat-error *ngIf=\"userForm.get('Pass')?.hasError('required') && data.mode === 'create'\">\n          La contraseña es requerida\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('Pass')?.hasError('minlength')\">\n          La contraseña debe tener al menos 6 caracteres\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Confirmar Contraseña -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>{{ data.mode === 'edit' ? 'Confirmar Nueva Contraseña' : 'Confirmar Contraseña' }}</mat-label>\n        <input \n          matInput \n          formControlName=\"ConfirmPassword\" \n          [type]=\"showConfirmPassword ? 'text' : 'password'\"\n          placeholder=\"Confirme la contraseña\"\n          maxlength=\"100\">\n        <button \n          type=\"button\"\n          mat-icon-button \n          matSuffix \n          (click)=\"toggleConfirmPasswordVisibility()\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"showConfirmPassword\">\n          <mat-icon>{{showConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-hint>Confirme la contraseña ingresada</mat-hint>\n        <mat-error *ngIf=\"userForm.get('ConfirmPassword')?.hasError('required') && data.mode === 'create'\">\n          La confirmación de contraseña es requerida\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- Error de contraseñas no coinciden -->\n    <div *ngIf=\"userForm.hasError('passwordMismatch')\" class=\"text-red-600 text-sm\">\n      Las contraseñas no coinciden\n    </div>\n\n    <!-- Información adicional (solo lectura en modo edición) -->\n    <div *ngIf=\"data.mode === 'edit' && data.user.Id\" class=\"bg-gray-50 p-4 rounded-lg mt-6\">\n      <h3 class=\"text-sm font-medium text-gray-700 mb-3\">Información del Sistema</h3>\n      <div class=\"grid grid-cols-2 gap-6 text-sm\">\n        <div class=\"space-y-2\">\n          <div>\n            <span class=\"text-gray-500 font-medium\">ID:</span>\n            <span class=\"ml-2 font-mono\">{{ data.user.Id }}</span>\n          </div>\n          <div>\n            <span class=\"text-gray-500 font-medium\">Fecha Registro:</span>\n            <span class=\"ml-2\">{{ data.user.RegistrationDate || 'N/A' }}</span>\n          </div>\n        </div>\n        <div class=\"space-y-2\">\n          <div>\n            <span class=\"text-gray-500 font-medium\">Último Usuario:</span>\n            <span class=\"ml-2\">{{ data.user.LastUserUpdateName || 'N/A' }}</span>\n          </div>\n          <div>\n            <span class=\"text-gray-500 font-medium\">Última Actualización:</span>\n            <span class=\"ml-2\">{{ data.user.UpdateDate || 'N/A' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"flex justify-end space-x-3 pt-6 mt-6 border-t\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancel()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"primary\"\n        [disabled]=\"userForm.invalid || loading\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\">{{ data.mode === 'edit' ? 'save' : 'add' }}</mat-icon>\n        {{ data.mode === 'edit' ? 'Guardar Cambios' : 'Crear Usuario' }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { User, UserResponse, UserRole, UserRoleResponse, Agency, AgencyResponse } from '../../../core/interfaces/user.interface';\nimport { UserService } from '../../../core/services/user.service';\nimport { UserEditDialogComponent } from './user-edit-dialog/user-edit-dialog.component';\nimport { UserAccessDialogComponent } from './user-access-dialog/user-access-dialog.component';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatChipsModule\n  ]\n})\nexport class UsuariosComponent implements OnInit, AfterViewInit {\n  users: User[] = [];\n  roles: UserRole[] = [];\n  agencies: Agency[] = [];\n  dataSource = new MatTableDataSource<User>([]);\n  displayedColumns: string[] = ['Id', 'Name', 'User', 'Mail', 'IdUserRol', 'DefaultAgency', 'AssignedAgencies', 'Status', 'acciones'];\n  loading = false;\n  loadingCatalogs = false;\n  searchTerm = '';\n  roleFilter = '';\n  agencyFilter = '';\n  assignedAgencyFilter = '';\n  statusFilter = '';\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private userService: UserService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.loadUsers();\n    this.loadRoles();\n    this.loadAgencies();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // Configurar filtro personalizado\n    this.dataSource.filterPredicate = (data: User, filter: string) => {\n      const searchTerm = filter.toLowerCase();\n      return data.Name.toLowerCase().includes(searchTerm) ||\n             data.User.toLowerCase().includes(searchTerm) ||\n             data.Mail.toLowerCase().includes(searchTerm);\n    };\n  }\n\n  loadUsers(): void {\n    this.loading = true;\n    this.userService.getUsers().subscribe({\n      next: (response: UserResponse) => {\n        if (response.success) {\n          this.users = response.data.users;\n          // Obtener agencias asignadas para cada usuario\n          this.loadUserAgencies();\n        } else {\n          this.snackBar.open(response.message || 'Error al cargar usuarios', 'Error', {\n            duration: 3000\n          });\n          this.loading = false;\n        }\n      },\n      error: (error) => {\n        this.snackBar.open('Error al cargar usuarios', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  loadUserAgencies(): void {\n    let usersProcessed = 0;\n    const totalUsers = this.users.length;\n    \n    if (totalUsers === 0) {\n      this.dataSource.data = this.users;\n      this.applyFilter();\n      this.loading = false;\n      return;\n    }\n\n    this.users.forEach((user, index) => {\n      this.userService.getUserAgencies(user.Id).subscribe({\n        next: (response: any) => {\n          if (response.success) {\n            user.AssignedAgencies = response.data.agencies;\n            user.AssignedAgencyNames = response.data.agencies_details.map((agency: any) => agency.AgencyName);\n          } else {\n            user.AssignedAgencies = [];\n            user.AssignedAgencyNames = [];\n          }\n          \n          usersProcessed++;\n          \n          // Cuando se han procesado todos los usuarios, actualizar la tabla\n          if (usersProcessed === totalUsers) {\n            this.dataSource.data = this.users;\n            this.applyFilter();\n            this.loading = false;\n          }\n        },\n        error: (error) => {\n          console.warn(`Error al cargar agencias para usuario ${user.Id}:`, error);\n          user.AssignedAgencies = [];\n          user.AssignedAgencyNames = [];\n          usersProcessed++;\n          \n          if (usersProcessed === totalUsers) {\n            this.dataSource.data = this.users;\n            this.applyFilter();\n            this.loading = false;\n          }\n        }\n      });\n    });\n  }\n\n  loadRoles(): void {\n    this.loadingCatalogs = true;\n    this.userService.getUserRoles().subscribe({\n      next: (response: UserRoleResponse) => {\n        if (response.success) {\n          this.roles = response.data.roles;\n        } else {\n          this.snackBar.open(response.message || 'Error al cargar roles', 'Error', {\n            duration: 3000\n          });\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error) => {\n        this.snackBar.open('Error al cargar roles', 'Error', {\n          duration: 3000\n        });\n        this.checkCatalogsLoaded();\n      }\n    });\n  }\n\n  loadAgencies(): void {\n    this.loadingCatalogs = true;\n    this.userService.getAgencies().subscribe({\n      next: (response: AgencyResponse) => {\n        if (response.success) {\n          this.agencies = response.data.agencies.filter(agency => agency.Enabled === '1');\n        } else {\n          this.snackBar.open(response.message || 'Error al cargar agencias', 'Error', {\n            duration: 3000\n          });\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error) => {\n        this.snackBar.open('Error al cargar agencias', 'Error', {\n          duration: 3000\n        });\n        this.checkCatalogsLoaded();\n      }\n    });\n  }\n\n  private checkCatalogsLoaded(): void {\n    // Verificar si todos los catálogos han sido procesados\n    const totalCatalogs = 2; // roles y agencias\n    const catalogsProcessed = (this.roles.length >= 0 ? 1 : 0) + \n                             (this.agencies.length >= 0 ? 1 : 0);\n    \n    if (catalogsProcessed >= totalCatalogs) {\n      this.loadingCatalogs = false;\n      console.log('✅ Catálogos procesados - Roles:', this.roles.length, \n                  'Agencias:', this.agencies.length);\n      \n      // Si no hay catálogos, mostrar mensaje de error\n      if (this.roles.length === 0 && this.agencies.length === 0) {\n        this.snackBar.open('No se pudieron cargar los catálogos. Verifica la conexión con el backend.', 'Error', { duration: 5000 });\n      }\n    }\n  }\n\n  applyFilter(): void {\n    const filterValue = this.searchTerm.trim();\n    \n    // Aplicar filtros\n    let filteredData = this.users;\n    \n    // Filtro de rol\n    if (this.roleFilter !== '') {\n      filteredData = filteredData.filter(user => user.IdUserRol === this.roleFilter);\n    }\n    \n    // Filtro de agencia predeterminada\n    if (this.agencyFilter !== '') {\n      filteredData = filteredData.filter(user => user.DefaultAgency === this.agencyFilter);\n    }\n    \n    // Filtro de agencias asignadas\n    if (this.assignedAgencyFilter !== '') {\n      filteredData = filteredData.filter(user => \n        user.AssignedAgencies && \n        Array.isArray(user.AssignedAgencies) && \n        user.AssignedAgencies.includes(this.assignedAgencyFilter)\n      );\n    }\n    \n    // Filtro de estado\n    if (this.statusFilter !== '') {\n      filteredData = filteredData.filter(user => user.Enabled === this.statusFilter);\n    }\n    \n    // Filtro de búsqueda de texto\n    if (filterValue !== '') {\n      filteredData = filteredData.filter(user => \n        user.Name.toLowerCase().includes(filterValue.toLowerCase()) ||\n        user.User.toLowerCase().includes(filterValue.toLowerCase()) ||\n        user.Mail.toLowerCase().includes(filterValue.toLowerCase())\n      );\n    }\n    \n    this.dataSource.data = filteredData;\n    \n    // Reset paginator to first page\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  refreshData(): void {\n    this.loadUsers();\n  }\n\n  clearFilters(): void {\n    this.searchTerm = '';\n    this.roleFilter = '';\n    this.agencyFilter = '';\n    this.assignedAgencyFilter = '';\n    this.statusFilter = '';\n    this.applyFilter();\n  }\n\n  openCreateDialog(): void {\n    const dialogData = {\n      user: {} as User,\n      mode: 'create' as const\n    };\n\n    try {\n      const dialogRef = this.dialog.open(UserEditDialogComponent, {\n        width: '700px',\n        data: dialogData,\n        disableClose: false\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.refreshData();\n        }\n      });\n    } catch (error) {\n      // Error opening dialog\n    }\n  }\n\n  openEditDialog(user: User): void {\n    const dialogData = {\n      user: user,\n      mode: 'edit'\n    };\n\n    const dialogRef = this.dialog.open(UserEditDialogComponent, {\n      width: '700px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  openAccessDialog(user: User): void {\n    const dialogData = {\n      user: {\n        Id: user.Id!,\n        Name: user.Name,\n        User: user.User,\n        Email: user.Mail\n      },\n      mode: 'edit'\n    };\n\n    const dialogRef = this.dialog.open(UserAccessDialogComponent, {\n      width: '900px',\n      maxWidth: '95vw',\n      data: dialogData,\n      disableClose: false\n    });\n\n          dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          // Accesos actualizados para usuario\n        }\n      });\n  }\n\n  deleteUser(user: User): void {\n    const confirmDelete = confirm(`¿Estás seguro de que quieres eliminar el usuario \"${user.Name || user.User}\"?`);\n    \n    if (confirmDelete) {\n      this.userService.deleteUser(user.Id).subscribe({\n        next: (response) => {\n          if (response && response.success) {\n            this.users = this.users.filter(u => u.Id !== user.Id);\n            this.applyFilter();\n            this.snackBar.open('Usuario eliminado exitosamente', 'Éxito', {\n              duration: 2000\n            });\n          } else {\n            this.snackBar.open(response?.message || 'Error al eliminar usuario', 'Error', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          this.snackBar.open(`Error al eliminar usuario: ${error.message || 'Error desconocido'}`, 'Error', {\n            duration: 5000\n          });\n        }\n      });\n    }\n  }\n\n  getRoleColor(roleId: string): string {\n    const roleColors: { [key: string]: string } = {\n      '1': 'bg-blue-100 text-blue-800',\n      '2': 'bg-green-100 text-green-800',\n      '3': 'bg-yellow-100 text-yellow-800',\n      '4': 'bg-purple-100 text-purple-800',\n      '5': 'bg-red-100 text-red-800'\n    };\n    return roleColors[roleId] || 'bg-gray-100 text-gray-800';\n  }\n\n  getRoleName(roleId: string): string {\n    const role = this.roles.find(r => r.Id === roleId);\n    return role ? role.Name : 'Desconocido';\n  }\n\n  getAgencyName(agencyId: string): string {\n    const agency = this.agencies.find(a => a.Id === agencyId);\n    return agency ? agency.Name : (agencyId === '0' ? 'Sin agencia' : `Agencia ${agencyId}`);\n  }\n\n  getUserStatus(enabled: string): { text: string; class: string; icon: string } {\n    if (enabled === '1') {\n      return {\n        text: 'Activo',\n        class: 'bg-green-100 text-green-800 border-green-200',\n        icon: 'check_circle'\n      };\n    } else {\n      return {\n        text: 'Inactivo',\n        class: 'bg-red-100 text-red-800 border-red-200',\n        icon: 'cancel'\n      };\n    }\n  }\n\n\n\n  getPageRange(): string {\n    if (!this.paginator || this.dataSource.filteredData.length === 0) {\n      return '0-0';\n    }\n    \n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize + 1;\n    const endIndex = Math.min(startIndex + this.paginator.pageSize - 1, this.dataSource.filteredData.length);\n    \n    return `${startIndex}-${endIndex}`;\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900\">Gestión de Usuarios</h1>\n      <p class=\"text-gray-600 mt-1\">Administra los usuarios del sistema</p>\n    </div>\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"openCreateDialog()\"\n      class=\"flex items-center gap-2\">\n      <mat-icon>add_circle</mat-icon>\n      Nuevo Usuario\n    </button>\n  </div>\n\n  <!-- Filtros -->\n  <div class=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <h3 class=\"text-lg font-medium text-gray-900\">Filtros de Búsqueda</h3>\n      \n      <!-- Botones de acción -->\n      <div class=\"flex items-center gap-3\">\n        <!-- Botón de Limpiar Filtros -->\n        <button \n          mat-stroked-button \n          color=\"warn\" \n          (click)=\"clearFilters()\"\n          [disabled]=\"!searchTerm && !roleFilter && !agencyFilter && !assignedAgencyFilter && !statusFilter\"\n          matTooltip=\"Limpiar todos los filtros\"\n          class=\"flex items-center gap-2\">\n          <mat-icon>clear_all</mat-icon>\n          Limpiar Selección\n        </button>\n        \n        <!-- Botón de Reload -->\n        <button \n          mat-stroked-button \n          color=\"accent\" \n          (click)=\"refreshData()\"\n          [disabled]=\"loading\"\n          matTooltip=\"Recargar datos\"\n          class=\"flex items-center gap-2\">\n          <mat-icon [class.animate-spin]=\"loading\">refresh</mat-icon>\n          Recargar\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n      <!-- Búsqueda por texto -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Buscar usuarios</mat-label>\n        <input \n          matInput \n          [(ngModel)]=\"searchTerm\" \n          (ngModelChange)=\"applyFilter()\"\n          placeholder=\"Buscar por nombre, usuario o email...\"\n          maxlength=\"100\"\n          [disabled]=\"loadingCatalogs\">\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n        <mat-icon *ngIf=\"!loadingCatalogs\" matSuffix>🔍</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por rol -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Rol</mat-label>\n        <mat-select [(ngModel)]=\"roleFilter\" (ngModelChange)=\"applyFilter()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Todos los roles</mat-option>\n          <mat-option *ngFor=\"let role of roles\" [value]=\"role.Id\">\n            {{ role.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por agencia -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Agencia Predeterminada</mat-label>\n        <mat-select [(ngModel)]=\"agencyFilter\" (ngModelChange)=\"applyFilter()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Todas las agencias</mat-option>\n          <mat-option *ngFor=\"let agency of agencies\" [value]=\"agency.Id\">\n            {{ agency.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por agencias asignadas -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Agencias Asignadas</mat-label>\n        <mat-select [(ngModel)]=\"assignedAgencyFilter\" (ngModelChange)=\"applyFilter()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Todas las agencias asignadas</mat-option>\n          <mat-option *ngFor=\"let agency of agencies\" [value]=\"agency.Id\">\n            {{ agency.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por estado -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Estado</mat-label>\n        <mat-select [(ngModel)]=\"statusFilter\" (ngModelChange)=\"applyFilter()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Todos los estados</mat-option>\n          <mat-option value=\"1\">Activo</mat-option>\n          <mat-option value=\"0\">Inactivo</mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n    </div>\n\n    <!-- Mensaje de estado de catálogos -->\n    <div *ngIf=\"loadingCatalogs\" class=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n      <div class=\"flex items-center gap-2 text-blue-700\">\n        <mat-spinner diameter=\"20\"></mat-spinner>\n        <span class=\"text-sm font-medium\">Cargando catálogos...</span>\n      </div>\n    </div>\n\n    <div *ngIf=\"!loadingCatalogs && (roles.length === 0 || agencies.length === 0)\" \n         class=\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n      <div class=\"flex items-center gap-2 text-yellow-700\">\n        <mat-icon>warning</mat-icon>\n        <span class=\"text-sm\">Algunos catálogos no se pudieron cargar. Verifica la conexión.</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Tabla -->\n  <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\" style=\"line-height: 1;\">\n      <!-- Columna ID -->\n      <ng-container matColumnDef=\"Id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-16 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          ID\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-xs font-mono text-gray-600 py-0\">\n          {{ user.Id }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Nombre -->\n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Nombre\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-xs py-0\">\n          {{ user.Name }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Usuario -->\n      <ng-container matColumnDef=\"User\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Usuario DMS\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-xs py-0 font-mono\">\n          {{ user.User }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Email -->\n      <ng-container matColumnDef=\"Mail\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Email\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-xs py-0\">\n          {{ user.Mail }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Rol -->\n      <ng-container matColumnDef=\"IdUserRol\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Rol\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-left py-0\">\n          <span class=\"text-xs\">\n            {{ getRoleName(user.IdUserRol) }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Columna Agencia -->\n      <ng-container matColumnDef=\"DefaultAgency\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Agencia Predeterminada\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-xs py-0\">\n          {{ user.AgencyName || getAgencyName(user.DefaultAgency) }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Agencias Asignadas -->\n      <ng-container matColumnDef=\"AssignedAgencies\">\n        <th mat-header-cell *matHeaderCellDef class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Agencias Asignadas\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-xs py-0\">\n          <div class=\"flex justify-center items-center\">\n            <span *ngIf=\"!user.AssignedAgencyNames || user.AssignedAgencyNames.length === 0\" class=\"text-gray-400 text-xs italic\">\n              Sin agencias\n            </span>\n            <div *ngIf=\"user.AssignedAgencyNames && user.AssignedAgencyNames.length > 0\" \n                 class=\"relative group\">\n              <div class=\"flex items-center gap-1 px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium border border-blue-200 hover:bg-blue-200 transition-colors\">\n                <mat-icon class=\"!text-xs !w-3 !h-3 text-blue-600\">business</mat-icon>\n                <span>{{ user.AssignedAgencyNames.length }} agencia{{ user.AssignedAgencyNames.length !== 1 ? 's' : '' }}</span>\n              </div>\n              <!-- Tooltip con lista de agencias -->\n              <div class=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-md opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                <div class=\"text-center\">\n                  <div class=\"font-medium border-b border-gray-700 pb-1 mb-1\">Agencias asignadas:</div>\n                  <div class=\"text-gray-200\">{{ user.AssignedAgencyNames.join(', ') }}</div>\n                </div>\n                <!-- Flecha del tooltip -->\n                <div class=\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n              </div>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Columna Estado -->\n      <ng-container matColumnDef=\"Status\">\n        <th mat-header-cell *matHeaderCellDef class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Estado\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-xs py-0\">\n          <div class=\"flex justify-center items-center\">\n            <div class=\"flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium border\"\n                 [ngClass]=\"getUserStatus(user.Enabled).class\">\n              <mat-icon class=\"!text-xs !w-3 !h-3\" \n                       [ngClass]=\"getUserStatus(user.Enabled).icon === 'check_circle' ? 'text-green-600' : 'text-red-600'\">\n                {{ getUserStatus(user.Enabled).icon }}\n              </mat-icon>\n              <span>{{ getUserStatus(user.Enabled).text }}</span>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Columna Acciones -->\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef class=\"w-40 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Acciones\n        </th>\n        <td mat-cell *matCellDef=\"let user\" class=\"text-center py-0\">\n          <div class=\"flex gap-0.5 justify-center items-center\">\n            <button\n              (click)=\"openEditDialog(user)\"\n              mat-icon-button\n              color=\"primary\"\n              matTooltip=\"Editar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">edit</mat-icon>\n            </button>\n            <button\n              (click)=\"openAccessDialog(user)\"\n              mat-icon-button\n              color=\"accent\"\n              matTooltip=\"Gestionar Accesos\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">security</mat-icon>\n            </button>\n            <button\n              (click)=\"deleteUser(user)\"\n              mat-icon-button\n              color=\"warn\"\n              matTooltip=\"Eliminar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">delete</mat-icon>\n            </button>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"!min-h-0 !h-8\"></tr>\n    </table>\n\n    <!-- Loading spinner -->\n    <div *ngIf=\"loading\" class=\"flex justify-center items-center py-8\">\n      <mat-spinner diameter=\"40\"></mat-spinner>\n    </div>\n\n    <!-- Paginación -->\n    <mat-paginator \n      [pageSizeOptions]=\"[10, 25, 50, 100]\"\n      [pageSize]=\"10\"\n      [length]=\"dataSource.filteredData.length\"\n      showFirstLastButtons\n      class=\"border-t\">\n    </mat-paginator>\n  </div>\n\n  <!-- Contador de resultados -->\n  <div class=\"mt-4 text-sm text-gray-600 text-center\">\n    Mostrando {{ getPageRange() }} de {{ dataSource.filteredData.length }} usuarios visibles ({{ users.length }} total)\n  </div>\n</div>\n"],"names":["UserAccessService","constructor","http","apiBaseService","API_URL","getUserAccess","userId","get","buildApiUrl","updateUserAccess","access","put","getActiveAgencies","getActiveProcesses","getAllAgencies","getAllProcesses","getUserAgencies","getUserProcesses","assignAgenciesToUser","agencyIds","post","agencies","assignProcessesToUser","processIds","processes","removeAgencyFromUser","agencyId","delete","removeProcessFromUser","processId","_","i0","ɵɵinject","i1","HttpClient","i2","ApiBaseService","_2","factory","ɵfac","providedIn","UserService","getUsers","limit","params","getAllUsers","getUsersByStatus","enabled","getUserById","id","createUser","user","updateUser","deleteUser","toggleStatus","patch","changePassword","newPassword","new_password","resetPassword","searchUsers","query","getStats","checkUsernameAvailability","username","checkEmailAvailability","email","getUserRoles","getAgencies","getUsersByAgency","CommonModule","ReactiveFormsModule","MAT_DIALOG_DATA","MatDialogModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatSelectModule","MatProgressSpinnerModule","MatTooltipModule","MatChipsModule","MatListModule","MatTabsModule","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r2","data","Email","ɵɵproperty","agency_r11","Id","ɵɵtextInterpolate1","Name","ɵɵlistener","UserAccessDialogComponent_div_8_div_19_Template_mat_select_selectionChange_4_listener","$event","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","onAgencySelectionChange","value","ɵɵtemplate","UserAccessDialogComponent_div_8_div_19_mat_option_5_Template","UserAccessDialogComponent_div_8_div_19_Template_button_click_9_listener","ctx_r14","assignAllAgencies","UserAccessDialogComponent_div_8_div_19_Template_button_click_13_listener","ctx_r15","removeAllAgencies","ctx_r3","selectedAgencies","allAgencies","length","UserAccessDialogComponent_div_8_div_24_mat_chip_2_Template_mat_chip_removed_0_listener","restoredCtx","_r20","agencyId_r17","$implicit","ctx_r19","removeAgency","UserAccessDialogComponent_div_8_div_24_mat_chip_2_mat_icon_5_Template","ctx_r16","isReadonly","getAgencyName","UserAccessDialogComponent_div_8_div_24_mat_chip_2_Template","ctx_r5","process_r22","UserAccessDialogComponent_div_8_div_27_Template_mat_select_selectionChange_4_listener","_r24","ctx_r23","onProcessSelectionChange","UserAccessDialogComponent_div_8_div_27_mat_option_5_Template","UserAccessDialogComponent_div_8_div_27_Template_button_click_9_listener","ctx_r25","assignAllProcesses","UserAccessDialogComponent_div_8_div_27_Template_button_click_13_listener","ctx_r26","removeAllProcesses","ctx_r6","selectedProcesses","allProcesses","UserAccessDialogComponent_div_8_div_32_mat_chip_2_Template_mat_chip_removed_0_listener","_r31","processId_r28","ctx_r30","removeProcess","UserAccessDialogComponent_div_8_div_32_mat_chip_2_mat_icon_5_Template","ctx_r27","getProcessName","UserAccessDialogComponent_div_8_div_32_mat_chip_2_Template","ctx_r8","UserAccessDialogComponent_div_8_button_36_Template_button_click_0_listener","_r35","ctx_r34","onSubmit","UserAccessDialogComponent_div_8_button_36_mat_spinner_1_Template","UserAccessDialogComponent_div_8_button_36_mat_icon_2_Template","ctx_r9","loading","submitButtonText","UserAccessDialogComponent_div_8_div_15_Template","UserAccessDialogComponent_div_8_div_19_Template","UserAccessDialogComponent_div_8_div_23_Template","UserAccessDialogComponent_div_8_div_24_Template","UserAccessDialogComponent_div_8_div_27_Template","UserAccessDialogComponent_div_8_div_31_Template","UserAccessDialogComponent_div_8_div_32_Template","UserAccessDialogComponent_div_8_Template_button_click_34_listener","_r37","ctx_r36","onCancel","UserAccessDialogComponent_div_8_button_36_Template","ctx_r1","User","UserAccessDialogComponent","fb","userAccessService","dialogRef","snackBar","userAgencies","userProcesses","ngOnInit","initializeForm","loadData","accessForm","group","Promise","all","toPromise","then","agenciesResponse","processesResponse","userAccessResponse","success","patchValue","catch","error","open","duration","filter","map","agency","process","find","a","p","mode","accessData","subscribe","next","response","close","message","dialogTitle","ɵɵdirectiveInject","FormBuilder","i3","MatDialogRef","i4","MatSnackBar","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","UserAccessDialogComponent_Template","rf","ctx","UserAccessDialogComponent_Template_button_click_4_listener","UserAccessDialogComponent_div_7_Template","UserAccessDialogComponent_div_8_Template","i5","NgForOf","NgIf","i6","MatButton","MatIconButton","i7","MatIcon","i8","MatFormField","MatLabel","MatHint","i9","MatSelect","i10","MatOption","i11","MatProgressSpinner","i12","MatTooltip","i13","MatChip","MatChipAvatar","MatChipRemove","MatChipSet","i14","MatTab","MatTabGroup","styles","Validators","MatInputModule","MatCheckboxModule","tmp_0_0","ctx_r0","userForm","undefined","tmp_1_0","tmp_2_0","role_r21","agency_r22","UserEditDialogComponent_div_53_Template_button_click_4_listener","_r25","ctx_r24","toggleUserStatus","UserEditDialogComponent_div_53_Template_mat_checkbox_change_10_listener","onStatusChange","checked","UserEditDialogComponent_div_53_div_19_Template","ctx_r13","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","ctx_r18","RegistrationDate","LastUserUpdateName","UpdateDate","ctx_r20","UserEditDialogComponent","userService","showPassword","showConfirmPassword","roles","loadRoles","loadAgencies","populateForm","required","minLength","maxLength","pattern","Mail","Pass","ConfirmPassword","IdUserRol","DefaultAgency","Enabled","validators","passwordMatchValidator","setValidators","control","password","confirmPassword","passwordMismatch","setValue","valid","userData","togglePasswordVisibility","toggleConfirmPasswordVisibility","enabledValue","previousValue","statusMessage","panelClass","currentStatus","newStatus","actionText","confirm","UserEditDialogComponent_Template","UserEditDialogComponent_div_5_Template","UserEditDialogComponent_Template_button_click_6_listener","UserEditDialogComponent_Template_form_ngSubmit_9_listener","UserEditDialogComponent_mat_error_17_Template","UserEditDialogComponent_mat_error_18_Template","UserEditDialogComponent_mat_error_19_Template","UserEditDialogComponent_mat_error_26_Template","UserEditDialogComponent_mat_error_27_Template","UserEditDialogComponent_mat_error_28_Template","UserEditDialogComponent_mat_error_35_Template","UserEditDialogComponent_mat_error_36_Template","UserEditDialogComponent_mat_option_41_Template","UserEditDialogComponent_mat_error_44_Template","UserEditDialogComponent_mat_option_49_Template","UserEditDialogComponent_mat_error_52_Template","UserEditDialogComponent_div_53_Template","UserEditDialogComponent_Template_button_click_59_listener","UserEditDialogComponent_mat_error_64_Template","UserEditDialogComponent_mat_error_65_Template","UserEditDialogComponent_Template_button_click_70_listener","UserEditDialogComponent_mat_error_75_Template","UserEditDialogComponent_div_76_Template","UserEditDialogComponent_div_77_Template","UserEditDialogComponent_Template_button_click_79_listener","UserEditDialogComponent_mat_spinner_82_Template","UserEditDialogComponent_mat_icon_83_Template","hasError","tmp_8_0","tmp_9_0","tmp_10_0","tmp_12_0","tmp_14_0","ɵɵattribute","tmp_22_0","tmp_23_0","tmp_29_0","invalid","NgClass","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","MatError","MatSuffix","MatInput","MatCheckbox","FormsModule","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","role_r32","agency_r33","agency_r34","user_r35","user_r36","user_r37","user_r38","getRoleName","user_r39","user_r40","AgencyName","ctx_r22","ɵɵtextInterpolate2","user_r41","AssignedAgencyNames","join","UsuariosComponent_td_90_span_2_Template","UsuariosComponent_td_90_div_3_Template","getUserStatus","user_r45","class","icon","text","UsuariosComponent_td_96_Template_button_click_2_listener","_r48","user_r46","ctx_r47","openEditDialog","UsuariosComponent_td_96_Template_button_click_5_listener","ctx_r49","openAccessDialog","UsuariosComponent_td_96_Template_button_click_8_listener","ctx_r50","UsuariosComponent","dialog","users","dataSource","displayedColumns","loadingCatalogs","searchTerm","roleFilter","agencyFilter","assignedAgencyFilter","statusFilter","loadUsers","ngAfterViewInit","paginator","sort","filterPredicate","toLowerCase","includes","loadUserAgencies","usersProcessed","totalUsers","applyFilter","forEach","index","AssignedAgencies","agencies_details","console","warn","checkCatalogsLoaded","totalCatalogs","catalogsProcessed","log","filterValue","trim","filteredData","Array","isArray","firstPage","refreshData","clearFilters","openCreateDialog","dialogData","width","disableClose","afterClosed","result","maxWidth","confirmDelete","u","getRoleColor","roleId","roleColors","role","r","getPageRange","startIndex","pageIndex","pageSize","endIndex","Math","min","MatDialog","viewQuery","UsuariosComponent_Query","UsuariosComponent_Template_button_click_7_listener","UsuariosComponent_Template_button_click_16_listener","UsuariosComponent_Template_button_click_20_listener","UsuariosComponent_Template_input_ngModelChange_28_listener","UsuariosComponent_mat_icon_29_Template","UsuariosComponent_mat_icon_30_Template","UsuariosComponent_Template_mat_select_ngModelChange_34_listener","UsuariosComponent_mat_option_37_Template","UsuariosComponent_mat_icon_38_Template","UsuariosComponent_Template_mat_select_ngModelChange_42_listener","UsuariosComponent_mat_option_45_Template","UsuariosComponent_mat_icon_46_Template","UsuariosComponent_Template_mat_select_ngModelChange_50_listener","UsuariosComponent_mat_option_53_Template","UsuariosComponent_mat_icon_54_Template","UsuariosComponent_Template_mat_select_ngModelChange_58_listener","UsuariosComponent_mat_icon_65_Template","UsuariosComponent_div_66_Template","UsuariosComponent_div_67_Template","ɵɵelementContainerStart","UsuariosComponent_th_71_Template","UsuariosComponent_td_72_Template","ɵɵelementContainerEnd","UsuariosComponent_th_74_Template","UsuariosComponent_td_75_Template","UsuariosComponent_th_77_Template","UsuariosComponent_td_78_Template","UsuariosComponent_th_80_Template","UsuariosComponent_td_81_Template","UsuariosComponent_th_83_Template","UsuariosComponent_td_84_Template","UsuariosComponent_th_86_Template","UsuariosComponent_td_87_Template","UsuariosComponent_th_89_Template","UsuariosComponent_td_90_Template","UsuariosComponent_th_92_Template","UsuariosComponent_td_93_Template","UsuariosComponent_th_95_Template","UsuariosComponent_td_96_Template","UsuariosComponent_tr_97_Template","UsuariosComponent_tr_98_Template","UsuariosComponent_div_99_Template","ɵɵclassProp","ɵɵpureFunction0","_c0","ɵɵtextInterpolate3","NgModel","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","i15","i16"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}