{"version":3,"file":"src_app_pages_configuracion_documentos-requeridos_documentos-requeridos_component_ts.js","mappings":"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","sources":["./src/app/core/services/agency.service.ts","./src/app/core/services/documento-requerido.service.ts","./src/app/pages/configuracion/documentos-requeridos/documento-requerido-edit-dialog/documento-requerido-edit-dialog.component.ts","./src/app/pages/configuracion/documentos-requeridos/documento-requerido-edit-dialog/documento-requerido-edit-dialog.component.html","./src/app/pages/configuracion/documentos-requeridos/documentos-requeridos.component.ts","./src/app/pages/configuracion/documentos-requeridos/documentos-requeridos.component.html","./src/app/pages/configuracion/documentos-requeridos/duplicate-configuration-dialog/duplicate-configuration-dialog.component.ts","./src/app/pages/configuracion/documentos-requeridos/duplicate-configuration-dialog/duplicate-configuration-dialog.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiBaseService } from './api-base.service';\n\nexport interface Agency {\n  Id: number;\n  Name: string;\n  IdAgency?: string;\n  Enabled: number;\n  RegistrationDate?: string;\n  UpdateDate?: string;\n  IdLastUserUpdate?: number;\n  // Campo adicional siempre incluido\n  LastUserUpdateName?: string;\n}\n\nexport interface AgencyFilters {\n  name?: string;\n  enabled?: number;\n  date_from?: string;\n  date_to?: string;\n}\n\nexport interface AgencySearchParams {\n  enabled?: boolean;\n  search?: string;\n  limit?: number;\n  offset?: number;\n  sort_by?: string;\n  sort_order?: 'ASC' | 'DESC';\n}\n\nexport interface AgencyResponse {\n  success: boolean;\n  message: string;\n  data?: any;\n}\n\nexport interface AgencyListResponse extends AgencyResponse {\n  data: {\n    agencies: Agency[];\n    total: number;\n    limit?: number;\n    offset?: number;\n    count: number;\n    sort_by?: string;\n    sort_order?: string;\n  };\n}\n\nexport interface AgencyStatsResponse extends AgencyResponse {\n  data: {\n    total: number;\n    enabled: number;\n    disabled: number;\n  };\n}\n\nexport interface PaginatedAgencyResponse {\n  agencies: Agency[];\n  total: number;\n  per_page: number;\n  current_page: number;\n  total_pages: number;\n  has_next: boolean;\n  has_prev: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgencyService {\n  private readonly API_URL = 'agency';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) {}\n\n  /**\n   * Obtener todas las agencias con filtros y paginación\n   */\n  getAgencies(params: AgencySearchParams = {}): Observable<AgencyListResponse> {\n    let httpParams = new HttpParams();\n\n    if (params.enabled !== undefined) {\n      httpParams = httpParams.set('enabled', params.enabled.toString());\n    }\n\n    if (params.search) {\n      httpParams = httpParams.set('search', params.search);\n    }\n\n    if (params.limit) {\n      httpParams = httpParams.set('limit', params.limit.toString());\n    }\n\n    if (params.offset) {\n      httpParams = httpParams.set('offset', params.offset.toString());\n    }\n\n    if (params.sort_by) {\n      httpParams = httpParams.set('sort_by', params.sort_by);\n    }\n\n    if (params.sort_order) {\n      httpParams = httpParams.set('sort_order', params.sort_order);\n    }\n\n    const url = this.apiBaseService.buildApiUrl(this.API_URL);\n    console.log('🏢 AgencyService - URL construida:', url);\n    console.log('🏢 AgencyService - Parámetros:', httpParams);\n    \n    return this.http.get<AgencyListResponse>(url, { params: httpParams });\n  }\n\n  /**\n   * Obtener agencias con paginación avanzada\n   */\n  getAgenciesPaginated(\n    page: number = 1,\n    perPage: number = 20,\n    filters: AgencyFilters = {},\n    sortBy: string = 'Name',\n    sortOrder: 'ASC' | 'DESC' = 'ASC'\n  ): Observable<PaginatedAgencyResponse> {\n    const offset = (page - 1) * perPage;\n    \n    let httpParams = new HttpParams()\n      .set('limit', perPage.toString())\n      .set('offset', offset.toString())\n      .set('sort_by', sortBy)\n      .set('sort_order', sortOrder);\n\n    // Aplicar filtros\n    if (filters.name) {\n      httpParams = httpParams.set('search', filters.name);\n    }\n\n    if (filters.enabled !== undefined) {\n      httpParams = httpParams.set('enabled', filters.enabled.toString());\n    }\n\n    return this.http.get<AgencyListResponse>(this.apiBaseService.buildApiUrl(this.API_URL), { params: httpParams })\n      .pipe(\n        map(response => {\n          if (response.success && response.data) {\n            const totalPages = Math.ceil(response.data.total / perPage);\n            return {\n              agencies: response.data.agencies,\n              total: response.data.total,\n              per_page: perPage,\n              current_page: page,\n              total_pages: totalPages,\n              has_next: page < totalPages,\n              has_prev: page > 1\n            };\n          }\n          throw new Error(response.message || 'Error al obtener agencias');\n        })\n      );\n  }\n\n  /**\n   * Obtener agencia por ID\n   */\n  getAgencyById(id: number): Observable<AgencyResponse> {\n    return this.http.get<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`);\n  }\n\n  /**\n   * Crear nueva agencia\n   */\n  createAgency(agency: Partial<Agency>): Observable<AgencyResponse> {\n    return this.http.post<AgencyResponse>(this.apiBaseService.buildApiUrl(this.API_URL), agency);\n  }\n\n  /**\n   * Actualizar agencia existente\n   */\n  updateAgency(id: number, agency: Partial<Agency>): Observable<AgencyResponse> {\n    return this.http.put<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, agency);\n  }\n\n  /**\n   * Eliminar agencia (soft delete por defecto)\n   */\n  deleteAgency(id: number, force: boolean = false): Observable<AgencyResponse> {\n    const params = force ? new HttpParams().set('force', 'true') : new HttpParams();\n    return this.http.delete<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}`, { params });\n  }\n\n  /**\n   * Cambiar estado de habilitación de una agencia\n   */\n  toggleAgencyStatus(id: number): Observable<AgencyResponse> {\n    return this.http.patch<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/${id}/toggle-status`, {});\n  }\n\n  /**\n   * Buscar agencias por nombre\n   */\n  searchAgencies(query: string): Observable<AgencyResponse> {\n    const params = new HttpParams().set('q', query);\n    return this.http.get<AgencyResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/search`, { params });\n  }\n\n\n\n  /**\n   * Obtener estadísticas de agencias\n   */\n  getAgencyStats(): Observable<AgencyStatsResponse> {\n    return this.http.get<AgencyStatsResponse>(`${this.apiBaseService.buildApiUrl(this.API_URL)}/stats`);\n  }\n\n  /**\n   * Obtener agencias habilitadas (para dropdowns, etc.)\n   */\n  getEnabledAgencies(): Observable<AgencyListResponse> {\n    return this.getAgencies({ enabled: true, sort_by: 'Name', sort_order: 'ASC' });\n  }\n\n  /**\n   * Validar datos de agencia antes de enviar\n   */\n  validateAgencyData(agency: Partial<Agency>): { valid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    if (!agency.Name || agency.Name.trim().length < 3) {\n      errors.push('El nombre debe tener al menos 3 caracteres');\n    }\n\n    if (agency.Name && agency.Name.length > 600) {\n      errors.push('El nombre no puede exceder 600 caracteres');\n    }\n\n    if (agency.IdAgency && agency.IdAgency.length > 50) {\n      errors.push('El IdAgency no puede exceder 50 caracteres');\n    }\n\n    if (agency.Enabled !== undefined && ![0, 1].includes(agency.Enabled)) {\n      errors.push('El estado debe ser 0 o 1');\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors\n    };\n  }\n\n  /**\n   * Preparar datos de agencia para envío\n   */\n  prepareAgencyData(agency: Partial<Agency>, isUpdate: boolean = false): Partial<Agency> {\n    const preparedData: Partial<Agency> = {};\n\n    if (agency.Name) {\n      preparedData.Name = agency.Name.trim();\n    }\n\n    if (agency.IdAgency !== undefined) {\n      preparedData.IdAgency = agency.IdAgency || undefined;\n    }\n\n    if (agency.IdAgency !== undefined) {\n      preparedData.IdAgency = agency.IdAgency || undefined;\n    }\n\n    if (agency.Enabled !== undefined) {\n      preparedData.Enabled = agency.Enabled;\n    }\n\n    return preparedData;\n  }\n\n  /**\n   * Mapear respuesta de agencia a interfaz local\n   */\n  mapAgencyResponse(response: any): Agency {\n    return {\n      Id: response.Id,\n      Name: response.Name,\n      IdAgency: response.IdAgency || undefined,\n      Enabled: response.Enabled,\n      RegistrationDate: response.RegistrationDate || undefined,\n      UpdateDate: response.UpdateDate || undefined,\n      IdLastUserUpdate: response.IdLastUserUpdate || undefined,\n      LastUserUpdateName: response.LastUserUpdateName || undefined\n    };\n  }\n\n  /**\n   * Mapear múltiples respuestas de agencias\n   */\n  mapAgenciesResponse(response: any[]): Agency[] {\n    return response.map(agency => this.mapAgencyResponse(agency));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { \n  DocumentoRequerido, \n  DocumentoRequeridoResponse, \n  DocumentoRequeridoCreateRequest, \n  DocumentoRequeridoUpdateRequest,\n  DocumentoRequeridoFilters,\n  DocumentoRequeridoStats\n} from '../interfaces/documento-requerido.interface';\nimport { ApiBaseService } from './api-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentoRequeridoService {\n  private readonly API_URL = 'documento-requerido';\n\n  constructor(\n    private http: HttpClient,\n    private apiBaseService: ApiBaseService\n  ) { }\n\n  /**\n   * Obtener todos los documentos requeridos con filtros y paginación\n   */\n  getDocumentosRequeridos(filters?: DocumentoRequeridoFilters): Observable<DocumentoRequeridoResponse> {\n    let httpParams = new HttpParams();\n    \n    if (filters) {\n      if (filters.IdProcess) httpParams = httpParams.set('IdProcess', filters.IdProcess);\n      if (filters.IdAgency) httpParams = httpParams.set('IdAgency', filters.IdAgency);\n      if (filters.IdCostumerType) httpParams = httpParams.set('IdCostumerType', filters.IdCostumerType);\n      if (filters.IdOperationType) httpParams = httpParams.set('IdOperationType', filters.IdOperationType);\n      if (filters.IdDocumentType) httpParams = httpParams.set('IdDocumentType', filters.IdDocumentType);\n      if (filters.Required !== undefined) httpParams = httpParams.set('Required', filters.Required.toString());\n      if (filters.Enabled !== undefined) httpParams = httpParams.set('Enabled', filters.Enabled.toString());\n      if (filters.limit) httpParams = httpParams.set('limit', filters.limit.toString());\n      if (filters.offset) httpParams = httpParams.set('offset', filters.offset.toString());\n      if (filters.sort_by) httpParams = httpParams.set('sort_by', filters.sort_by);\n      if (filters.sort_order) httpParams = httpParams.set('sort_order', filters.sort_order);\n    }\n\n    const url = this.apiBaseService.buildApiUrl(this.API_URL);\n    return this.http.get<DocumentoRequeridoResponse>(url, { params: httpParams });\n  }\n\n  /**\n   * Obtener un documento requerido por ID\n   */\n  getDocumentoRequeridoById(id: string): Observable<DocumentoRequeridoResponse> {\n    const url = this.apiBaseService.buildApiUrl(`${this.API_URL}/${id}`);\n    return this.http.get<DocumentoRequeridoResponse>(url);\n  }\n\n  /**\n   * Crear un nuevo documento requerido\n   */\n  createDocumentoRequerido(data: DocumentoRequeridoCreateRequest): Observable<DocumentoRequeridoResponse> {\n    const url = this.apiBaseService.buildApiUrl(this.API_URL);\n    return this.http.post<DocumentoRequeridoResponse>(url, data);\n  }\n\n  /**\n   * Actualizar un documento requerido existente\n   */\n  updateDocumentoRequerido(id: string, data: DocumentoRequeridoUpdateRequest): Observable<DocumentoRequeridoResponse> {\n    const url = this.apiBaseService.buildApiUrl(`${this.API_URL}/${id}`);\n    return this.http.put<DocumentoRequeridoResponse>(url, data);\n  }\n\n  /**\n   * Eliminar un documento requerido\n   */\n  deleteDocumentoRequerido(id: string): Observable<DocumentoRequeridoResponse> {\n    const url = this.apiBaseService.buildApiUrl(`${this.API_URL}/${id}`);\n    return this.http.delete<DocumentoRequeridoResponse>(url);\n  }\n\n  /**\n   * Obtener estadísticas de documentos requeridos\n   */\n  getDocumentosRequeridosStats(): Observable<{ success: boolean; data: DocumentoRequeridoStats }> {\n    const url = this.apiBaseService.buildApiUrl(`${this.API_URL}/stats`);\n    return this.http.get<{ success: boolean; data: DocumentoRequeridoStats }>(url);\n  }\n\n  /**\n   * Obtener documentos requeridos por configuración específica\n   */\n  getDocumentosByConfiguracion(\n    idProcess: string, \n    idAgency: string, \n    idCostumerType: string, \n    idOperationType: string\n  ): Observable<DocumentoRequeridoResponse> {\n    const filters: DocumentoRequeridoFilters = {\n      IdProcess: idProcess,\n      IdAgency: idAgency,\n      IdCostumerType: idCostumerType,\n      IdOperationType: idOperationType,\n      Enabled: true\n    };\n    \n    return this.getDocumentosRequeridos(filters);\n  }\n\n  /**\n   * Reordenar documentos requeridos\n   */\n  reorderDocumentosRequeridos(documentos: { Id: string; Orden: number }[]): Observable<DocumentoRequeridoResponse> {\n    const url = this.apiBaseService.buildApiUrl(`${this.API_URL}/reorder`);\n    return this.http.put<DocumentoRequeridoResponse>(url, { documentos });\n  }\n\n  /**\n   * Duplicar configuración de documentos requeridos\n   */\n  duplicateConfiguracion(\n    sourceConfig: { IdProcess: string; IdAgency: string; IdCostumerType: string; IdOperationType: string },\n    targetConfig: { IdProcess: string; IdAgency: string; IdCostumerType: string; IdOperationType: string }\n  ): Observable<DocumentoRequeridoResponse> {\n    const url = this.apiBaseService.buildApiUrl(`${this.API_URL}/duplicate`);\n    return this.http.post<DocumentoRequeridoResponse>(url, {\n      source: sourceConfig,\n      target: targetConfig\n    });\n  }\n\n  /**\n   * Exportar configuración de documentos requeridos\n   */\n  exportConfiguracion(filters: DocumentoRequeridoFilters): Observable<Blob> {\n    let httpParams = new HttpParams();\n    \n    if (filters) {\n      if (filters.IdProcess) httpParams = httpParams.set('IdProcess', filters.IdProcess);\n      if (filters.IdAgency) httpParams = httpParams.set('IdAgency', filters.IdAgency);\n      if (filters.IdCostumerType) httpParams = httpParams.set('IdCostumerType', filters.IdCostumerType);\n      if (filters.IdOperationType) httpParams = httpParams.set('IdOperationType', filters.IdOperationType);\n    }\n\n    const url = this.apiBaseService.buildApiUrl(`${this.API_URL}/export`);\n    return this.http.get(url, { \n      params: httpParams, \n      responseType: 'blob' \n    });\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { DocumentoRequerido, DocumentoRequeridoCreateRequest, DocumentoRequeridoUpdateRequest } from '../../../../core/interfaces/documento-requerido.interface';\nimport { DocumentoRequeridoService } from '../../../../core/services/documento-requerido.service';\nimport { ProcesoService } from '../../../../core/services/proceso.service';\nimport { AgencyService, Agency } from '../../../../core/services/agency.service';\nimport { CostumerTypeService } from '../../../../core/services/costumer-type.service';\nimport { TipoOperacionService } from '../../../../core/services/tipo-operacion.service';\nimport { DocumentTypeService } from '../../../../core/services/document-type.service';\n\nimport { Proceso } from '../../../../core/interfaces/proceso.interface';\nimport { CostumerType } from '../../../../core/interfaces/costumer-type.interface';\nimport { TipoOperacion } from '../../../../core/interfaces/tipo-operacion.interface';\nimport { DocumentType } from '../../../../core/interfaces/document-type.interface';\n\n@Component({\n  selector: 'app-documento-requerido-edit-dialog',\n  templateUrl: './documento-requerido-edit-dialog.component.html',\n  styleUrls: ['./documento-requerido-edit-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatSlideToggleModule\n  ]\n})\nexport class DocumentoRequeridoEditDialogComponent implements OnInit {\n  documentoForm!: FormGroup;\n  loading = false;\n  loadingCatalogs = false;\n  \n  // Contador de catálogos procesados\n  private catalogsProcessed = 0;\n  private readonly totalCatalogs = 5;\n  \n  // Catálogos\n  procesos: Proceso[] = [];\n  agencias: Agency[] = [];\n  tiposCliente: CostumerType[] = [];\n  tiposOperacion: TipoOperacion[] = [];\n  tiposDocumento: DocumentType[] = [];\n  \n  // Buscador y filtros\n  searchTerm: string = '';\n  selectedPhase: string = '';\n  selectedSubPhase: string = '';\n  filteredTiposDocumento: DocumentType[] = [];\n  availablePhases: string[] = [];\n  availableSubPhases: string[] = [];\n  \n  // Propiedad para manejar los tipos de documento seleccionados\n  selectedDocumentTypes: string[] = [];\n  \n  // Filtro para mostrar solo seleccionados\n  showOnlySelected: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private documentoRequeridoService: DocumentoRequeridoService,\n    private procesoService: ProcesoService,\n    private agencyService: AgencyService,\n    private costumerTypeService: CostumerTypeService,\n    private tipoOperacionService: TipoOperacionService,\n    private documentTypeService: DocumentTypeService,\n    private dialogRef: MatDialogRef<DocumentoRequeridoEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { \n      documento?: DocumentoRequerido; \n      mode: 'create' | 'edit';\n      configuracion?: {\n        IdProcess: string;\n        IdAgency: string;\n        IdCostumerType: string;\n        IdOperationType: string;\n      };\n    },\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.loadCatalogs();\n    \n    // Timeout de seguridad para quitar el loading después de 5 segundos\n    setTimeout(() => {\n      this.loadingCatalogs = false;\n    }, 5000);\n  }\n\n  private initializeForm(): void {\n    this.documentoForm = this.fb.group({\n      IdProcess: ['', Validators.required],\n      IdAgency: ['', Validators.required],\n      IdCostumerType: ['', Validators.required],\n      IdOperationType: ['', Validators.required],\n      enabled: [true] // Estado de la configuración (habilitada por defecto)\n    });\n\n    // Si estamos en modo edición, poblar el formulario\n    if (this.data.mode === 'edit' && this.data.documento) {\n      this.documentoForm.patchValue({\n        IdProcess: this.data.documento.IdProcess,\n        IdAgency: this.data.documento.IdAgency,\n        IdCostumerType: this.data.documento.IdCostumerType,\n        IdOperationType: this.data.documento.IdOperationType,\n        enabled: this.data.documento.Enabled === '1' // Convertir string a boolean\n      });\n    }\n\n    // Si tenemos configuración predefinida, aplicarla\n    if (this.data.configuracion) {\n      this.documentoForm.patchValue({\n        IdProcess: this.data.configuracion.IdProcess,\n        IdAgency: this.data.configuracion.IdAgency,\n        IdCostumerType: this.data.configuracion.IdCostumerType,\n        IdOperationType: this.data.configuracion.IdOperationType\n      });\n    }\n  }\n\n  private loadExistingDocuments(): void {\n    console.log('🔄 Cargando documentos existentes...');\n    console.log('📋 Configuración:', this.data.configuracion);\n    console.log('📄 Tipos de documento disponibles:', this.tiposDocumento?.length || 0);\n    \n    // Cargar documentos existentes para esta configuración\n    if (this.data.configuracion) {\n      const filters = {\n        IdProcess: this.data.configuracion.IdProcess,\n        IdAgency: this.data.configuracion.IdAgency,\n        IdCostumerType: this.data.configuracion.IdCostumerType,\n        IdOperationType: this.data.configuracion.IdOperationType\n      };\n\n      console.log('🔍 Filtros para buscar documentos:', filters);\n\n      this.documentoRequeridoService.getDocumentosRequeridos(filters).subscribe({\n        next: (response: any) => {\n          console.log('✅ Respuesta del servicio:', response);\n          if (response?.success && response.data?.documentos) {\n            // Extraer los IDs de los tipos de documento ya configurados\n            const existingDocumentTypeIds = response.data.documentos.map((doc: any) => doc.IdDocumentType);\n            console.log('📋 IDs de documentos existentes:', existingDocumentTypeIds);\n            console.log('📋 Número de documentos encontrados:', response.data.documentos.length);\n            console.log('📋 Primeros 3 documentos:', response.data.documentos.slice(0, 3));\n            \n            // Actualizar el formulario con los documentos existentes\n            console.log('🔄 Antes de actualizar el formulario:');\n            console.log('📝 selectedDocumentTypes actual:', this.selectedDocumentTypes);\n            \n            this.selectedDocumentTypes = existingDocumentTypeIds;\n            \n            console.log('🔄 Después de actualizar el formulario:');\n            console.log('📝 selectedDocumentTypes nuevo:', this.selectedDocumentTypes);\n            \n            console.log('✅ Formulario actualizado con documentos existentes');\n            console.log('📝 Estado del formulario:', this.documentoForm.value.selectedDocumentTypes);\n            console.log('📝 Valor del control selectedDocumentTypes:', this.documentoForm.get('selectedDocumentTypes')?.value);\n            \n            // Verificar que el formulario se actualizó correctamente\n            setTimeout(() => {\n              console.log('🔄 Verificación después de 100ms:');\n              console.log('📝 Estado del formulario:', this.documentoForm.value.selectedDocumentTypes);\n              console.log('📝 Valor del control selectedDocumentTypes:', this.documentoForm.get('selectedDocumentTypes')?.value);\n              this.debugFormState();\n            }, 100);\n            \n            // Actualizar la lista filtrada\n            this.filteredTiposDocumento = [...this.tiposDocumento];\n            this.applyFilters();\n          } else {\n            console.log('⚠️ No se encontraron documentos existentes o respuesta inválida');\n          }\n        },\n        error: (error: any) => {\n          console.error('❌ Error cargando documentos existentes:', error);\n        }\n      });\n    } else {\n      console.log('⚠️ No hay configuración disponible para cargar documentos existentes');\n    }\n  }\n\n  private loadCatalogs(): void {\n    this.loadingCatalogs = true;\n    this.catalogsProcessed = 0; // Resetear contador\n\n    // Cargar procesos\n    this.procesoService.getProcesos().subscribe({\n      next: (response: any) => {\n        if (response?.success && response.data) {\n          this.procesos = response.data.processes || [];\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('Error cargando procesos:', error);\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar agencias\n    this.agencyService.getAgencies({}).subscribe({\n      next: (response: any) => {\n        if (response?.success && response.data) {\n          this.agencias = response.data.agencies || [];\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('Error cargando agencias:', error);\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar tipos de cliente\n    this.costumerTypeService.getCostumerTypes().subscribe({\n      next: (response: any) => {\n        if (response?.success && response.data) {\n          this.tiposCliente = response.data.costumer_types || [];\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('Error cargando tipos de cliente:', error);\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar tipos de operación\n    this.tipoOperacionService.getTiposOperacion().subscribe({\n      next: (response: any) => {\n        if (response?.success && response.data) {\n          this.tiposOperacion = response.data.operationTypes || [];\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('Error cargando tipos de operación:', error);\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar tipos de documento\n    this.documentTypeService.getDocumentTypes().subscribe({\n      next: (response: any) => {\n        if (response?.success && response.data) {\n          this.tiposDocumento = response.data.document_types || [];\n          this.filteredTiposDocumento = [...this.tiposDocumento]; // Inicializar filtrado\n          \n          // Extraer fases y subfases únicas disponibles\n          this.extractAvailablePhases();\n          \n          // NOTA: loadExistingDocuments() se llama desde checkCatalogsLoaded() \n          // cuando todos los catálogos estén listos para evitar problemas de timing\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('Error cargando tipos de documento:', error);\n        this.checkCatalogsLoaded();\n      }\n    });\n  }\n\n  private checkCatalogsLoaded(): void {\n    this.catalogsProcessed++;\n    console.log(`📊 Catálogo procesado: ${this.catalogsProcessed}/${this.totalCatalogs}`);\n    \n    // Si todos los catálogos han sido procesados, quitar el loading\n    if (this.catalogsProcessed >= this.totalCatalogs) {\n      console.log('✅ Todos los catálogos han sido cargados');\n      this.loadingCatalogs = false;\n      \n      // Si estamos en modo edición, cargar documentos existentes DESPUÉS de que todos los catálogos estén listos\n      if (this.data.mode === 'edit') {\n        console.log('🔄 Modo edición detectado, cargando documentos existentes...');\n        console.log('📋 Configuración disponible:', this.data.configuracion);\n        this.loadExistingDocuments();\n      } else {\n        console.log('🆕 Modo creación detectado, no se cargan documentos existentes');\n      }\n    }\n  }\n\n  onSubmit(): void {\n    if (this.documentoForm.valid && this.selectedDocumentTypes.length > 0) {\n      this.loading = true;\n\n      if (this.data.mode === 'create') {\n        this.createDocumentoRequerido();\n      } else {\n        this.updateDocumentoRequerido();\n      }\n    } else if (this.selectedDocumentTypes.length === 0) {\n      this.snackBar.open('Debes seleccionar al menos un tipo de documento', 'Error', {\n        duration: 3000\n      });\n    }\n  }\n\n  private createDocumentoRequerido(): void {\n    if (this.selectedDocumentTypes.length === 0) {\n      this.snackBar.open('Debes seleccionar al menos un tipo de documento', 'Error', {\n        duration: 3000\n      });\n      this.loading = false;\n      return;\n    }\n\n    // Crear múltiples documentos, uno por cada tipo seleccionado\n    let createdCount = 0;\n    let errorCount = 0;\n    const totalToCreate = this.selectedDocumentTypes.length;\n    \n    this.selectedDocumentTypes.forEach((documentTypeId: string, index: number) => {\n      const documentoData: DocumentoRequeridoCreateRequest = {\n        IdProcess: this.documentoForm.value.IdProcess,\n        IdAgency: this.documentoForm.value.IdAgency,\n        IdCostumerType: this.documentoForm.value.IdCostumerType,\n        IdOperationType: this.documentoForm.value.IdOperationType,\n        IdDocumentType: documentTypeId\n      };\n\n      this.documentoRequeridoService.createDocumentoRequerido(documentoData).subscribe({\n        next: (response) => {\n          if (response.success) {\n            createdCount++;\n          } else {\n            errorCount++;\n          }\n          \n          // Verificar si todos los documentos han sido procesados\n          if (createdCount + errorCount === totalToCreate) {\n            if (errorCount === 0) {\n              this.snackBar.open(`${createdCount} configuraciones creadas exitosamente`, 'Éxito', {\n                duration: 3000\n              });\n              this.dialogRef.close(true);\n            } else {\n              this.snackBar.open(`${createdCount} configuraciones creadas, ${errorCount} errores`, 'Advertencia', {\n                duration: 3000\n              });\n              this.dialogRef.close(true);\n            }\n            this.loading = false;\n          }\n        },\n        error: (error) => {\n          errorCount++;\n          \n          // Verificar si todos los documentos han sido procesados\n          if (createdCount + errorCount === totalToCreate) {\n            if (createdCount > 0) {\n              this.snackBar.open(`${createdCount} configuraciones creadas, ${errorCount} errores`, 'Advertencia', {\n                duration: 3000\n              });\n              this.dialogRef.close(true);\n            } else {\n              this.snackBar.open('Error al crear configuraciones', 'Error', {\n                duration: 3000\n              });\n            }\n            this.loading = false;\n          }\n        }\n      });\n    });\n  }\n\n  private updateDocumentoRequerido(): void {\n    if (!this.data.documento) return;\n\n    if (this.selectedDocumentTypes.length === 0) {\n      this.snackBar.open('Debes seleccionar al menos un tipo de documento', 'Error', {\n        duration: 3000\n      });\n      this.loading = false;\n      return;\n    }\n\n    // Para edición, solo actualizamos el primer tipo seleccionado (compatibilidad)\n    const documentoData: DocumentoRequeridoUpdateRequest = {\n      Id: this.data.documento.Id,\n      IdProcess: this.documentoForm.value.IdProcess,\n      IdAgency: this.documentoForm.value.IdAgency,\n      IdCostumerType: this.documentoForm.value.IdCostumerType,\n      IdOperationType: this.documentoForm.value.IdOperationType,\n      IdDocumentType: this.selectedDocumentTypes[0], // Tomar el primer tipo seleccionado\n      Enabled: this.documentoForm.value.enabled ? '1' : '0' // Convertir boolean a string\n    };\n\n    this.documentoRequeridoService.updateDocumentoRequerido(this.data.documento.Id, documentoData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Configuración actualizada exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al actualizar configuración', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al actualizar configuración', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  getTitle(): string {\n    return this.data.mode === 'edit' ? 'Editar Configuración de Documentos' : 'Nueva Configuración';\n  }\n\n  getSubmitButtonText(): string {\n    return this.data.mode === 'edit' ? 'Guardar Cambios' : 'Crear Configuración';\n  }\n\n  // Método para verificar si un tipo de documento está seleccionado\n  isDocumentTypeSelected(documentTypeId: string): boolean {\n    const isSelected = this.selectedDocumentTypes.includes(documentTypeId);\n    \n    // Solo mostrar logs para los primeros 5 documentos para no saturar la consola\n    if (parseInt(documentTypeId) <= 5) {\n      console.log(`🔍 Verificando si ${documentTypeId} está seleccionado: ${isSelected}`);\n      console.log(`📋 Tipos seleccionados actuales:`, this.selectedDocumentTypes);\n      console.log(`📝 Tipo de selectedTypes:`, typeof this.selectedDocumentTypes, Array.isArray(this.selectedDocumentTypes));\n      console.log(`📝 documentTypeId:`, documentTypeId, typeof documentTypeId);\n      console.log(`📝 Comparación:`, this.selectedDocumentTypes.includes(documentTypeId));\n    }\n    \n    return isSelected;\n  }\n\n  // Método para manejar cambios en los checkboxes\n  onDocumentTypeChange(event: any, documentTypeId: string): void {\n    if (event.checked) {\n      // Agregar el documento si no está ya seleccionado\n      if (!this.selectedDocumentTypes.includes(documentTypeId)) {\n        this.selectedDocumentTypes.push(documentTypeId);\n      }\n    } else {\n      // Remover el documento si está seleccionado\n      const index = this.selectedDocumentTypes.indexOf(documentTypeId);\n      if (index > -1) {\n        this.selectedDocumentTypes.splice(index, 1);\n      }\n    }\n    \n    console.log('🔄 Documento cambiado:', documentTypeId, 'checked:', event.checked);\n    console.log('📋 Tipos seleccionados actualizados:', this.selectedDocumentTypes);\n    \n    // Reaplicar filtros después del cambio\n    this.applyFilters();\n  }\n\n  // Método para manejar el cambio en el filtro de solo seleccionados\n  onShowOnlySelectedChange(event: any): void {\n    this.showOnlySelected = event.checked;\n    console.log('🔄 Filtro \"Solo seleccionados\" cambiado:', this.showOnlySelected);\n    console.log('📋 Tipos seleccionados actuales:', this.selectedDocumentTypes);\n    console.log('📄 Total de tipos de documento:', this.tiposDocumento.length);\n    this.applyFilters();\n  }\n\n  // Método para limpiar solo el filtro de seleccionados\n  clearShowOnlySelectedFilter(): void {\n    this.showOnlySelected = false;\n    console.log('🔄 Filtro \"Solo seleccionados\" limpiado');\n    this.applyFilters();\n  }\n\n  // Método para obtener el conteo de tipos de documento seleccionados\n  getSelectedDocumentTypesCount(): number {\n    return this.selectedDocumentTypes.length;\n  }\n\n  // Métodos para obtener textos de solo lectura\n  getProcessText(): string {\n    const processId = this.documentoForm.get('IdProcess')?.value;\n    const process = this.procesos.find(p => p.Id === processId);\n    return process ? process.Name : 'No seleccionado';\n  }\n\n  getAgencyText(): string {\n    const agencyId = this.documentoForm.get('IdAgency')?.value;\n    const agency = this.agencias.find(a => a.Id === agencyId);\n    return agency ? agency.Name : 'No seleccionado';\n  }\n\n  getCustomerTypeText(): string {\n    const customerTypeId = this.documentoForm.get('IdCostumerType')?.value;\n    const customerType = this.tiposCliente.find(t => t.Id === customerTypeId);\n    return customerType ? customerType.Name : 'No seleccionado';\n  }\n\n  getOperationTypeText(): string {\n    const operationTypeId = this.documentoForm.get('IdOperationType')?.value;\n    const operationType = this.tiposOperacion.find(t => t.Id === operationTypeId);\n    return operationType ? operationType.Name : 'No seleccionado';\n  }\n\n  // Método temporal para debuggear el estado del formulario\n  debugFormState(): void {\n    console.log('🔍 DEBUG - Estado del formulario:');\n    console.log('📝 selectedDocumentTypes:', this.selectedDocumentTypes);\n    console.log('📝 Tipo de selectedDocumentTypes:', typeof this.selectedDocumentTypes);\n    console.log('📝 Es array:', Array.isArray(this.selectedDocumentTypes));\n    console.log('📝 Longitud:', this.selectedDocumentTypes.length);\n    console.log('📝 Estado completo del formulario:', this.documentoForm.value);\n  }\n\n  // Método para filtrar tipos de documento\n  onSearchChange(searchTerm: string): void {\n    this.searchTerm = searchTerm;\n    this.applyFilters();\n  }\n\n  // Método para cambiar filtro de fase\n  onPhaseChange(phase: string): void {\n    this.selectedPhase = phase;\n    this.selectedSubPhase = ''; // Resetear subfase cuando cambia la fase\n    this.updateAvailableSubPhases();\n    this.applyFilters();\n  }\n\n  // Método para cambiar filtro de subfase\n  onSubPhaseChange(subPhase: string): void {\n    this.selectedSubPhase = subPhase;\n    this.applyFilters();\n  }\n\n  // Método para limpiar búsqueda\n  clearSearch(): void {\n    this.searchTerm = '';\n    this.applyFilters();\n  }\n\n  // Método para limpiar todos los filtros\n  clearAllFilters(): void {\n    this.searchTerm = '';\n    this.selectedPhase = '';\n    this.selectedSubPhase = '';\n    this.showOnlySelected = false;\n    this.applyFilters();\n  }\n\n  // Método para verificar si hay filtros activos\n  hasActiveFilters(): boolean {\n    return this.searchTerm.trim() !== '' || this.selectedPhase !== '' || this.selectedSubPhase !== '' || this.showOnlySelected;\n  }\n\n  // Método para extraer fases y subfases disponibles\n  private extractAvailablePhases(): void {\n    const phases = new Set<string>();\n    const subPhases = new Set<string>();\n\n    this.tiposDocumento.forEach(tipo => {\n      if (tipo.ProcessTypeName) {\n        phases.add(tipo.ProcessTypeName);\n      }\n      if (tipo.SubProcessName) {\n        subPhases.add(tipo.SubProcessName);\n      }\n    });\n\n    this.availablePhases = Array.from(phases).sort();\n    this.availableSubPhases = Array.from(subPhases).sort();\n  }\n\n  // Método para actualizar subfases disponibles según la fase seleccionada\n  private updateAvailableSubPhases(): void {\n    if (!this.selectedPhase) {\n      this.availableSubPhases = Array.from(new Set(\n        this.tiposDocumento\n          .filter(tipo => tipo.SubProcessName)\n          .map(tipo => tipo.SubProcessName!)\n      )).sort();\n      return;\n    }\n\n    const subPhases = new Set<string>();\n    this.tiposDocumento.forEach(tipo => {\n      if (tipo.ProcessTypeName === this.selectedPhase && tipo.SubProcessName) {\n        subPhases.add(tipo.SubProcessName);\n      }\n    });\n\n    this.availableSubPhases = Array.from(subPhases).sort();\n  }\n\n  // Método para aplicar todos los filtros\n  private applyFilters(): void {\n    console.log('🔍 Aplicando filtros...');\n    console.log('📝 showOnlySelected:', this.showOnlySelected);\n    console.log('📝 selectedDocumentTypes:', this.selectedDocumentTypes);\n    \n    let filtered = [...this.tiposDocumento];\n    console.log('📄 Total inicial:', filtered.length);\n\n    // Filtro por nombre\n    if (this.searchTerm && this.searchTerm.trim() !== '') {\n      const searchLower = this.searchTerm.toLowerCase().trim();\n      filtered = filtered.filter(tipo => \n        tipo.Name.toLowerCase().includes(searchLower)\n      );\n      console.log('🔍 Después de filtro por nombre:', filtered.length);\n    }\n\n    // Filtro por fase\n    if (this.selectedPhase) {\n      filtered = filtered.filter(tipo => \n        tipo.ProcessTypeName === this.selectedPhase\n      );\n      console.log('🔍 Después de filtro por fase:', filtered.length);\n    }\n\n    // Filtro por subfase\n    if (this.selectedSubPhase) {\n      filtered = filtered.filter(tipo => \n        tipo.SubProcessName === this.selectedSubPhase\n      );\n      console.log('🔍 Después de filtro por subfase:', filtered.length);\n    }\n\n    // Filtro por solo seleccionados\n    if (this.showOnlySelected) {\n      const beforeFilter = filtered.length;\n      filtered = filtered.filter(tipo => \n        this.selectedDocumentTypes.includes(tipo.Id)\n      );\n      console.log('🔍 Después de filtro \"Solo seleccionados\":', filtered.length, '(antes:', beforeFilter, ')');\n      console.log('🔍 IDs seleccionados:', this.selectedDocumentTypes);\n      console.log('🔍 Tipos filtrados:', filtered.map(t => ({ id: t.Id, name: t.Name })));\n    }\n\n    this.filteredTiposDocumento = filtered;\n    console.log('✅ Filtrado final:', this.filteredTiposDocumento.length);\n  }\n}\n","<div class=\"p-0\">\n  <!-- Header del diálogo -->\n  <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\n    <h2 class=\"text-xl font-semibold text-gray-900\">\n      {{ getTitle() }}\n    </h2>\n    <button mat-icon-button (click)=\"onCancel()\" matTooltip=\"Cerrar\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Formulario -->\n  <form [formGroup]=\"documentoForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6 p-6\">\n    \n    <!-- Configuración del Proceso y Estado -->\n    <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n      <div class=\"flex items-center justify-between mb-2\">\n        <h3 class=\"text-sm font-medium text-blue-900\">Configuración del Proceso</h3>\n        <div class=\"flex items-center space-x-3\">\n          <!-- Estado de la configuración -->\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"text-xs font-medium text-yellow-700 uppercase tracking-wide\">Estado:</span>\n            <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-yellow-200 shadow-sm\">\n              {{ documentoForm.get('enabled')?.value ? 'Habilitada' : 'Deshabilitada' }}\n            </span>\n            <mat-slide-toggle \n              formControlName=\"enabled\" \n              color=\"primary\"\n              [disabled]=\"loading\"\n              class=\"scale-90\">\n            </mat-slide-toggle>\n            <span class=\"text-xs text-yellow-600\">\n              {{ documentoForm.get('enabled')?.value ? 'Activa' : 'Inactiva' }}\n            </span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Información del proceso -->\n      <div class=\"flex flex-wrap gap-x-6 gap-y-1\">\n        <!-- Proceso -->\n        <div class=\"flex items-center space-x-1\">\n          <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Proceso:</span>\n          <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ getProcessText() }}</span>\n        </div>\n\n        <!-- Agencia -->\n        <div class=\"flex items-center space-x-1\">\n          <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Agencia:</span>\n          <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ getAgencyText() }}</span>\n        </div>\n\n        <!-- Tipo de Cliente -->\n        <div class=\"flex items-center space-x-1\">\n          <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Cliente:</span>\n          <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ getCustomerTypeText() }}</span>\n        </div>\n\n        <!-- Tipo de Operación -->\n        <div class=\"flex items-center space-x-1\">\n          <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Operación:</span>\n          <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ getOperationTypeText() }}</span>\n        </div>\n      </div>\n      \n      <!-- Descripción del estado -->\n      <p class=\"text-xs text-gray-500 mt-2 italic\">\n        Una configuración deshabilitada no se aplicará a nuevos procesos\n      </p>\n    </div>\n\n    <!-- Configuración del Documento -->\n    <div class=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n      <h3 class=\"text-sm font-medium text-green-900 mb-2\">Tipos de Documento Requeridos</h3>\n      \n      <!-- Loading spinner para tipos de documento -->\n      <div *ngIf=\"loadingCatalogs\" class=\"flex items-center justify-center py-4\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n        <span class=\"ml-2 text-gray-600 text-sm\">Cargando tipos de documento...</span>\n      </div>\n      \n\n      \n      <!-- Lista de tipos de documento con checkboxes -->\n      <div *ngIf=\"!loadingCatalogs\" class=\"space-y-2\">\n        <div class=\"text-xs text-gray-600 mb-2\">\n          Selecciona los tipos de documento requeridos:\n        </div>\n        \n        <!-- Filtros de tipos de documento -->\n        <div class=\"mb-3\">\n          <!-- Filtros en línea -->\n          <div class=\"flex flex-wrap items-center gap-2 mb-2\">\n            <!-- Buscador compacto -->\n            <div class=\"flex-1 min-w-48\">\n              <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <mat-label>Buscar</mat-label>\n                <input \n                  matInput \n                  [(ngModel)]=\"searchTerm\" \n                  (ngModelChange)=\"onSearchChange($event)\"\n                  placeholder=\"Nombre del documento...\"\n                  class=\"text-sm\">\n                <mat-icon matSuffix class=\"text-gray-400\">search</mat-icon>\n                <button \n                  *ngIf=\"searchTerm\" \n                  matSuffix \n                  mat-icon-button \n                  (click)=\"clearSearch()\"\n                  class=\"text-gray-400 hover:text-gray-600\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n            </div>\n            \n            <!-- Filtros de fase y subfase compactos -->\n            <mat-form-field appearance=\"outline\" class=\"w-40\">\n              <mat-label>Fase</mat-label>\n              <mat-select [(ngModel)]=\"selectedPhase\" (ngModelChange)=\"onPhaseChange($event)\">\n                <mat-option value=\"\">Todas</mat-option>\n                <mat-option *ngFor=\"let phase of availablePhases\" [value]=\"phase\">\n                  {{ phase }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            \n            <mat-form-field appearance=\"outline\" class=\"w-40\">\n              <mat-label>Subfase</mat-label>\n              <mat-select [(ngModel)]=\"selectedSubPhase\" (ngModelChange)=\"onSubPhaseChange($event)\" [disabled]=\"!selectedPhase\">\n                <mat-option value=\"\">Todas</mat-option>\n                <mat-option *ngFor=\"let subPhase of availableSubPhases\" [value]=\"subPhase\">\n                  {{ subPhase }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            \n            <!-- Botón limpiar filtros -->\n            <button \n              *ngIf=\"hasActiveFilters()\"\n              type=\"button\" \n              mat-icon-button \n              (click)=\"clearAllFilters()\"\n              class=\"text-blue-600 hover:text-blue-800\"\n              matTooltip=\"Limpiar filtros\">\n              <mat-icon>clear_all</mat-icon>\n            </button>\n            \n            <!-- Filtro de seleccionados -->\n            <div class=\"flex items-center space-x-2 ml-2\">\n              <mat-slide-toggle \n                [checked]=\"showOnlySelected\"\n                (change)=\"onShowOnlySelectedChange($event)\"\n                color=\"primary\"\n                class=\"text-sm\">\n                Solo seleccionados\n              </mat-slide-toggle>\n            </div>\n          </div>\n        </div>\n        \n\n        \n        <!-- Mensaje cuando no hay tipos disponibles -->\n        <div *ngIf=\"filteredTiposDocumento.length === 0 && searchTerm\" class=\"text-center py-4 text-gray-500\">\n          <mat-icon class=\"text-2xl mb-1 text-gray-300\">search_off</mat-icon>\n          <p class=\"text-sm font-medium\">No se encontraron resultados</p>\n          <p class=\"text-xs\">Intenta con otros términos de búsqueda</p>\n        </div>\n        \n        <div *ngIf=\"filteredTiposDocumento.length === 0 && !searchTerm\" class=\"text-center py-4 text-gray-500\">\n          <mat-icon class=\"text-2xl mb-1 text-gray-300\">description</mat-icon>\n          <p class=\"text-sm font-medium\">No hay tipos de documento disponibles</p>\n          <p class=\"text-xs\">Verifica la conexión con el servidor</p>\n        </div>\n        \n        <!-- Lista de checkboxes cuando hay tipos disponibles -->\n        <div *ngIf=\"filteredTiposDocumento.length > 0\" class=\"max-h-48 overflow-y-auto\">\n          <div class=\"grid grid-cols-1 gap-1\">\n            <div *ngFor=\"let tipo of filteredTiposDocumento\" class=\"flex items-center space-x-2 p-2 bg-white rounded border border-gray-200 hover:bg-gray-50\">\n              <mat-checkbox \n                [value]=\"tipo.Id\"\n                (change)=\"onDocumentTypeChange($event, tipo.Id)\"\n                [checked]=\"isDocumentTypeSelected(tipo.Id)\"\n                color=\"primary\"\n                class=\"flex-shrink-0\">\n              </mat-checkbox>\n              <div class=\"flex-1 min-w-0\">\n                <div class=\"text-sm font-medium text-gray-700 truncate\">{{ tipo.Name }}</div>\n                <div class=\"text-xs text-gray-500 flex flex-wrap gap-2 mt-1\">\n                  <span *ngIf=\"tipo.ProcessTypeName\" class=\"inline-flex items-center bg-blue-50 px-2 py-1 rounded\">\n                    <mat-icon class=\"text-xs mr-1 text-blue-600\">schedule</mat-icon>\n                    {{ tipo.ProcessTypeName }}\n                  </span>\n                  <span *ngIf=\"tipo.SubProcessName\" class=\"inline-flex items-center bg-green-50 px-2 py-1 rounded\">\n                    <mat-icon class=\"text-xs mr-1 text-green-600\">subdirectory_arrow_right</mat-icon>\n                    {{ tipo.SubProcessName }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Mensaje de error si no hay tipos seleccionados -->\n        <div *ngIf=\"documentoForm.get('selectedDocumentTypes')?.hasError('required') && documentoForm.get('selectedDocumentTypes')?.touched\" \n             class=\"text-red-600 text-sm mt-2\">\n          Debes seleccionar al menos un tipo de documento\n        </div>\n        \n        <!-- Contador y filtros activos compactos -->\n        <div class=\"flex items-center justify-between text-xs text-gray-500 mt-2\">\n          <div>\n            {{ getSelectedDocumentTypesCount() }} de {{ tiposDocumento.length }} seleccionados\n            <span *ngIf=\"hasActiveFilters()\" class=\"text-blue-600 ml-1\">\n              ({{ filteredTiposDocumento.length }} filtrados)\n            </span>\n            <span *ngIf=\"showOnlySelected\" class=\"text-green-600 ml-1\">\n              • Solo seleccionados\n            </span>\n          </div>\n          \n          <!-- Filtros activos como chips -->\n          <div *ngIf=\"hasActiveFilters()\" class=\"flex items-center gap-1\">\n            <span class=\"text-blue-600\">Filtros:</span>\n            <span *ngIf=\"searchTerm\" class=\"inline-flex items-center bg-blue-100 text-blue-700 px-2 py-1 rounded-full text-xs\">\n              \"{{ searchTerm }}\"\n              <button (click)=\"clearSearch()\" class=\"ml-1 text-blue-500 hover:text-blue-700\">×</button>\n            </span>\n            <span *ngIf=\"selectedPhase\" class=\"inline-flex items-center bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs\">\n              {{ selectedPhase }}\n              <button (click)=\"selectedPhase = ''; onPhaseChange('')\" class=\"ml-1 text-green-500 hover:text-green-700\">×</button>\n            </span>\n            <span *ngIf=\"selectedSubPhase\" class=\"inline-flex items-center bg-purple-100 text-purple-700 px-2 py-1 rounded-full text-xs\">\n              {{ selectedSubPhase }}\n              <button (click)=\"selectedSubPhase = ''; onSubPhaseChange('')\" class=\"ml-1 text-purple-500 hover:text-purple-700\">×</button>\n            </span>\n            <span *ngIf=\"showOnlySelected\" class=\"inline-flex items-center bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs\">\n              Solo seleccionados\n              <button (click)=\"clearShowOnlySelectedFilter()\" class=\"ml-1 text-green-500 hover:text-green-700\">×</button>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"flex justify-end space-x-3 pt-4 mt-4 border-t\">\n      <!-- Botón temporal para debug -->\n      <button \n        *ngIf=\"data.mode === 'edit'\"\n        type=\"button\" \n        mat-button \n        (click)=\"debugFormState()\"\n        class=\"mr-auto\">\n        Debug Form\n      </button>\n      \n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancel()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"primary\"\n        [disabled]=\"documentoForm.invalid || loading || loadingCatalogs\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"18\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\" class=\"text-sm\">{{ data.mode === 'edit' ? 'save' : 'add' }}</mat-icon>\n        {{ getSubmitButtonText() }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\n\n// Importar servicios existentes\nimport { ProcesoService } from '../../../core/services/proceso.service';\nimport { AgencyService, Agency } from '../../../core/services/agency.service';\nimport { CostumerTypeService } from '../../../core/services/costumer-type.service';\nimport { TipoOperacionService } from '../../../core/services/tipo-operacion.service';\nimport { DocumentoRequeridoService } from '../../../core/services/documento-requerido.service';\n\n// Importar interfaces existentes\nimport { Proceso } from '../../../core/interfaces/proceso.interface';\nimport { CostumerType } from '../../../core/interfaces/costumer-type.interface';\nimport { TipoOperacion } from '../../../core/interfaces/tipo-operacion.interface';\nimport { DocumentoRequerido, DocumentoRequeridoFilters } from '../../../core/interfaces/documento-requerido.interface';\nimport { DocumentoRequeridoEditDialogComponent } from './documento-requerido-edit-dialog/documento-requerido-edit-dialog.component';\nimport { DuplicateConfigurationDialogComponent } from './duplicate-configuration-dialog/duplicate-configuration-dialog.component';\n\n@Component({\n  selector: 'app-documentos-requeridos',\n  templateUrl: './documentos-requeridos.component.html',\n  styleUrls: ['./documentos-requeridos.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatSelectModule\n  ]\n})\nexport class DocumentosRequeridosComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  displayedColumns: string[] = ['id', 'agencia', 'proceso', 'tipoCliente', 'tipoOperacion', 'tipoDocumento', 'requerido', 'requiereExpiracion'];\n  dataSource = new MatTableDataSource<DocumentoRequerido>([]);\n  \n  loading = false;\n  loadingCatalogs = false;\n  selectedProcess = '';\n  selectedAgency = '';\n  selectedCustomerType = '';\n  selectedOperationType = '';\n  \n  // Datos para los dropdowns usando interfaces existentes\n  processes: Proceso[] = [];\n  agencies: Agency[] = [];\n  customerTypes: CostumerType[] = [];\n  operationTypes: TipoOperacion[] = [];\n  \n  // Item seleccionado para edición\n  selectedItem: DocumentoRequerido | null = null;\n  \n  // Estadísticas\n  stats: any = null;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private procesoService: ProcesoService,\n    private agencyService: AgencyService,\n    private costumerTypeService: CostumerTypeService,\n    private tipoOperacionService: TipoOperacionService,\n    private documentoRequeridoService: DocumentoRequeridoService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadCatalogs();\n    this.loadData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadCatalogs(): void {\n    this.loadingCatalogs = true;\n    console.log('🔄 Iniciando carga de catálogos...');\n    \n    // Cargar procesos\n    console.log('🔄 Cargando procesos...');\n    this.procesoService.getProcesos().subscribe({\n      next: (response: any) => {\n        console.log('📋 Respuesta de procesos:', response);\n        if (response?.success && response.data) {\n          this.processes = response.data.processes || [];\n          console.log('✅ Procesos cargados:', this.processes.length);\n        } else {\n          console.error('❌ Error cargando procesos:', response);\n          this.snackBar.open('Error al cargar procesos', 'Error', { duration: 3000 });\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('❌ Error cargando procesos:', error);\n        this.snackBar.open('Error al cargar procesos', 'Error', { duration: 3000 });\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar agencias con debug detallado\n    console.log('🔄 Cargando agencias...');\n    console.log('🏢 AgencyService disponible:', !!this.agencyService);\n    \n    // Verificar la URL que se va a construir\n    const testUrl = this.agencyService['apiBaseService'].buildApiUrl('agency');\n    console.log('🔗 URL que se va a construir para agencias:', testUrl);\n    console.log('🔗 URL incluye localhost:8080:', testUrl.includes('localhost:8080'));\n    \n    // Usar método más simple sin parámetros\n    this.agencyService.getAgencies({}).subscribe({\n      next: (response: any) => {\n        console.log('📋 Respuesta completa de agencias:', response);\n        console.log('📋 Response.success:', response?.success);\n        console.log('📋 Response.data:', response?.data);\n        console.log('📋 Response.data.agencies:', response?.data?.agencies);\n        \n        if (response?.success && response.data) {\n          this.agencies = response.data.agencies || [];\n          console.log('✅ Agencias cargadas:', this.agencies.length);\n          console.log('✅ Primeras 3 agencias:', this.agencies.slice(0, 3));\n        } else {\n          console.error('❌ Error cargando agencias - Respuesta inválida:', response);\n          this.snackBar.open('Error al cargar agencias: Respuesta inválida', 'Error', { duration: 3000 });\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('❌ Error cargando agencias:', error);\n        console.error('❌ Error status:', error.status);\n        console.error('❌ Error message:', error.message);\n        console.error('❌ Error error:', error.error);\n        this.snackBar.open(`Error al cargar agencias: ${error.message || 'Error desconocido'}`, 'Error', { duration: 3000 });\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar tipos de cliente\n    console.log('🔄 Cargando tipos de cliente...');\n    this.costumerTypeService.getCostumerTypes().subscribe({\n      next: (response: any) => {\n        console.log('📋 Respuesta de tipos de cliente:', response);\n        if (response?.success && response.data) {\n          this.customerTypes = response.data.costumer_types || [];\n          console.log('✅ Tipos de cliente cargados:', this.customerTypes.length);\n        } else {\n          console.error('❌ Error cargando tipos de cliente:', response);\n          this.snackBar.open('Error al cargar tipos de cliente', 'Error', { duration: 3000 });\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('❌ Error cargando tipos de cliente:', error);\n        this.snackBar.open('Error al cargar tipos de cliente', 'Error', { duration: 3000 });\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar tipos de operación\n    console.log('🔄 Cargando tipos de operación...');\n    this.tipoOperacionService.getTiposOperacion().subscribe({\n      next: (response: any) => {\n        console.log('📋 Respuesta de tipos de operación:', response);\n        if (response?.success && response.data) {\n          this.operationTypes = response.data.operationTypes || [];\n          console.log('✅ Tipos de operación cargados:', this.operationTypes.length);\n        } else {\n          console.error('❌ Error cargando tipos de operación:', response);\n          this.snackBar.open('Error al cargar tipos de operación', 'Error', { duration: 3000 });\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error: any) => {\n        console.error('❌ Error cargando tipos de operación:', error);\n        this.snackBar.open('Error al cargar tipos de operación', 'Error', { duration: 3000 });\n        this.checkCatalogsLoaded();\n      }\n    });\n  }\n\n  private checkCatalogsLoaded(): void {\n    // Verificar si todos los catálogos han sido procesados (aunque estén vacíos)\n    const totalCatalogs = 4; // procesos, agencias, tipos de cliente, tipos de operación\n    const catalogsProcessed = (this.processes.length >= 0 ? 1 : 0) + \n                             (this.agencies.length >= 0 ? 1 : 0) + \n                             (this.customerTypes.length >= 0 ? 1 : 0) + \n                             (this.operationTypes.length >= 0 ? 1 : 0);\n    \n    if (catalogsProcessed >= totalCatalogs) {\n      this.loadingCatalogs = false;\n      console.log('✅ Catálogos procesados - Procesos:', this.processes.length, \n                  'Agencias:', this.agencies.length, \n                  'Tipos Cliente:', this.customerTypes.length, \n                  'Tipos Operación:', this.operationTypes.length);\n      \n      // Si no hay catálogos, mostrar mensaje de error\n      if (this.processes.length === 0 && this.agencies.length === 0 && \n          this.customerTypes.length === 0 && this.operationTypes.length === 0) {\n        this.snackBar.open('No se pudieron cargar los catálogos. Verifica la conexión con el backend.', 'Error', { duration: 5000 });\n      }\n    }\n  }\n\n  loadData(): void {\n    if (!this.isConfigurationSelected()) {\n      this.dataSource.data = [];\n      return;\n    }\n\n    this.loading = true;\n    \n    // Construir filtros solo con los valores seleccionados\n    const filters: DocumentoRequeridoFilters = {};\n    \n    // Solo agregar filtros que estén seleccionados\n    if (this.selectedProcess) filters.IdProcess = this.selectedProcess;\n    if (this.selectedAgency) filters.IdAgency = this.selectedAgency;\n    if (this.selectedCustomerType) filters.IdCostumerType = this.selectedCustomerType;\n    if (this.selectedOperationType) filters.IdOperationType = this.selectedOperationType;\n\n            this.documentoRequeridoService.getDocumentosRequeridos(filters).subscribe({\n          next: (response) => {\n            if (response.success && response.data) {\n              this.dataSource.data = response.data.documentos || [];\n            } else {\n              this.snackBar.open(response.message || 'Error al cargar documentos', 'Error', { duration: 3000 });\n              this.dataSource.data = [];\n            }\n            this.loading = false;\n          },\n      error: (error) => {\n        console.error('Error cargando documentos requeridos:', error);\n        this.snackBar.open('Error al cargar documentos requeridos', 'Error', { duration: 3000 });\n        this.dataSource.data = [];\n        this.loading = false;\n      }\n    });\n  }\n\n  onConfigurationChange(): void {\n    // Cargar datos cuando cambia cualquier selección\n    this.loadData();\n    \n    // Limpiar el item seleccionado cuando cambian los filtros\n    this.selectedItem = null;\n  }\n\n  isConfigurationSelected(): boolean {\n    // Si no hay ninguna selección, considerar como si estuviera todo seleccionado (ver todos los datos)\n    if (!this.selectedProcess && !this.selectedAgency && !this.selectedCustomerType && !this.selectedOperationType) {\n      return true;\n    }\n    // Si hay al menos una selección, permitir mostrar datos\n    return true;\n  }\n\n  hasDataForConfiguration(): boolean {\n    // Para modificar la configuración, solo se requiere que TODOS los filtros estén seleccionados\n    // No es necesario que haya datos, porque se modifica la configuración base\n    return !!(this.selectedProcess && this.selectedAgency && this.selectedCustomerType && this.selectedOperationType);\n  }\n\n  clearFilters(): void {\n    this.selectedProcess = '';\n    this.selectedAgency = '';\n    this.selectedCustomerType = '';\n    this.selectedOperationType = '';\n    this.selectedItem = null; // También limpiar el item seleccionado\n    this.loadData(); // Recargar todos los datos después de limpiar filtros\n    this.snackBar.open('Filtros limpiados', 'Info', { duration: 2000 });\n  }\n\n  refreshData(): void {\n    this.loadData();\n  }\n\n  addDocumentoRequerido(): void {\n    // Para crear una nueva configuración, no es necesario tener filtros seleccionados\n    // Se puede crear con valores por defecto o vacíos\n    const configuracion = {\n      IdProcess: this.selectedProcess || '',\n      IdAgency: this.selectedAgency || '',\n      IdCostumerType: this.selectedCustomerType || '',\n      IdOperationType: this.selectedOperationType || ''\n    };\n\n    const dialogRef = this.dialog.open(DocumentoRequeridoEditDialogComponent, {\n      width: '800px',\n      data: {\n        mode: 'create',\n        configuracion: configuracion\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadData();\n        this.snackBar.open('Documento requerido creado exitosamente', 'Éxito', { duration: 2000 });\n      }\n    });\n  }\n\n  editDocumentoRequerido(item: DocumentoRequerido): void {\n    if (!item) {\n      this.snackBar.open('Selecciona un documento para editar la configuración', 'Warning', { duration: 3000 });\n      return;\n    }\n\n    const dialogRef = this.dialog.open(DocumentoRequeridoEditDialogComponent, {\n      width: '800px',\n      data: {\n        mode: 'edit',\n        documento: item\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadData();\n        this.snackBar.open('Configuración actualizada exitosamente', 'Éxito', { duration: 2000 });\n      }\n    });\n  }\n\n  editConfiguration(): void {\n    // Crear objeto de configuración con los filtros seleccionados\n    const configuracion = {\n      IdProcess: this.selectedProcess,\n      IdAgency: this.selectedAgency,\n      IdCostumerType: this.selectedCustomerType,\n      IdOperationType: this.selectedOperationType\n    };\n\n    const dialogRef = this.dialog.open(DocumentoRequeridoEditDialogComponent, {\n      width: '800px',\n      data: {\n        mode: 'edit',\n        configuracion: configuracion\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadData();\n        this.snackBar.open('Configuración general actualizada exitosamente', 'Éxito', { duration: 2000 });\n      }\n    });\n  }\n\n\n\n  // Método para seleccionar un item de la tabla\n  onRowClick(element: DocumentoRequerido): void {\n    this.selectedItem = element;\n    console.log('Item seleccionado:', element);\n  }\n\n  // Método para verificar si se puede duplicar la configuración\n  canDuplicateConfiguration(): boolean {\n    // Solo se puede duplicar si TODOS los filtros están seleccionados\n    // y hay datos para esa configuración\n    return this.hasDataForConfiguration() && this.dataSource.data.length > 0;\n  }\n\n  // Método para abrir el diálogo de duplicación\n  duplicateConfiguration(): void {\n    if (!this.canDuplicateConfiguration()) {\n      this.snackBar.open('Selecciona una configuración completa para duplicar', 'Warning', { duration: 3000 });\n      return;\n    }\n\n    // Obtener nombres de los elementos seleccionados\n    const currentAgency = this.agencies.find(a => a.Id.toString() === this.selectedAgency);\n    const currentProcess = this.processes.find(p => p.Id.toString() === this.selectedProcess);\n    const currentCustomerType = this.customerTypes.find(c => c.Id.toString() === this.selectedCustomerType);\n    const currentOperationType = this.operationTypes.find(o => o.Id.toString() === this.selectedOperationType);\n\n    if (!currentAgency || !currentProcess || !currentCustomerType || !currentOperationType) {\n      this.snackBar.open('Error obteniendo información de la configuración', 'Error', { duration: 3000 });\n      return;\n    }\n\n    // Crear objeto de configuración con los filtros seleccionados\n    const configuracion = {\n      IdProcess: this.selectedProcess,\n      IdAgency: parseInt(this.selectedAgency),\n      IdCostumerType: this.selectedCustomerType,\n      IdOperationType: this.selectedOperationType\n    };\n\n    const dialogRef = this.dialog.open(DuplicateConfigurationDialogComponent, {\n      width: '800px',\n      data: {\n        configuracion: configuracion,\n        currentAgencyName: currentAgency.Name,\n        processName: currentProcess.Name,\n        customerTypeName: currentCustomerType.Name,\n        operationTypeName: currentOperationType.Name\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result?.success) {\n        this.loadData();\n        this.snackBar.open(\n          `Configuración duplicada exitosamente a ${result.agenciesCount} agencia(s)`, \n          'Éxito', \n          { duration: 3000 }\n        );\n      }\n    });\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-4\">\n    <div>\n    </div>\n    <div class=\"flex items-center gap-3\">\n      <!-- Botón Nuevo -->\n              <button \n        mat-raised-button \n        color=\"primary\" \n        (click)=\"addDocumentoRequerido()\"\n        [disabled]=\"!isConfigurationSelected() || loading\"\n        matTooltip=\"Agregar nueva configuración de documentos\"\n        class=\"flex items-center gap-2\">\n        <mat-icon>add</mat-icon>\n        Nueva Configuración\n      </button>\n      \n      <!-- Botón Duplicar -->\n      <button \n        mat-raised-button \n        color=\"accent\" \n        (click)=\"duplicateConfiguration()\"\n        [disabled]=\"!canDuplicateConfiguration() || loading\"\n        matTooltip=\"Duplicar configuración a otras agencias\"\n        class=\"flex items-center gap-2\">\n        <mat-icon>content_copy</mat-icon>\n        Duplicar Configuración\n      </button>\n      \n      <!-- Indicador de carga -->\n      <div *ngIf=\"loading\" class=\"flex items-center gap-2 text-blue-600\">\n        <mat-spinner diameter=\"20\"></mat-spinner>\n        <span class=\"text-sm\">Cargando...</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Filtros de Configuración -->\n  <div class=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <h3 class=\"text-lg font-medium text-gray-900\">Selección de Configuración</h3>\n      \n\n      \n      <!-- Botones de acción a la derecha -->\n      <div class=\"flex items-center gap-3\">\n        <!-- Botón de Limpiar Filtros -->\n        <button \n          mat-stroked-button \n          color=\"warn\" \n          (click)=\"clearFilters()\"\n          [disabled]=\"!selectedProcess && !selectedAgency && !selectedCustomerType && !selectedOperationType\"\n          matTooltip=\"Limpiar selección\"\n          class=\"flex items-center gap-2\">\n          <mat-icon>clear_all</mat-icon>\n          Limpiar Selección\n        </button>\n        \n        <!-- Botón de Reload -->\n        <button \n          mat-stroked-button \n          color=\"accent\" \n          (click)=\"refreshData()\"\n          [disabled]=\"loading\"\n          matTooltip=\"Recargar datos\"\n          class=\"flex items-center gap-2\">\n          <mat-icon [class.animate-spin]=\"loading\">refresh</mat-icon>\n          Recargar\n        </button>\n\n\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n      <!-- Agencia -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Agencia</mat-label>\n        <mat-select [(ngModel)]=\"selectedAgency\" (ngModelChange)=\"onConfigurationChange()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Seleccionar todas las agencias</mat-option>\n          <mat-option *ngFor=\"let agency of agencies\" [value]=\"agency.Id\">\n            {{ agency.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n\n      <!-- Proceso -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Proceso</mat-label>\n        <mat-select [(ngModel)]=\"selectedProcess\" (ngModelChange)=\"onConfigurationChange()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Seleccionar todos los procesos</mat-option>\n          <mat-option *ngFor=\"let process of processes\" [value]=\"process.Id\">\n            {{ process.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n\n      <!-- Tipo de Cliente -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Tipo de Cliente</mat-label>\n        <mat-select [(ngModel)]=\"selectedCustomerType\" (ngModelChange)=\"onConfigurationChange()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Seleccionar todos los tipos de cliente</mat-option>\n          <mat-option *ngFor=\"let customerType of customerTypes\" [value]=\"customerType.Id\">\n            {{ customerType.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n\n      <!-- Tipo Operación -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Tipo Operación</mat-label>\n        <mat-select [(ngModel)]=\"selectedOperationType\" (ngModelChange)=\"onConfigurationChange()\" [disabled]=\"loadingCatalogs\">\n          <mat-option value=\"\">Seleccionar todos los tipos de operación</mat-option>\n          <mat-option *ngFor=\"let operationType of operationTypes\" [value]=\"operationType.Id\">\n            {{ operationType.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n      </mat-form-field>\n\n      <!-- Botón de Modificar -->\n      <div class=\"flex flex-col items-start\">\n        <button \n          mat-stroked-button \n          color=\"accent\" \n          (click)=\"editConfiguration()\"\n          [disabled]=\"!hasDataForConfiguration()\"\n          matTooltip=\"Modificar configuración general de esta combinación de filtros\"\n          class=\"flex items-center gap-2 w-full\">\n          <mat-icon>edit</mat-icon>\n          Modificar\n        </button>\n        \n        <!-- Mensaje informativo -->\n        <div *ngIf=\"!hasDataForConfiguration()\" class=\"mt-1 text-xs text-gray-500 text-center w-full\">\n          Para modificar: selecciona todos los filtros\n        </div>\n      </div>\n      \n\n    </div>\n\n    <!-- Mensaje de estado de catálogos -->\n    <div *ngIf=\"loadingCatalogs\" class=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n      <div class=\"flex items-center gap-2 text-blue-700\">\n        <mat-spinner diameter=\"20\"></mat-spinner>\n        <span class=\"text-sm font-medium\">Cargando catálogos...</span>\n      </div>\n    </div>\n\n    <div *ngIf=\"!loadingCatalogs && (processes.length === 0 || agencies.length === 0 || customerTypes.length === 0 || operationTypes.length === 0)\" \n         class=\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n      <div class=\"flex items-center gap-2 text-yellow-700\">\n        <mat-icon>warning</mat-icon>\n        <span class=\"text-sm\">Algunos catálogos no se pudieron cargar. Verifica la conexión.</span>\n      </div>\n    </div>\n\n\n  </div>\n\n  <!-- Tabla -->\n  <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\n    <!-- Información de registros -->\n    <div *ngIf=\"!loading && dataSource.data.length > 0\" class=\"px-4 py-2 bg-gray-50 border-b text-sm text-gray-600\">\n      Mostrando {{ dataSource.data.length }} registros\n    </div>\n    \n    <div class=\"relative\">\n      <!-- Loading Spinner -->\n      <div *ngIf=\"loading\" class=\"absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center z-10\">\n        <mat-spinner diameter=\"50\"></mat-spinner>\n      </div>\n\n      <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full compact-table\" style=\"line-height: 1;\">\n        <!-- Columna ID -->\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-12 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            ID\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"text-center text-xs font-mono text-gray-600 py-0\">\n            {{ element.Id }}\n          </td>\n        </ng-container>\n\n        <!-- Columna Agencia -->\n        <ng-container matColumnDef=\"agencia\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-40 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            Agencia\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"py-0\">\n            <span class=\"text-xs text-gray-700\">{{ element.AgenciaName || 'N/A' }}</span>\n          </td>\n        </ng-container>\n\n        <!-- Columna Proceso -->\n        <ng-container matColumnDef=\"proceso\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-40 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            Proceso\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"py-0\">\n            <span class=\"text-xs text-gray-700\">{{ element.ProcesoName || 'N/A' }}</span>\n          </td>\n        </ng-container>\n\n        <!-- Columna Tipo de Cliente -->\n        <ng-container matColumnDef=\"tipoCliente\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-40 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            Tipo Cliente\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"py-0\">\n            <span class=\"text-xs text-gray-700\">{{ element.TipoClienteName || 'N/A' }}</span>\n          </td>\n        </ng-container>\n\n        <!-- Columna Tipo de Operación -->\n        <ng-container matColumnDef=\"tipoOperacion\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-40 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            Tipo Operación\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"py-0\">\n            <span class=\"text-xs text-gray-700\">{{ element.TipoOperacionName || 'N/A' }}</span>\n          </td>\n        </ng-container>\n\n        <!-- Columna Tipo de Documento -->\n        <ng-container matColumnDef=\"tipoDocumento\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-40 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            Tipo de Documento\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"px-1.5 py-0 text-sm text-gray-900\">\n            {{ element.TipoDocumentoName }}\n          </td>\n        </ng-container>\n\n        <!-- Columna Requerido -->\n        <ng-container matColumnDef=\"requerido\">\n          <th mat-header-cell *matHeaderCellDef class=\"w-20 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            Requerido\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"text-center py-0\">\n            <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\"\n                  [ngClass]=\"element.Required === '1' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\">\n              {{ element.Required === '1' ? 'Sí' : 'No' }}\n            </span>\n          </td>\n        </ng-container>\n\n        <!-- Columna Requiere Expiración -->\n        <ng-container matColumnDef=\"requiereExpiracion\">\n          <th mat-header-cell *matHeaderCellDef class=\"w-24 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n            Expiración\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"text-center py-0\">\n            <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\"\n                  [ngClass]=\"element.ReqExpiration === '1' ? 'bg-orange-100 text-orange-800' : 'bg-gray-100 text-gray-800'\">\n              {{ element.ReqExpiration === '1' ? 'Sí' : 'No' }}\n            </span>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row \n            *matRowDef=\"let row; columns: displayedColumns;\"\n            (click)=\"onRowClick(row)\"\n            [class.bg-blue-50]=\"selectedItem?.Id === row.Id\"\n            class=\"cursor-pointer hover:bg-gray-50 transition-colors !min-h-0 !h-8\">\n        </tr>\n      </table>\n\n      <!-- No Data Message -->\n      <div *ngIf=\"dataSource.data.length === 0 && !loading\" class=\"text-center py-8\">\n        <mat-icon class=\"text-gray-400 text-6xl mb-4\">description</mat-icon>\n        <p class=\"text-gray-500 text-lg\">No hay documentos requeridos configurados</p>\n        <p class=\"text-gray-400\" *ngIf=\"!isConfigurationSelected()\">\n          <strong>Para comenzar:</strong> Selecciona filtros específicos, deja en \"Seleccionar todos\" para ver todos los documentos, o crea una nueva configuración\n        </p>\n        <p class=\"text-gray-400\" *ngIf=\"isConfigurationSelected()\">\n          Haz clic en \"Nueva Configuración\" para agregar la primera configuración de documentos\n        </p>\n        <div *ngIf=\"!isConfigurationSelected()\" class=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg max-w-md mx-auto\">\n          <p class=\"text-blue-700 text-sm font-medium\">Estado de los catálogos:</p>\n          <ul class=\"text-blue-600 text-sm mt-2 space-y-1\">\n            <li>• Agencias: {{ agencies.length }} cargadas</li>\n            <li>• Procesos: {{ processes.length }} cargados</li>\n            <li>• Tipos de Cliente: {{ customerTypes.length }} cargados</li>\n            <li>• Tipos de Operación: {{ operationTypes.length }} cargados</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <!-- Paginación -->\n    <mat-paginator \n      [pageSizeOptions]=\"[10, 25, 50, 100, 200, 500, 1000]\" \n      [pageSize]=\"10\"\n      showFirstLastButtons \n      aria-label=\"Seleccionar página de documentos requeridos\">\n    </mat-paginator>\n  </div>\n</div>\n","\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { AgencyService, Agency } from '../../../../core/services/agency.service';\nimport { DocumentoRequeridoService } from '../../../../core/services/documento-requerido.service';\n\nexport interface DuplicateConfigurationData {\n  configuracion: {\n    IdProcess: string;\n    IdAgency: number;\n    IdCostumerType: string;\n    IdOperationType: string;\n  };\n  currentAgencyName: string;\n  processName: string;\n  customerTypeName: string;\n  operationTypeName: string;\n}\n\n@Component({\n  selector: 'app-duplicate-configuration-dialog',\n  templateUrl: './duplicate-configuration-dialog.component.html',\n  styleUrls: ['./duplicate-configuration-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatChipsModule\n  ]\n})\nexport class DuplicateConfigurationDialogComponent implements OnInit {\n  loading = false;\n  agencies: Agency[] = [];\n  availableAgencies: Agency[] = [];\n  selectedAgencies: number[] = [];\n  searchTerm = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<DuplicateConfigurationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DuplicateConfigurationData,\n    private agencyService: AgencyService,\n    private documentoRequeridoService: DocumentoRequeridoService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.loadAgencies();\n  }\n\n  async loadAgencies(): Promise<void> {\n    this.loading = true;\n    try {\n      // Cargar todas las agencias\n      const response = await this.agencyService.getAgencies().toPromise();\n      this.agencies = response?.data?.agencies || [];\n      \n      // Filtrar agencias disponibles (excluyendo la actual)\n      this.availableAgencies = this.agencies.filter(agency => \n        agency.Id !== this.data.configuracion.IdAgency\n      );\n\n      // Verificar qué agencias ya tienen esta configuración\n      await this.checkExistingConfigurations();\n      \n    } catch (error) {\n      console.error('Error cargando agencias:', error);\n      this.snackBar.open('Error cargando agencias', 'Error', { duration: 3000 });\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  async checkExistingConfigurations(): Promise<void> {\n    try {\n      // Para cada agencia disponible, verificar si ya tiene esta configuración\n      const promises = this.availableAgencies.map(async (agency) => {\n        // Verificar si existe configuración para esta agencia\n        const hasConfig = await this.documentoRequeridoService.getDocumentosRequeridos({\n          IdProcess: this.data.configuracion.IdProcess,\n          IdAgency: agency.Id.toString(),\n          IdCostumerType: this.data.configuracion.IdCostumerType,\n          IdOperationType: this.data.configuracion.IdOperationType\n        }).toPromise();\n        \n        return { agency, hasConfig: hasConfig?.success && hasConfig.data?.documentos?.length > 0 };\n      });\n\n      const results = await Promise.all(promises);\n      \n      // Solo mostrar agencias que NO tienen esta configuración\n      this.availableAgencies = results\n        .filter(result => !result.hasConfig)\n        .map(result => result.agency);\n\n    } catch (error) {\n      console.error('Error verificando configuraciones existentes:', error);\n      // En caso de error, mostrar todas las agencias disponibles\n    }\n  }\n\n  onAgencySelectionChange(agencyId: number, checked: boolean): void {\n    if (checked) {\n      if (!this.selectedAgencies.includes(agencyId)) {\n        this.selectedAgencies.push(agencyId);\n      }\n    } else {\n      this.selectedAgencies = this.selectedAgencies.filter(id => id !== agencyId);\n    }\n  }\n\n  isAgencySelected(agencyId: number): boolean {\n    return this.selectedAgencies.includes(agencyId);\n  }\n\n  getAgencyName(agencyId: number): string {\n    const agency = this.agencies.find(a => a.Id === agencyId);\n    return agency ? agency.Name : `Agencia ${agencyId}`;\n  }\n\n  selectAllAgencies(): void {\n    this.selectedAgencies = this.availableAgencies.map(agency => agency.Id);\n  }\n\n  deselectAllAgencies(): void {\n    this.selectedAgencies = [];\n  }\n\n  get filteredAgencies(): Agency[] {\n    if (!this.searchTerm) {\n      return this.availableAgencies;\n    }\n    \n    return this.availableAgencies.filter(agency =>\n      agency.Name.toLowerCase().includes(this.searchTerm.toLowerCase())\n    );\n  }\n\n  canDuplicate(): boolean {\n    return this.selectedAgencies.length > 0 && !this.loading;\n  }\n\n  async duplicateConfiguration(): Promise<void> {\n    if (!this.canDuplicate()) {\n      return;\n    }\n\n    this.loading = true;\n    try {\n      // Duplicar la configuración para cada agencia seleccionada\n      const promises = this.selectedAgencies.map(async (agencyId) => {\n        const sourceConfig = {\n          IdProcess: this.data.configuracion.IdProcess,\n          IdAgency: this.data.configuracion.IdAgency.toString(),\n          IdCostumerType: this.data.configuracion.IdCostumerType,\n          IdOperationType: this.data.configuracion.IdOperationType\n        };\n\n        const targetConfig = {\n          IdProcess: this.data.configuracion.IdProcess,\n          IdAgency: agencyId.toString(),\n          IdCostumerType: this.data.configuracion.IdCostumerType,\n          IdOperationType: this.data.configuracion.IdOperationType\n        };\n\n        return this.documentoRequeridoService.duplicateConfiguracion(sourceConfig, targetConfig).toPromise();\n      });\n\n      await Promise.all(promises);\n\n      this.snackBar.open(\n        `Configuración duplicada exitosamente a ${this.selectedAgencies.length} agencia(s)`, \n        'Éxito', \n        { duration: 3000 }\n      );\n\n      this.dialogRef.close({ success: true, agenciesCount: this.selectedAgencies.length });\n\n    } catch (error) {\n      console.error('Error duplicando configuración:', error);\n      this.snackBar.open('Error duplicando configuración', 'Error', { duration: 3000 });\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <div>\n      <h2 class=\"text-2xl font-bold text-gray-900\">Duplicar Configuración</h2>\n      <p class=\"text-gray-600 mt-1\">Replicar configuración de documentos a otras agencias</p>\n    </div>\n    <button \n      mat-icon-button \n      (click)=\"cancel()\"\n      class=\"text-gray-400 hover:text-gray-600\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Información de la Configuración Actual -->\n  <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mb-6\">\n    <h3 class=\"text-sm font-medium text-blue-900 mb-2\">Configuración a Duplicar</h3>\n    <div class=\"flex flex-wrap gap-x-6 gap-y-1\">\n      <div class=\"flex items-center space-x-1\">\n        <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Proceso:</span>\n        <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ data.processName }}</span>\n      </div>\n      <div class=\"flex items-center space-x-1\">\n        <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Agencia:</span>\n        <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ data.currentAgencyName }}</span>\n      </div>\n      <div class=\"flex items-center space-x-1\">\n        <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Cliente:</span>\n        <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ data.customerTypeName }}</span>\n      </div>\n      <div class=\"flex items-center space-x-1\">\n        <span class=\"text-xs font-medium text-blue-700 uppercase tracking-wide min-w-12\">Operación:</span>\n        <span class=\"text-sm text-gray-800 font-medium bg-white px-2 py-0.5 rounded border border-blue-200 shadow-sm\">{{ data.operationTypeName }}</span>\n      </div>\n    </div>\n    \n    <!-- Descripción -->\n    <p class=\"text-xs text-gray-500 mt-2 italic\">\n      Esta configuración será replicada a las agencias seleccionadas\n    </p>\n  </div>\n\n  <!-- Selección de Agencias -->\n  <div class=\"bg-white border border-gray-200 rounded-lg p-4 mb-6\">\n    <div class=\"flex items-center justify-between mb-3\">\n      <h3 class=\"text-lg font-medium text-gray-900\">Agencias Destino</h3>\n      <div class=\"flex items-center gap-2\">\n        <button \n          mat-stroked-button \n          color=\"primary\" \n          (click)=\"selectAllAgencies()\"\n          [disabled]=\"loading || availableAgencies.length === 0\"\n          class=\"text-xs px-3 py-1\">\n          Seleccionar Todas\n        </button>\n        <button \n          mat-stroked-button \n          color=\"warn\" \n          (click)=\"deselectAllAgencies()\"\n          [disabled]=\"loading || selectedAgencies.length === 0\"\n          class=\"text-xs px-3 py-1\">\n          Deseleccionar Todas\n        </button>\n      </div>\n    </div>\n\n    <!-- Buscador -->\n    <div class=\"mb-3\">\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Buscar agencias</mat-label>\n        <input \n          matInput \n          [(ngModel)]=\"searchTerm\" \n          placeholder=\"Escribe para filtrar agencias...\"\n          class=\"text-sm\">\n        <mat-icon matSuffix>search</mat-icon>\n      </mat-form-field>\n    </div>\n\n    <!-- Lista de Agencias -->\n    <div class=\"max-h-96 overflow-y-auto border border-gray-200 rounded-lg\">\n      <div *ngIf=\"loading\" class=\"flex items-center justify-center p-6\">\n        <mat-spinner diameter=\"24\"></mat-spinner>\n        <span class=\"ml-2 text-gray-600 text-sm\">Cargando agencias...</span>\n      </div>\n\n      <div *ngIf=\"!loading && filteredAgencies.length === 0\" class=\"p-6 text-center text-gray-500\">\n        <mat-icon class=\"text-3xl text-gray-300 mb-2\">business</mat-icon>\n        <p class=\"text-base font-medium\">No hay agencias disponibles</p>\n        <p class=\"text-xs\">Todas las agencias ya tienen esta configuración o no hay agencias para mostrar.</p>\n      </div>\n\n      <div *ngIf=\"!loading && filteredAgencies.length > 0\" class=\"divide-y divide-gray-100\">\n        <div \n          *ngFor=\"let agency of filteredAgencies\" \n          class=\"flex items-center p-2 hover:bg-gray-50 transition-colors\">\n          <mat-checkbox\n            [checked]=\"isAgencySelected(agency.Id)\"\n            (change)=\"onAgencySelectionChange(agency.Id, $event.checked)\"\n            [disabled]=\"loading\"\n            color=\"primary\"\n            class=\"mr-2 scale-90\">\n          </mat-checkbox>\n          <div class=\"flex-1 min-w-0\">\n            <div class=\"font-medium text-gray-900 text-sm truncate\">{{ agency.Name }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Contador de seleccionadas -->\n    <div class=\"mt-2 flex items-center justify-between\">\n      <div class=\"text-xs text-gray-600\">\n        <span class=\"font-medium\">{{ selectedAgencies.length }}</span> de {{ availableAgencies.length }} agencias seleccionadas\n      </div>\n      <div *ngIf=\"selectedAgencies.length > 0\" class=\"flex items-center gap-1\">\n        <mat-chip \n          *ngFor=\"let agencyId of selectedAgencies.slice(0, 4)\" \n          class=\"text-xs scale-90\">\n          {{ getAgencyName(agencyId) }}\n        </mat-chip>\n        <span *ngIf=\"selectedAgencies.length > 4\" class=\"text-xs text-gray-500\">\n          +{{ selectedAgencies.length - 4 }} más\n        </span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Acciones -->\n  <div class=\"flex items-center justify-end gap-3 pt-4 border-t border-gray-200\">\n    <button \n      mat-stroked-button \n      (click)=\"cancel()\"\n      [disabled]=\"loading\"\n      class=\"px-6\">\n      Cancelar\n    </button>\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"duplicateConfiguration()\"\n      [disabled]=\"!canDuplicate()\"\n      [class.loading]=\"loading\"\n      class=\"px-6 flex items-center gap-2\">\n      <mat-spinner *ngIf=\"loading\" diameter=\"20\"></mat-spinner>\n      <mat-icon *ngIf=\"!loading\">content_copy</mat-icon>\n      {{ loading ? 'Duplicando...' : 'Duplicar Configuración' }}\n    </button>\n  </div>\n"],"names":["HttpParams","map","AgencyService","constructor","http","apiBaseService","API_URL","getAgencies","params","httpParams","enabled","undefined","set","toString","search","limit","offset","sort_by","sort_order","url","buildApiUrl","console","log","get","getAgenciesPaginated","page","perPage","filters","sortBy","sortOrder","name","pipe","response","success","data","totalPages","Math","ceil","total","agencies","per_page","current_page","total_pages","has_next","has_prev","Error","message","getAgencyById","id","createAgency","agency","post","updateAgency","put","deleteAgency","force","delete","toggleAgencyStatus","patch","searchAgencies","query","getAgencyStats","getEnabledAgencies","validateAgencyData","errors","Name","trim","length","push","IdAgency","Enabled","includes","valid","prepareAgencyData","isUpdate","preparedData","mapAgencyResponse","Id","RegistrationDate","UpdateDate","IdLastUserUpdate","LastUserUpdateName","mapAgenciesResponse","_","i0","ɵɵinject","i1","HttpClient","i2","ApiBaseService","_2","factory","ɵfac","providedIn","DocumentoRequeridoService","getDocumentosRequeridos","IdProcess","IdCostumerType","IdOperationType","IdDocumentType","Required","getDocumentoRequeridoById","createDocumentoRequerido","updateDocumentoRequerido","deleteDocumentoRequerido","getDocumentosRequeridosStats","getDocumentosByConfiguracion","idProcess","idAgency","idCostumerType","idOperationType","reorderDocumentosRequeridos","documentos","duplicateConfiguracion","sourceConfig","targetConfig","source","target","exportConfiguracion","responseType","CommonModule","ReactiveFormsModule","FormsModule","Validators","MAT_DIALOG_DATA","MatDialogModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatProgressSpinnerModule","MatTooltipModule","MatCheckboxModule","MatSlideToggleModule","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DocumentoRequeridoEditDialogComponent_div_48_button_12_Template_button_click_0_listener","ɵɵrestoreView","_r17","ctx_r16","ɵɵnextContext","ɵɵresetView","clearSearch","ɵɵproperty","phase_r18","ɵɵadvance","ɵɵtextInterpolate1","subPhase_r19","DocumentoRequeridoEditDialogComponent_div_48_button_27_Template_button_click_0_listener","_r21","ctx_r20","clearAllFilters","tipo_r23","ProcessTypeName","SubProcessName","DocumentoRequeridoEditDialogComponent_div_48_div_33_div_2_Template_mat_checkbox_change_1_listener","$event","restoredCtx","_r29","$implicit","ctx_r28","onDocumentTypeChange","ɵɵtemplate","DocumentoRequeridoEditDialogComponent_div_48_div_33_div_2_span_6_Template","DocumentoRequeridoEditDialogComponent_div_48_div_33_div_2_span_7_Template","ctx_r22","isDocumentTypeSelected","ɵɵtextInterpolate","DocumentoRequeridoEditDialogComponent_div_48_div_33_div_2_Template","ctx_r11","filteredTiposDocumento","ctx_r13","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_3_Template_button_click_2_listener","_r35","ctx_r34","ctx_r30","searchTerm","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_4_Template_button_click_2_listener","_r37","ctx_r36","selectedPhase","onPhaseChange","ctx_r31","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_5_Template_button_click_2_listener","_r39","ctx_r38","selectedSubPhase","onSubPhaseChange","ctx_r32","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_6_Template_button_click_2_listener","_r41","ctx_r40","clearShowOnlySelectedFilter","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_3_Template","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_4_Template","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_5_Template","DocumentoRequeridoEditDialogComponent_div_48_div_40_span_6_Template","ctx_r15","showOnlySelected","DocumentoRequeridoEditDialogComponent_div_48_Template_input_ngModelChange_9_listener","_r43","ctx_r42","ctx_r44","onSearchChange","DocumentoRequeridoEditDialogComponent_div_48_button_12_Template","DocumentoRequeridoEditDialogComponent_div_48_Template_mat_select_ngModelChange_16_listener","ctx_r45","ctx_r46","DocumentoRequeridoEditDialogComponent_div_48_mat_option_19_Template","DocumentoRequeridoEditDialogComponent_div_48_Template_mat_select_ngModelChange_23_listener","ctx_r47","ctx_r48","DocumentoRequeridoEditDialogComponent_div_48_mat_option_26_Template","DocumentoRequeridoEditDialogComponent_div_48_button_27_Template","DocumentoRequeridoEditDialogComponent_div_48_Template_mat_slide_toggle_change_29_listener","ctx_r49","onShowOnlySelectedChange","DocumentoRequeridoEditDialogComponent_div_48_div_31_Template","DocumentoRequeridoEditDialogComponent_div_48_div_32_Template","DocumentoRequeridoEditDialogComponent_div_48_div_33_Template","DocumentoRequeridoEditDialogComponent_div_48_div_34_Template","DocumentoRequeridoEditDialogComponent_div_48_span_38_Template","DocumentoRequeridoEditDialogComponent_div_48_span_39_Template","DocumentoRequeridoEditDialogComponent_div_48_div_40_Template","ctx_r1","availablePhases","availableSubPhases","hasActiveFilters","tmp_12_0","documentoForm","hasError","touched","ɵɵtextInterpolate2","getSelectedDocumentTypesCount","tiposDocumento","DocumentoRequeridoEditDialogComponent_button_50_Template_button_click_0_listener","_r51","ctx_r50","debugFormState","ctx_r4","mode","DocumentoRequeridoEditDialogComponent","fb","documentoRequeridoService","procesoService","agencyService","costumerTypeService","tipoOperacionService","documentTypeService","dialogRef","snackBar","loading","loadingCatalogs","catalogsProcessed","totalCatalogs","procesos","agencias","tiposCliente","tiposOperacion","selectedDocumentTypes","ngOnInit","initializeForm","loadCatalogs","setTimeout","group","required","documento","patchValue","configuracion","loadExistingDocuments","subscribe","next","existingDocumentTypeIds","doc","slice","value","applyFilters","error","getProcesos","processes","checkCatalogsLoaded","getCostumerTypes","costumer_types","getTiposOperacion","operationTypes","getDocumentTypes","document_types","extractAvailablePhases","onSubmit","open","duration","createdCount","errorCount","totalToCreate","forEach","documentTypeId","index","documentoData","close","onCancel","getTitle","getSubmitButtonText","isSelected","parseInt","Array","isArray","event","checked","indexOf","splice","getProcessText","processId","process","find","p","getAgencyText","agencyId","a","getCustomerTypeText","customerTypeId","customerType","t","getOperationTypeText","operationTypeId","operationType","phase","updateAvailableSubPhases","subPhase","phases","Set","subPhases","tipo","add","from","sort","filter","filtered","searchLower","toLowerCase","beforeFilter","ɵɵdirectiveInject","FormBuilder","i3","ProcesoService","i4","i5","CostumerTypeService","i6","TipoOperacionService","i7","DocumentTypeService","i8","MatDialogRef","i9","MatSnackBar","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DocumentoRequeridoEditDialogComponent_Template","rf","ctx","DocumentoRequeridoEditDialogComponent_Template_button_click_4_listener","DocumentoRequeridoEditDialogComponent_Template_form_ngSubmit_7_listener","DocumentoRequeridoEditDialogComponent_div_47_Template","DocumentoRequeridoEditDialogComponent_div_48_Template","DocumentoRequeridoEditDialogComponent_button_50_Template","DocumentoRequeridoEditDialogComponent_Template_button_click_51_listener","DocumentoRequeridoEditDialogComponent_mat_spinner_54_Template","DocumentoRequeridoEditDialogComponent_mat_icon_55_Template","tmp_2_0","tmp_4_0","invalid","i10","NgForOf","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","NgModel","i11","MatButton","MatIconButton","i12","MatIcon","i13","MatFormField","MatLabel","MatSuffix","i14","MatInput","i15","MatSelect","i16","MatOption","i17","MatProgressSpinner","i18","MatTooltip","i19","MatCheckbox","i20","MatSlideToggle","styles","MatTableDataSource","MatPaginator","MatSort","MatTableModule","MatPaginatorModule","MatSortModule","DuplicateConfigurationDialogComponent","agency_r33","process_r34","customerType_r35","operationType_r36","ctx_r12","dataSource","element_r37","element_r38","AgenciaName","element_r39","ProcesoName","element_r40","TipoClienteName","element_r41","TipoOperacionName","element_r42","TipoDocumentoName","element_r43","element_r44","ReqExpiration","DocumentosRequeridosComponent_tr_97_Template_tr_click_0_listener","_r47","row_r45","onRowClick","ɵɵclassProp","selectedItem","customerTypes","DocumentosRequeridosComponent_div_98_p_5_Template","DocumentosRequeridosComponent_div_98_p_6_Template","DocumentosRequeridosComponent_div_98_div_7_Template","isConfigurationSelected","DocumentosRequeridosComponent","dialog","displayedColumns","selectedProcess","selectedAgency","selectedCustomerType","selectedOperationType","stats","loadData","ngAfterViewInit","paginator","testUrl","status","onConfigurationChange","hasDataForConfiguration","clearFilters","refreshData","addDocumentoRequerido","width","afterClosed","result","editDocumentoRequerido","item","editConfiguration","element","canDuplicateConfiguration","duplicateConfiguration","currentAgency","currentProcess","currentCustomerType","c","currentOperationType","o","currentAgencyName","processName","customerTypeName","operationTypeName","agenciesCount","MatDialog","viewQuery","DocumentosRequeridosComponent_Query","DocumentosRequeridosComponent_Template_button_click_4_listener","DocumentosRequeridosComponent_Template_button_click_8_listener","DocumentosRequeridosComponent_div_12_Template","DocumentosRequeridosComponent_Template_button_click_18_listener","DocumentosRequeridosComponent_Template_button_click_22_listener","DocumentosRequeridosComponent_Template_mat_select_ngModelChange_30_listener","DocumentosRequeridosComponent_mat_option_33_Template","DocumentosRequeridosComponent_mat_icon_34_Template","DocumentosRequeridosComponent_Template_mat_select_ngModelChange_38_listener","DocumentosRequeridosComponent_mat_option_41_Template","DocumentosRequeridosComponent_mat_icon_42_Template","DocumentosRequeridosComponent_Template_mat_select_ngModelChange_46_listener","DocumentosRequeridosComponent_mat_option_49_Template","DocumentosRequeridosComponent_mat_icon_50_Template","DocumentosRequeridosComponent_Template_mat_select_ngModelChange_54_listener","DocumentosRequeridosComponent_mat_option_57_Template","DocumentosRequeridosComponent_mat_icon_58_Template","DocumentosRequeridosComponent_Template_button_click_60_listener","DocumentosRequeridosComponent_div_64_Template","DocumentosRequeridosComponent_div_65_Template","DocumentosRequeridosComponent_div_66_Template","DocumentosRequeridosComponent_div_68_Template","DocumentosRequeridosComponent_div_70_Template","ɵɵelementContainerStart","DocumentosRequeridosComponent_th_73_Template","DocumentosRequeridosComponent_td_74_Template","ɵɵelementContainerEnd","DocumentosRequeridosComponent_th_76_Template","DocumentosRequeridosComponent_td_77_Template","DocumentosRequeridosComponent_th_79_Template","DocumentosRequeridosComponent_td_80_Template","DocumentosRequeridosComponent_th_82_Template","DocumentosRequeridosComponent_td_83_Template","DocumentosRequeridosComponent_th_85_Template","DocumentosRequeridosComponent_td_86_Template","DocumentosRequeridosComponent_th_88_Template","DocumentosRequeridosComponent_td_89_Template","DocumentosRequeridosComponent_th_91_Template","DocumentosRequeridosComponent_td_92_Template","DocumentosRequeridosComponent_th_94_Template","DocumentosRequeridosComponent_td_95_Template","DocumentosRequeridosComponent_tr_96_Template","DocumentosRequeridosComponent_tr_97_Template","DocumentosRequeridosComponent_div_98_Template","ɵɵpureFunction0","_c0","NgClass","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","MatChipsModule","DuplicateConfigurationDialogComponent_div_55_div_1_Template_mat_checkbox_change_1_listener","_r9","agency_r7","ctx_r8","onAgencySelectionChange","ctx_r6","isAgencySelected","DuplicateConfigurationDialogComponent_div_55_div_1_Template","ctx_r2","filteredAgencies","ctx_r10","getAgencyName","agencyId_r12","selectedAgencies","DuplicateConfigurationDialogComponent_div_61_mat_chip_1_Template","DuplicateConfigurationDialogComponent_div_61_span_2_Template","ctx_r3","availableAgencies","loadAgencies","_this","_asyncToGenerator","toPromise","checkExistingConfigurations","_this2","promises","_ref","hasConfig","_x","apply","arguments","results","Promise","all","selectAllAgencies","deselectAllAgencies","canDuplicate","_this3","_ref2","_x2","cancel","DuplicateConfigurationDialogComponent_Template","DuplicateConfigurationDialogComponent_Template_button_click_7_listener","DuplicateConfigurationDialogComponent_Template_button_click_41_listener","DuplicateConfigurationDialogComponent_Template_button_click_43_listener","DuplicateConfigurationDialogComponent_Template_input_ngModelChange_49_listener","DuplicateConfigurationDialogComponent_div_53_Template","DuplicateConfigurationDialogComponent_div_54_Template","DuplicateConfigurationDialogComponent_div_55_Template","DuplicateConfigurationDialogComponent_div_61_Template","DuplicateConfigurationDialogComponent_Template_button_click_63_listener","DuplicateConfigurationDialogComponent_Template_button_click_65_listener","DuplicateConfigurationDialogComponent_mat_spinner_66_Template","DuplicateConfigurationDialogComponent_mat_icon_67_Template","MatChip"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}