{"version":3,"file":"src_app_pages_configuracion_tipos-documento_tipos-documento_component_ts.js","mappings":"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","sources":["./src/app/pages/configuracion/tipos-documento/document-type-edit-dialog/document-type-edit-dialog.component.ts","./src/app/pages/configuracion/tipos-documento/document-type-edit-dialog/document-type-edit-dialog.component.html","./src/app/pages/configuracion/tipos-documento/tipos-documento.component.ts","./src/app/pages/configuracion/tipos-documento/tipos-documento.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DocumentType, DocumentTypeCreateRequest, DocumentTypeUpdateRequest, DocumentTypeEditDialogData } from '../../../../core/interfaces/document-type.interface';\nimport { DocumentTypeService } from '../../../../core/services/document-type.service';\n\n@Component({\n  selector: 'app-document-type-edit-dialog',\n  templateUrl: './document-type-edit-dialog.component.html',\n  styleUrls: ['./document-type-edit-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule\n  ]\n})\nexport class DocumentTypeEditDialogComponent implements OnInit {\n  documentTypeForm!: FormGroup;\n  loading = false;\n  loadingCatalogs = false;\n  fileStatuses: any[] = [];\n  subProcesses: any[] = [];\n\n  // Propiedad para controlar si la sub fase está habilitada\n  isSubPhaseEnabled: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private documentTypeService: DocumentTypeService,\n    private dialogRef: MatDialogRef<DocumentTypeEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DocumentTypeEditDialogData,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.loadCatalogs();\n    this.populateForm();\n    \n    // Escuchar cambios en la fase para habilitar/deshabilitar sub fase\n    this.documentTypeForm.get('IdProcessType')?.valueChanges.subscribe(selectedPhase => {\n      console.log('🔄 Fase cambiada a:', selectedPhase);\n      this.isSubPhaseEnabled = selectedPhase === 'Liberación';\n      console.log('🔒 Sub fase habilitada:', this.isSubPhaseEnabled);\n      \n      if (!this.isSubPhaseEnabled) {\n        // Si la fase no es \"Liberación\", resetear sub fase a \"Sin sub fase\"\n        console.log('❌ Fase no es Liberación, reseteando sub fase a \"Sin sub fase\"');\n        this.documentTypeForm.patchValue({ IdSubProcess: '0' });\n        console.log('🔄 Valor de IdSubProcess establecido a \"0\" (Sin sub fase)');\n      } else {\n        console.log('✅ Fase es Liberación, sub fase habilitada');\n      }\n    });\n  }\n\n  private initializeForm(): void {\n    this.documentTypeForm = this.fb.group({\n      Name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(600)]],\n      Enabled: ['1', Validators.required],\n      ReqExpiration: ['0'],\n      IdProcessType: ['Liberación'], // Valor por defecto: Liberación\n      Required: ['1'],\n      IdSubProcess: ['0'] // Por defecto \"Sin sub fase\"\n    });\n    \n    // Inicializar el estado de la sub fase\n    this.isSubPhaseEnabled = true; // Por defecto es \"Liberación\"\n    console.log('🚀 Formulario inicializado, sub fase habilitada:', this.isSubPhaseEnabled);\n  }\n\n  private loadCatalogs(): void {\n    console.log('🔄 Cargando catálogos...');\n    this.loadingCatalogs = true;\n    \n    // Cargar estados de archivo (File_Status)\n    this.documentTypeService.getActiveFileStatuses().subscribe({\n      next: (fileStatusesResponse) => {\n        console.log('📋 Respuesta de File_Status:', fileStatusesResponse);\n        if (fileStatusesResponse?.success) {\n          this.fileStatuses = fileStatusesResponse.data.file_statuses || [];\n          console.log('✅ Estados de archivo cargados:', this.fileStatuses);\n        } else {\n          console.error('❌ Error en respuesta de File_Status:', fileStatusesResponse);\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error) => {\n        console.error('❌ Error cargando estados de archivo:', error);\n        this.checkCatalogsLoaded();\n      }\n    });\n\n    // Cargar subestados de archivo (File_SubStatus)\n    this.documentTypeService.getActiveSubProcesses().subscribe({\n      next: (subProcessesResponse) => {\n        console.log('📋 Respuesta de File_SubStatus:', subProcessesResponse);\n        if (subProcessesResponse?.success) {\n          this.subProcesses = subProcessesResponse.data.file_sub_statuses || [];\n          console.log('✅ Subestados de archivo cargados:', this.subProcesses);\n        } else {\n          console.error('❌ Error en respuesta de File_SubStatus:', subProcessesResponse);\n        }\n        this.checkCatalogsLoaded();\n      },\n      error: (error) => {\n        console.error('❌ Error cargando subestados de archivo:', error);\n        this.checkCatalogsLoaded();\n      }\n    });\n  }\n\n  private checkCatalogsLoaded(): void {\n    // Verificar si ambos catálogos han terminado de cargar (exitosamente o con error)\n    if (this.fileStatuses.length > 0 || this.subProcesses.length > 0) {\n      this.loadingCatalogs = false;\n      console.log('✅ Catálogos cargados - File_Status:', this.fileStatuses.length, 'File_SubStatus:', this.subProcesses.length);\n    }\n  }\n\n  private populateForm(): void {\n    if (this.data.documentType && this.data.mode === 'edit') {\n      const selectedPhase = this.data.documentType.IdProcessType || '0';\n      \n      this.documentTypeForm.patchValue({\n        Name: this.data.documentType.Name,\n        Enabled: this.data.documentType.Enabled,\n        ReqExpiration: this.data.documentType.ReqExpiration || '0',\n        IdProcessType: selectedPhase,\n        Required: this.data.documentType.Required || '1',\n        IdSubProcess: selectedPhase === 'Liberación' ? (this.data.documentType.IdSubProcess || '0') : '0'\n      });\n      \n      // Actualizar el estado de la sub fase\n      this.isSubPhaseEnabled = selectedPhase === 'Liberación';\n      console.log('📝 Formulario poblado, sub fase habilitada:', this.isSubPhaseEnabled);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.documentTypeForm.valid) {\n      this.loading = true;\n\n      if (this.data.mode === 'create') {\n        this.createDocumentType();\n      } else {\n        this.updateDocumentType();\n      }\n    }\n  }\n\n  private createDocumentType(): void {\n    const documentTypeData: DocumentTypeCreateRequest = {\n      Name: this.documentTypeForm.value.Name,\n      Enabled: this.documentTypeForm.value.Enabled,\n      ReqExpiration: this.documentTypeForm.value.ReqExpiration,\n      IdProcessType: this.documentTypeForm.value.IdProcessType,\n      Required: this.documentTypeForm.value.Required,\n      IdSubProcess: this.documentTypeForm.value.IdSubProcess\n    };\n\n    this.documentTypeService.createDocumentType(documentTypeData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Tipo de documento creado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al crear tipo de documento', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al crear tipo de documento', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  private updateDocumentType(): void {\n    const documentTypeData: DocumentTypeUpdateRequest = {\n      Name: this.documentTypeForm.value.Name,\n      Enabled: this.documentTypeForm.value.Enabled,\n      ReqExpiration: this.documentTypeForm.value.ReqExpiration,\n      IdProcessType: this.documentTypeForm.value.IdProcessType,\n      Required: this.documentTypeForm.value.Required,\n      IdSubProcess: this.documentTypeForm.value.IdSubProcess\n    };\n\n    this.documentTypeService.updateDocumentType(this.data.documentType!.Id!, documentTypeData).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.snackBar.open('Tipo de documento actualizado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al actualizar tipo de documento', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al actualizar tipo de documento', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  get dialogTitle(): string {\n    return this.data.mode === 'create' ? 'Crear Tipo de Documento' : 'Editar Tipo de Documento';\n  }\n\n  get submitButtonText(): string {\n    return this.data.mode === 'create' ? 'Crear' : 'Actualizar';\n  }\n}\n","<div class=\"p-0\">\n  <!-- Header del diálogo -->\n  <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\n    <h2 class=\"text-xl font-semibold text-gray-900\">\n      {{ dialogTitle }}\n    </h2>\n    <button mat-icon-button (click)=\"onCancel()\" matTooltip=\"Cerrar\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Formulario -->\n  <form [formGroup]=\"documentTypeForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6 p-6\">\n    <!-- Nombre -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Nombre del Tipo de Documento</mat-label>\n      <input \n        matInput \n        formControlName=\"Name\" \n        placeholder=\"Ej: CEDULA, PASAPORTE, LICENCIA DE CONDUCIR\"\n        maxlength=\"600\">\n      <mat-hint>Nombre completo del tipo de documento (máximo 600 caracteres)</mat-hint>\n      <mat-error *ngIf=\"documentTypeForm.get('Name')?.hasError('required')\">\n        El nombre es requerido\n      </mat-error>\n      <mat-error *ngIf=\"documentTypeForm.get('Name')?.hasError('minlength')\">\n        El nombre debe tener al menos 3 caracteres\n      </mat-error>\n      <mat-error *ngIf=\"documentTypeForm.get('Name')?.hasError('maxlength')\">\n        El nombre no puede exceder 600 caracteres\n      </mat-error>\n    </mat-form-field>\n\n          <!-- Fase -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Fase</mat-label>\n        <mat-select formControlName=\"IdProcessType\" [disabled]=\"loadingCatalogs\">\n          <mat-option *ngFor=\"let fileStatus of fileStatuses\" [value]=\"fileStatus.Id\">\n            {{ fileStatus.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n        <mat-hint>\n          Fase asociada al documento (Integración, Liquidación, Liberación)\n          <span *ngIf=\"loadingCatalogs\" class=\"text-orange-600\">(Cargando...)</span>\n        </mat-hint>\n      </mat-form-field>\n\n      <!-- Sub Fase -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Sub Fase</mat-label>\n        <mat-select formControlName=\"IdSubProcess\" [disabled]=\"loadingCatalogs || !isSubPhaseEnabled\">\n          <mat-option [value]=\"'0'\">Sin sub fase</mat-option>\n          <mat-option *ngFor=\"let subProcess of subProcesses\" [value]=\"subProcess.Id\">\n            {{ subProcess.Name }}\n          </mat-option>\n        </mat-select>\n        <mat-icon *ngIf=\"loadingCatalogs\" matSuffix class=\"animate-spin\">refresh</mat-icon>\n        <mat-hint>\n          Sub fase asociada al documento (solo disponible si la fase es \"Liberación\")\n          <span *ngIf=\"loadingCatalogs\" class=\"text-orange-600\">(Cargando...)</span>\n          <span class=\"ml-2 text-blue-600\">[Estado: {{ isSubPhaseEnabled ? 'Habilitada' : 'Deshabilitada' }}]</span>\n        </mat-hint>\n      </mat-form-field>\n\n    <!-- Configuraciones -->\n    <div class=\"grid grid-cols-2 gap-6\">\n      <!-- Requerido -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>¿Es Requerido?</mat-label>\n        <mat-select formControlName=\"Required\">\n          <mat-option [value]=\"'1'\">Sí</mat-option>\n          <mat-option [value]=\"'0'\">No</mat-option>\n        </mat-select>\n        <mat-hint>Si el documento es obligatorio</mat-hint>\n      </mat-form-field>\n\n      <!-- Requiere Expiración -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>¿Requiere Fecha de Expiración?</mat-label>\n        <mat-select formControlName=\"ReqExpiration\">\n          <mat-option [value]=\"'1'\">Sí</mat-option>\n          <mat-option [value]=\"'0'\">No</mat-option>\n        </mat-select>\n        <mat-hint>Si debe tener fecha de expiración</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <!-- Estado -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Estado</mat-label>\n      <mat-select formControlName=\"Enabled\">\n        <mat-option [value]=\"'1'\">Activo</mat-option>\n        <mat-option [value]=\"'0'\">Inactivo</mat-option>\n      </mat-select>\n      <mat-hint>Estado actual del tipo de documento</mat-hint>\n    </mat-form-field>\n\n    <!-- Información adicional (solo lectura en modo edición) -->\n    <div *ngIf=\"data.mode === 'edit'\" class=\"bg-gray-50 p-6 rounded-lg mt-6\">\n      <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Información del Sistema</h3>\n              <div class=\"grid grid-cols-2 gap-6 text-sm\">\n        <div>\n          <span class=\"text-gray-500\">ID:</span>\n          <span class=\"ml-2 font-mono\">{{ data.documentType?.Id }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Último Usuario:</span>\n          <span class=\"ml-2\">{{ data.documentType?.LastUserUpdateName || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Fecha Registro:</span>\n          <span class=\"ml-2\">{{ data.documentType?.RegistrationDate || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Última Actualización:</span>\n          <span class=\"ml-2\">{{ data.documentType?.UpdateDate || 'N/A' }}</span>\n        </div>\n\n      </div>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"flex justify-end space-x-3 pt-6 border-t mt-6\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancel()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"primary\"\n        [disabled]=\"documentTypeForm.invalid || loading\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\">{{ data.mode === 'edit' ? 'save' : 'add' }}</mat-icon>\n        {{ submitButtonText }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DocumentType, DocumentTypeResponse } from '../../../core/interfaces/document-type.interface';\nimport { DocumentTypeService } from '../../../core/services/document-type.service';\nimport { DocumentTypeEditDialogComponent } from './document-type-edit-dialog/document-type-edit-dialog.component';\n\n@Component({\n  selector: 'app-tipos-documento',\n  templateUrl: './tipos-documento.component.html',\n  styleUrls: ['./tipos-documento.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule\n  ]\n})\nexport class TiposDocumentoComponent implements OnInit, AfterViewInit {\n  tiposDocumento: DocumentType[] = [];\n  dataSource = new MatTableDataSource<DocumentType>([]);\n  displayedColumns: string[] = ['Id', 'Name', 'ProcessTypeName', 'SubProcessName', 'Required', 'ReqExpiration', 'Enabled', 'acciones'];\n  loading = false;\n  searchTerm = '';\n  statusFilter = '';\n  phaseFilter = '';\n  requiredFilter = '';\n  expirationFilter = '';\n  availablePhases: any[] = [];\n  \n  // Mapeo de nombres de columnas para mostrar\n  columnNames: { [key: string]: string } = {\n    'Id': 'ID',\n    'Name': 'Nombre',\n    'ProcessTypeName': 'Fase',\n    'SubProcessName': 'Sub Fase',\n    'Required': 'Requerido',\n    'ReqExpiration': 'Requiere expiración',\n    'Enabled': 'Estado',\n    'acciones': 'Acciones'\n  };\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private documentTypeService: DocumentTypeService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.loadTiposDocumento();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // Configurar filtro personalizado\n    this.dataSource.filterPredicate = (data: DocumentType, filter: string) => {\n      const searchTerm = filter.toLowerCase();\n      return data.Name.toLowerCase().includes(searchTerm);\n    };\n    \n    // Asegurar que el paginador esté configurado después de la vista\n    setTimeout(() => {\n      if (this.paginator) {\n        this.dataSource.paginator = this.paginator;\n      }\n    });\n  }\n\n  loadTiposDocumento(): void {\n    this.loading = true;\n    \n    this.documentTypeService.getAllDocumentTypes().subscribe({\n      next: (response) => {\n        if (response?.success) {\n          this.tiposDocumento = response.data.document_types || [];\n          this.dataSource.data = this.tiposDocumento;\n          \n          // Extraer fases únicas\n          const uniquePhases = [...new Set(\n            this.tiposDocumento\n              .map(tipo => tipo.ProcessTypeName)\n              .filter(phase => phase && phase !== 'N/A')\n          )];\n          \n          this.availablePhases = uniquePhases.map(phase => ({\n            name: phase,\n            value: phase\n          }));\n          \n          this.applyFilter();\n          \n          // Asegurar que el paginador esté configurado\n          setTimeout(() => {\n            if (this.paginator) {\n              this.dataSource.paginator = this.paginator;\n            }\n          });\n        } else {\n          this.snackBar.open('Error al cargar tipos de documento', 'Error', { duration: 3000 });\n        }\n        \n        this.loading = false;\n      },\n      error: (error) => {\n        this.snackBar.open('Error al cargar tipos de documento', 'Error', { duration: 3000 });\n        this.loading = false;\n      }\n    });\n  }\n\n  applyFilter(): void {\n    const filterValue = this.searchTerm.trim().toLowerCase();\n    \n    console.log('🔍 Aplicando filtros en tipos de documento:', { \n      searchTerm: this.searchTerm, \n      statusFilter: this.statusFilter, \n      phaseFilter: this.phaseFilter,\n      requiredFilter: this.requiredFilter,\n      expirationFilter: this.expirationFilter,\n      totalTiposDocumento: this.tiposDocumento.length \n    });\n    \n    // Aplicar todos los filtros\n    this.dataSource.data = this.tiposDocumento.filter(tipoDocumento => {\n      // Filtro por búsqueda de texto\n      const matchesSearch = filterValue === '' || \n        tipoDocumento.Name.toLowerCase().includes(filterValue);\n      \n      // Filtro por estado\n      const matchesStatus = this.statusFilter === '' || \n        (this.statusFilter === '1' && tipoDocumento.Enabled === '1') ||\n        (this.statusFilter === '0' && tipoDocumento.Enabled === '0');\n      \n      // Filtro por fase\n      const matchesPhase = this.phaseFilter === '' || \n        tipoDocumento.ProcessTypeName === this.phaseFilter;\n      \n      // Filtro por requerido\n      const matchesRequired = this.requiredFilter === '' || \n        (this.requiredFilter === '1' && tipoDocumento.Required === '1') ||\n        (this.requiredFilter === '0' && tipoDocumento.Required === '0');\n      \n      // Filtro por requiere expiración\n      const matchesExpiration = this.expirationFilter === '' || \n        (this.expirationFilter === '1' && tipoDocumento.ReqExpiration === '1') ||\n        (this.expirationFilter === '0' && tipoDocumento.ReqExpiration === '0');\n      \n      // Debug para el primer elemento\n      if (this.tiposDocumento.indexOf(tipoDocumento) === 0) {\n        console.log('🔍 Primer elemento - Debug:', {\n          id: tipoDocumento.Id,\n          name: tipoDocumento.Name,\n          enabled: tipoDocumento.Enabled,\n          enabledType: typeof tipoDocumento.Enabled,\n          statusFilter: this.statusFilter,\n          statusFilterType: typeof this.statusFilter,\n          matchesStatus: matchesStatus,\n          requiredFilter: this.requiredFilter,\n          matchesRequired: matchesRequired,\n          expirationFilter: this.expirationFilter,\n          matchesExpiration: matchesExpiration\n        });\n      }\n      \n      return matchesSearch && matchesStatus && matchesPhase && matchesRequired && matchesExpiration;\n    });\n    \n    // Reset paginator to first page\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  refreshData(): void {\n    this.loadTiposDocumento();\n  }\n\n  clearFilters(): void {\n    console.log('🧹 Limpiando filtros - Antes:', { \n      searchTerm: this.searchTerm, \n      statusFilter: this.statusFilter,\n      phaseFilter: this.phaseFilter,\n      requiredFilter: this.requiredFilter,\n      expirationFilter: this.expirationFilter\n    });\n    \n    this.searchTerm = '';\n    this.statusFilter = '';\n    this.phaseFilter = '';\n    this.requiredFilter = '';\n    this.expirationFilter = '';\n    \n    console.log('🧹 Limpiando filtros - Después:', { \n      searchTerm: this.searchTerm, \n      statusFilter: this.statusFilter,\n      phaseFilter: this.phaseFilter,\n      requiredFilter: this.requiredFilter,\n      expirationFilter: this.expirationFilter\n    });\n    \n    this.applyFilter();\n    \n    this.snackBar.open('Filtros limpiados', 'Info', {\n      duration: 2000\n    });\n  }\n\n  getPageRange(): string {\n    if (!this.dataSource.paginator) {\n      return '0-0';\n    }\n    \n    const startIndex = this.dataSource.paginator.pageIndex * this.dataSource.paginator.pageSize + 1;\n    const endIndex = Math.min(\n      (this.dataSource.paginator.pageIndex + 1) * this.dataSource.paginator.pageSize,\n      this.dataSource.filteredData.length\n    );\n    \n    return `${startIndex}-${endIndex}`;\n  }\n\n  openCreateDialog(): void {\n    const dialogData = {\n      documentType: {} as DocumentType,\n      mode: 'create'\n    };\n\n    const dialogRef = this.dialog.open(DocumentTypeEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  openEditDialog(documentType: DocumentType): void {\n    const dialogData = {\n      documentType: documentType,\n      mode: 'edit'\n    };\n\n    const dialogRef = this.dialog.open(DocumentTypeEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  deleteDocumentType(documentType: DocumentType): void {\n    if (confirm(`¿Estás seguro de que quieres eliminar el tipo de documento \"${documentType.Name}\"?`)) {\n      this.documentTypeService.deleteDocumentType(documentType.Id!).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.tiposDocumento = this.tiposDocumento.filter(t => t.Id !== documentType.Id);\n            this.applyFilter();\n            this.snackBar.open('Tipo de documento eliminado exitosamente', 'Éxito', {\n              duration: 2000\n            });\n          } else {\n            this.snackBar.open(response.message || 'Error al eliminar tipo de documento', 'Error', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          this.snackBar.open('Error al eliminar tipo de documento', 'Error', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n  toggleStatus(documentType: DocumentType): void {\n    this.documentTypeService.toggleStatus(documentType.Id!).subscribe({\n      next: (response) => {\n        if (response.success) {\n          // Actualizar el estado en la lista local\n          const index = this.tiposDocumento.findIndex(t => t.Id === documentType.Id);\n          if (index !== -1) {\n            this.tiposDocumento[index].Enabled = this.tiposDocumento[index].Enabled === '1' ? '0' : '1';\n            this.applyFilter();\n          }\n          \n          this.snackBar.open('Estado cambiado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n        } else {\n          this.snackBar.open(response.message || 'Error al cambiar estado', 'Error', {\n            duration: 3000\n          });\n        }\n      },\n              error: (error) => {\n          this.snackBar.open('Error al cambiar estado', 'Error', {\n            duration: 3000\n          });\n        }\n    });\n  }\n\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-4\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900\">Gestión de Tipos de Documento</h1>\n      <p class=\"text-gray-600 mt-1\">Administra los tipos de documento del sistema</p>\n    </div>\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"openCreateDialog()\"\n      class=\"flex items-center gap-2\">\n      <mat-icon>add_circle</mat-icon>\n      Nuevo Tipo de Documento\n    </button>\n  </div>\n\n  <!-- Filtros -->\n  <div class=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      \n      <!-- Espacio vacío a la izquierda -->\n      <div></div>\n      \n      <!-- Botones de acción a la derecha -->\n      <div class=\"flex items-center gap-3\">\n        <!-- Botón de Limpiar Filtros -->\n        <button \n          mat-stroked-button \n          color=\"warn\" \n          (click)=\"clearFilters()\"\n          [disabled]=\"!searchTerm && !statusFilter && !phaseFilter && !requiredFilter && !expirationFilter\"\n          matTooltip=\"Limpiar filtros\"\n          class=\"flex items-center gap-2\">\n          <mat-icon>clear_all</mat-icon>\n          Limpiar Filtros\n        </button>\n        \n        <!-- Botón de Reload en filtros -->\n        <button \n          mat-stroked-button \n          color=\"accent\" \n          (click)=\"refreshData()\"\n          [disabled]=\"loading\"\n          matTooltip=\"Recargar datos\"\n          class=\"flex items-center gap-2\">\n          <mat-icon [class.animate-spin]=\"loading\">refresh</mat-icon>\n          Recargar\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n      <!-- Búsqueda por texto -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Buscar tipos de documento</mat-label>\n        <input \n          matInput \n          [(ngModel)]=\"searchTerm\" \n          (ngModelChange)=\"applyFilter()\"\n          placeholder=\"Buscar por nombre...\"\n          maxlength=\"100\">\n        <mat-icon matSuffix>🔍</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por estado -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Estado</mat-label>\n        <mat-select [(ngModel)]=\"statusFilter\" (ngModelChange)=\"applyFilter()\">\n          <mat-option value=\"\">Todos</mat-option>\n          <mat-option value=\"1\">Activos</mat-option>\n          <mat-option value=\"0\">Inactivos</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- Filtro por fase -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Fase</mat-label>\n        <mat-select [(ngModel)]=\"phaseFilter\" (ngModelChange)=\"applyFilter()\">\n          <mat-option value=\"\">Todas las fases</mat-option>\n          <mat-option *ngFor=\"let phase of availablePhases\" [value]=\"phase.value\">\n            {{ phase.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- Filtro por requerido -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Requerido</mat-label>\n        <mat-select [(ngModel)]=\"requiredFilter\" (ngModelChange)=\"applyFilter()\">\n          <mat-option value=\"\">Todos</mat-option>\n          <mat-option value=\"1\">Sí</mat-option>\n          <mat-option value=\"0\">No</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- Filtro por requiere expiración -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Requiere Expiración</mat-label>\n        <mat-select [(ngModel)]=\"expirationFilter\" (ngModelChange)=\"applyFilter()\">\n          <mat-option value=\"\">Todos</mat-option>\n          <mat-option value=\"1\">Sí</mat-option>\n          <mat-option value=\"0\">No</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <!-- Loading Spinner -->\n  <div *ngIf=\"loading\" class=\"flex justify-center items-center py-8\">\n    <mat-spinner diameter=\"40\"></mat-spinner>\n  </div>\n\n  <!-- Tabla -->\n  <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\" *ngIf=\"!loading\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\" style=\"line-height: 1;\">\n      <!-- Columna ID -->\n      <ng-container matColumnDef=\"Id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-16 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          ID\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-xs font-mono text-gray-600 py-0\">\n          {{ tipoDocumento.Id }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Nombre -->\n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Nombre\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-xs py-0\">\n          {{ tipoDocumento.Name }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Fase -->\n      <ng-container matColumnDef=\"ProcessTypeName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-32 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Fase\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-xs py-0\">\n          {{ tipoDocumento.ProcessTypeName || 'N/A' }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Sub Fase -->\n      <ng-container matColumnDef=\"SubProcessName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-32 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Sub Fase\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-xs py-0\">\n          {{ tipoDocumento.SubProcessName || 'N/A' }}\n        </td>\n      </ng-container>\n\n      <!-- Columna Requerido -->\n      <ng-container matColumnDef=\"Required\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-20 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Requerido\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-center\">\n          <span class=\"px-1.5 py-0.5 rounded-full text-xs font-medium\"\n                [ngClass]=\"tipoDocumento.Required === '1' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800'\">\n            {{ tipoDocumento.Required === '1' ? 'Sí' : 'No' }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Columna Requiere Expiración -->\n      <ng-container matColumnDef=\"ReqExpiration\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-20 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Requiere expiración\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-center\">\n          <span class=\"px-1.5 py-0.5 rounded-full text-xs font-medium\"\n                [ngClass]=\"tipoDocumento.ReqExpiration === '1' ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-800'\">\n            {{ tipoDocumento.ReqExpiration === '1' ? 'Sí' : 'No' }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Columna Estado -->\n      <ng-container matColumnDef=\"Enabled\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-24 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Estado\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-center\">\n          <span class=\"px-1.5 py-0.5 rounded-full text-xs font-medium\"\n                [ngClass]=\"tipoDocumento.Enabled === '1' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\">\n            {{ tipoDocumento.Enabled === '1' ? 'Activo' : 'Inactivo' }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Columna Acciones -->\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef class=\"w-28 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Acciones\n        </th>\n        <td mat-cell *matCellDef=\"let tipoDocumento\" class=\"text-center py-0\">\n          <div class=\"flex gap-0.5 justify-center items-center\">\n            <button\n              (click)=\"openEditDialog(tipoDocumento)\"\n              mat-icon-button\n              color=\"primary\"\n              matTooltip=\"Editar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">edit</mat-icon>\n            </button>\n            <button\n              (click)=\"deleteDocumentType(tipoDocumento)\"\n              mat-icon-button\n              color=\"warn\"\n              matTooltip=\"Eliminar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">delete</mat-icon>\n            </button>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"!min-h-0 !h-8\"></tr>\n    </table>\n\n    <!-- Empty State -->\n    <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"text-center py-8\">\n      <mat-icon class=\"text-gray-400 text-4xl mb-2\">inbox</mat-icon>\n      <p class=\"text-gray-500\">No se encontraron tipos de documento</p>\n    </div>\n\n    <!-- Paginación -->\n    <mat-paginator \n      *ngIf=\"dataSource.filteredData.length > 0\"\n      [pageSizeOptions]=\"[10, 25, 50, 100]\"\n      [pageSize]=\"10\"\n      [length]=\"dataSource.filteredData.length\"\n      showFirstLastButtons\n      class=\"border-t\"\n      aria-label=\"Seleccionar página de tipos de documento\">\n    </mat-paginator>\n  </div>\n\n  <!-- Contador de resultados -->\n  <div class=\"mt-4 text-sm text-gray-600 text-center\" *ngIf=\"!loading\">\n    Mostrando {{ getPageRange() }} de {{ dataSource.filteredData.length }} tipos de documento visibles ({{ tiposDocumento.length }} total)\n  </div>\n</div>\n"],"names":["CommonModule","ReactiveFormsModule","Validators","MAT_DIALOG_DATA","MatDialogModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatProgressSpinnerModule","MatTooltipModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","fileStatus_r12","Id","ɵɵadvance","ɵɵtextInterpolate1","Name","subProcess_r13","ɵɵtextInterpolate","ctx_r9","data","documentType","LastUserUpdateName","RegistrationDate","UpdateDate","ɵɵelement","ctx_r11","mode","DocumentTypeEditDialogComponent","constructor","fb","documentTypeService","dialogRef","snackBar","loading","loadingCatalogs","fileStatuses","subProcesses","isSubPhaseEnabled","ngOnInit","initializeForm","loadCatalogs","populateForm","documentTypeForm","get","valueChanges","subscribe","selectedPhase","console","log","patchValue","IdSubProcess","group","required","minLength","maxLength","Enabled","ReqExpiration","IdProcessType","Required","getActiveFileStatuses","next","fileStatusesResponse","success","file_statuses","error","checkCatalogsLoaded","getActiveSubProcesses","subProcessesResponse","file_sub_statuses","length","onSubmit","valid","createDocumentType","updateDocumentType","documentTypeData","value","response","open","duration","close","message","onCancel","dialogTitle","submitButtonText","_","ɵɵdirectiveInject","i1","FormBuilder","i2","DocumentTypeService","i3","MatDialogRef","i4","MatSnackBar","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DocumentTypeEditDialogComponent_Template","rf","ctx","ɵɵlistener","DocumentTypeEditDialogComponent_Template_button_click_4_listener","DocumentTypeEditDialogComponent_Template_form_ngSubmit_7_listener","ɵɵtemplate","DocumentTypeEditDialogComponent_mat_error_14_Template","DocumentTypeEditDialogComponent_mat_error_15_Template","DocumentTypeEditDialogComponent_mat_error_16_Template","DocumentTypeEditDialogComponent_mat_option_21_Template","DocumentTypeEditDialogComponent_mat_icon_22_Template","DocumentTypeEditDialogComponent_span_25_Template","DocumentTypeEditDialogComponent_mat_option_32_Template","DocumentTypeEditDialogComponent_mat_icon_33_Template","DocumentTypeEditDialogComponent_span_36_Template","DocumentTypeEditDialogComponent_div_70_Template","DocumentTypeEditDialogComponent_Template_button_click_72_listener","DocumentTypeEditDialogComponent_mat_spinner_75_Template","DocumentTypeEditDialogComponent_mat_icon_76_Template","tmp_2_0","hasError","tmp_3_0","tmp_4_0","invalid","i5","NgForOf","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","i6","MatButton","MatIconButton","i7","MatIcon","i8","MatFormField","MatLabel","MatHint","MatError","MatSuffix","i9","MatInput","i10","MatSelect","i11","MatOption","i12","MatProgressSpinner","i13","MatTooltip","styles","FormsModule","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","phase_r4","name","tipoDocumento_r25","tipoDocumento_r26","tipoDocumento_r27","ProcessTypeName","tipoDocumento_r28","SubProcessName","tipoDocumento_r29","tipoDocumento_r30","tipoDocumento_r31","TiposDocumentoComponent_div_68_td_25_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r34","tipoDocumento_r32","$implicit","ctx_r33","ɵɵnextContext","ɵɵresetView","openEditDialog","TiposDocumentoComponent_div_68_td_25_Template_button_click_5_listener","ctx_r35","deleteDocumentType","ɵɵpureFunction0","_c0","ctx_r24","dataSource","filteredData","ɵɵelementContainerStart","TiposDocumentoComponent_div_68_th_3_Template","TiposDocumentoComponent_div_68_td_4_Template","ɵɵelementContainerEnd","TiposDocumentoComponent_div_68_th_6_Template","TiposDocumentoComponent_div_68_td_7_Template","TiposDocumentoComponent_div_68_th_9_Template","TiposDocumentoComponent_div_68_td_10_Template","TiposDocumentoComponent_div_68_th_12_Template","TiposDocumentoComponent_div_68_td_13_Template","TiposDocumentoComponent_div_68_th_15_Template","TiposDocumentoComponent_div_68_td_16_Template","TiposDocumentoComponent_div_68_th_18_Template","TiposDocumentoComponent_div_68_td_19_Template","TiposDocumentoComponent_div_68_th_21_Template","TiposDocumentoComponent_div_68_td_22_Template","TiposDocumentoComponent_div_68_th_24_Template","TiposDocumentoComponent_div_68_td_25_Template","TiposDocumentoComponent_div_68_tr_26_Template","TiposDocumentoComponent_div_68_tr_27_Template","TiposDocumentoComponent_div_68_div_28_Template","TiposDocumentoComponent_div_68_mat_paginator_29_Template","ctx_r2","displayedColumns","ɵɵtextInterpolate3","ctx_r3","getPageRange","tiposDocumento","TiposDocumentoComponent","dialog","searchTerm","statusFilter","phaseFilter","requiredFilter","expirationFilter","availablePhases","columnNames","loadTiposDocumento","ngAfterViewInit","paginator","sort","filterPredicate","filter","toLowerCase","includes","setTimeout","getAllDocumentTypes","document_types","uniquePhases","Set","map","tipo","phase","applyFilter","filterValue","trim","totalTiposDocumento","tipoDocumento","matchesSearch","matchesStatus","matchesPhase","matchesRequired","matchesExpiration","indexOf","id","enabled","enabledType","statusFilterType","firstPage","refreshData","clearFilters","startIndex","pageIndex","pageSize","endIndex","Math","min","openCreateDialog","dialogData","width","disableClose","afterClosed","result","confirm","t","toggleStatus","index","findIndex","MatDialog","viewQuery","TiposDocumentoComponent_Query","TiposDocumentoComponent_Template_button_click_7_listener","TiposDocumentoComponent_Template_button_click_15_listener","TiposDocumentoComponent_Template_button_click_19_listener","TiposDocumentoComponent_Template_input_ngModelChange_27_listener","$event","TiposDocumentoComponent_Template_mat_select_ngModelChange_33_listener","TiposDocumentoComponent_Template_mat_select_ngModelChange_43_listener","TiposDocumentoComponent_mat_option_46_Template","TiposDocumentoComponent_Template_mat_select_ngModelChange_50_listener","TiposDocumentoComponent_Template_mat_select_ngModelChange_60_listener","TiposDocumentoComponent_div_67_Template","TiposDocumentoComponent_div_68_Template","TiposDocumentoComponent_div_69_Template","ɵɵclassProp","NgClass","NgModel","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","i14","i15","i16"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}