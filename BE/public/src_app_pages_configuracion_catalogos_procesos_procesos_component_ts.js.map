{"version":3,"file":"src_app_pages_configuracion_catalogos_procesos_procesos_component_ts.js","mappings":"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","sources":["./src/app/pages/configuracion/catalogos/procesos/proceso-edit-dialog/proceso-edit-dialog.component.ts","./src/app/pages/configuracion/catalogos/procesos/proceso-edit-dialog/proceso-edit-dialog.component.html","./src/app/pages/configuracion/catalogos/procesos/procesos.component.ts","./src/app/pages/configuracion/catalogos/procesos/procesos.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { Proceso, ProcesoUpdateRequest } from '../../../../../core/interfaces/proceso.interface';\nimport { ProcesoService } from '../../../../../core/services/proceso.service';\n\nexport interface ProcesoEditDialogData {\n  proceso: Proceso;\n  mode: 'edit' | 'create';\n}\n\n@Component({\n  selector: 'app-proceso-edit-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ],\n  templateUrl: './proceso-edit-dialog.component.html'\n})\nexport class ProcesoEditDialogComponent implements OnInit {\n  procesoForm!: FormGroup;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private procesoService: ProcesoService,\n    private snackBar: MatSnackBar,\n    private dialogRef: MatDialogRef<ProcesoEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ProcesoEditDialogData\n  ) {\n    this.initializeForm();\n  }\n\n  ngOnInit(): void {\n    if (this.data.mode === 'edit') {\n      this.populateForm();\n    }\n  }\n\n  private initializeForm(): void {\n    this.procesoForm = this.fb.group({\n      Name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(600)]],\n      Enabled: ['1', Validators.required]\n    });\n  }\n\n  private populateForm(): void {\n    if (this.data.proceso) {\n      this.procesoForm.patchValue({\n        Name: this.data.proceso.Name,\n        Enabled: this.data.proceso.Enabled\n      });\n    }\n  }\n\n  onSubmit(): void {\n    if (this.procesoForm.valid) {\n      this.loading = true;\n      \n      if (this.data.mode === 'edit') {\n        this.updateProceso();\n      } else {\n        this.createProceso();\n      }\n    } else {\n      this.markFormGroupTouched();\n    }\n  }\n\n  private updateProceso(): void {\n    const updateData: ProcesoUpdateRequest = {\n      Id: this.data.proceso.Id,\n      ...this.procesoForm.value\n    };\n\n    this.procesoService.updateProceso(updateData).subscribe({\n      next: (response) => {\n        this.loading = false;\n        if (response.success) {\n          this.snackBar.open('Proceso actualizado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al actualizar proceso', 'Error', {\n            duration: 3000\n          });\n        }\n      },\n      error: (error) => {\n        this.loading = false;\n        this.snackBar.open('Error al actualizar proceso', 'Error', {\n          duration: 3000\n        });\n      }\n    });\n  }\n\n  private createProceso(): void {\n    this.procesoService.createProceso(this.procesoForm.value).subscribe({\n      next: (response) => {\n        this.loading = false;\n        if (response.success) {\n          this.snackBar.open('Proceso creado exitosamente', 'Éxito', {\n            duration: 2000\n          });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(response.message || 'Error al crear proceso', 'Error', {\n            duration: 3000\n          });\n        }\n      },\n      error: (error) => {\n        this.loading = false;\n        this.snackBar.open('Error al crear proceso', 'Error', {\n          duration: 3000\n        });\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  private markFormGroupTouched(): void {\n    Object.keys(this.procesoForm.controls).forEach(key => {\n      const control = this.procesoForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n}\n","<div class=\"p-6 min-w-[500px]\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <h2 class=\"text-2xl font-bold text-gray-900\">\n      {{ data.mode === 'edit' ? 'Editar Proceso' : 'Nuevo Proceso' }}\n    </h2>\n    <button mat-icon-button (click)=\"onCancel()\" matTooltip=\"Cerrar\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n\n  <!-- Formulario -->\n  <form [formGroup]=\"procesoForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-4\">\n    <!-- Nombre -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Nombre del Proceso</mat-label>\n      <input \n        matInput \n        formControlName=\"Name\" \n        placeholder=\"Ej: Gestión de Clientes\"\n        maxlength=\"600\">\n      <mat-hint>Nombre completo del proceso (máximo 600 caracteres)</mat-hint>\n      <mat-error *ngIf=\"procesoForm.get('Name')?.hasError('required')\">\n        El nombre es requerido\n      </mat-error>\n      <mat-error *ngIf=\"procesoForm.get('Name')?.hasError('minlength')\">\n        El nombre debe tener al menos 3 caracteres\n      </mat-error>\n      <mat-error *ngIf=\"procesoForm.get('Name')?.hasError('maxlength')\">\n        El nombre no puede exceder 600 caracteres\n      </mat-error>\n    </mat-form-field>\n\n\n\n\n\n    <!-- Estado -->\n    <mat-form-field appearance=\"outline\" class=\"w-full\">\n      <mat-label>Estado</mat-label>\n      <mat-select formControlName=\"Enabled\">\n        <mat-option value=\"1\">Activo</mat-option>\n        <mat-option value=\"0\">Inactivo</mat-option>\n      </mat-select>\n      <mat-hint>Estado actual del proceso</mat-hint>\n    </mat-form-field>\n\n    <!-- Información adicional (solo lectura en modo edición) -->\n    <div *ngIf=\"data.mode === 'edit'\" class=\"bg-gray-50 p-4 rounded-lg\">\n      <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Información del Sistema</h3>\n      <div class=\"grid grid-cols-2 gap-4 text-sm\">\n        <div>\n          <span class=\"text-gray-500\">ID:</span>\n          <span class=\"ml-2 font-mono\">{{ data.proceso.Id }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Último Usuario:</span>\n          <span class=\"ml-2\">{{ data.proceso.LastUserUpdateName || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Fecha Registro:</span>\n          <span class=\"ml-2\">{{ data.proceso.RegistrationDate || 'N/A' }}</span>\n        </div>\n        <div>\n          <span class=\"text-gray-500\">Última Actualización:</span>\n          <span class=\"ml-2\">{{ data.proceso.UpdateDate || 'N/A' }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"flex justify-end space-x-3 pt-4 border-t\">\n      <button \n        type=\"button\" \n        mat-button \n        (click)=\"onCancel()\"\n        [disabled]=\"loading\">\n        Cancelar\n      </button>\n      <button \n        type=\"submit\" \n        mat-raised-button \n        color=\"primary\"\n        [disabled]=\"procesoForm.invalid || loading\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n        <mat-icon *ngIf=\"!loading\">{{ data.mode === 'edit' ? 'save' : 'add' }}</mat-icon>\n        {{ data.mode === 'edit' ? 'Guardar Cambios' : 'Crear Proceso' }}\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule, PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, Sort, MatSort } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { Proceso, ProcesoCreateRequest, ProcesoUpdateRequest } from '../../../../core/interfaces/proceso.interface';\nimport { ProcesoService } from '../../../../core/services/proceso.service';\nimport { ProcesoEditDialogComponent, ProcesoEditDialogData } from './proceso-edit-dialog/proceso-edit-dialog.component';\n\n@Component({\n  selector: 'app-procesos',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatProgressSpinnerModule\n  ],\n  templateUrl: './procesos.component.html'\n})\nexport class ProcesosComponent implements OnInit, AfterViewInit {\n  procesos: Proceso[] = [];\n  dataSource = new MatTableDataSource<Proceso>([]);\n  totalProcesos = 0;\n  searchTerm = '';\n  statusFilter = '';\n  \n  displayedColumns: string[] = ['Id', 'Name', 'Enabled', 'acciones'];\n  \n  loading = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private procesoService: ProcesoService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProcesos();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    \n    // Configurar filtro personalizado\n    this.dataSource.filterPredicate = (data: Proceso, filter: string) => {\n      const searchTerm = filter.toLowerCase();\n      return data.Name.toLowerCase().includes(searchTerm);\n    };\n  }\n\n  loadProcesos(): void {\n    this.loading = true;\n    this.procesoService.getProcesos().subscribe({\n      next: (response) => {\n        if (response.success && response.data?.processes) {\n          this.procesos = response.data.processes;\n          this.totalProcesos = response.data.total;\n          \n          // Crear nuevo DataSource para asegurar que la tabla se actualice\n          this.dataSource = new MatTableDataSource<Proceso>(this.procesos);\n          \n          // Reconfigurar paginator y sort\n          if (this.paginator) {\n            this.dataSource.paginator = this.paginator;\n          }\n          if (this.sort) {\n            this.dataSource.sort = this.sort;\n          }\n          this.applyFilter();\n        } else {\n          this.snackBar.open(response.message || 'Error al cargar procesos', 'Error', {\n            duration: 3000\n          });\n        }\n        this.loading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error) => {\n        this.snackBar.open('Error de conexión al cargar procesos', 'Error', {\n          duration: 3000\n        });\n        this.loading = false;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  applyFilter(): void {\n    // Combinar filtros\n    let filterValue = '';\n    \n    if (this.searchTerm) {\n      filterValue = this.searchTerm;\n    }\n    \n    // Aplicar filtro de estado si existe\n    if (this.statusFilter !== '') {\n      const status = this.statusFilter; // Mantener como string\n      \n      // Crear nuevo DataSource con los datos filtrados\n      const filteredProcesos = this.procesos.filter(proceso => \n        proceso.Enabled === status &&\n        (filterValue === '' || \n         proceso.Name.toLowerCase().includes(filterValue.toLowerCase()))\n      );\n      \n      this.dataSource = new MatTableDataSource<Proceso>(filteredProcesos);\n      \n      // Reconfigurar paginator y sort\n      if (this.paginator) {\n        this.dataSource.paginator = this.paginator;\n      }\n      if (this.sort) {\n        this.dataSource.sort = this.sort;\n      }\n    } else {\n      // Sin filtro de estado, usar todos los procesos\n      this.dataSource = new MatTableDataSource<Proceso>(this.procesos);\n      \n      // Reconfigurar paginator y sort\n      if (this.paginator) {\n        this.dataSource.paginator = this.paginator;\n      }\n      if (this.sort) {\n        this.dataSource.sort = this.sort;\n      }\n      \n      // Aplicar filtro de búsqueda\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n    \n    // Reset paginator to first page\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  refreshData(): void {\n    this.loadProcesos();\n  }\n\n  /**\n   * Limpiar todos los filtros aplicados\n   */\n  clearFilters(): void {\n    // Verificar si hay filtros activos\n    const hasActiveFilters = this.searchTerm || this.statusFilter;\n    \n    if (!hasActiveFilters) {\n      this.snackBar.open('No hay filtros activos para limpiar', 'Info', {\n        duration: 2000\n      });\n      return;\n    }\n    \n    // Limpiar filtros\n    this.searchTerm = '';\n    this.statusFilter = '';\n    \n    // Crear nuevo DataSource con todos los datos\n    this.dataSource = new MatTableDataSource<Proceso>(this.procesos);\n    \n    // Reconfigurar paginator y sort\n    if (this.paginator) {\n      this.dataSource.paginator = this.paginator;\n    }\n    if (this.sort) {\n      this.dataSource.sort = this.sort;\n    }\n    \n    // Reset paginator to first page\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n    \n    this.snackBar.open('Filtros limpiados', 'Info', {\n      duration: 2000\n    });\n  }\n\n  /**\n   * Recargar datos sin mostrar mensaje\n   */\n  refreshDataSilent(): void {\n    this.loadProcesos();\n  }\n\n  openCreateDialog(): void {\n    const dialogData: ProcesoEditDialogData = {\n      proceso: {} as Proceso,\n      mode: 'create'\n    };\n\n    const dialogRef = this.dialog.open(ProcesoEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  openEditDialog(proceso: Proceso): void {\n    const dialogData: ProcesoEditDialogData = {\n      proceso: proceso,\n      mode: 'edit'\n    };\n\n    const dialogRef = this.dialog.open(ProcesoEditDialogComponent, {\n      width: '600px',\n      data: dialogData,\n      disableClose: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  deleteProceso(proceso: Proceso): void {\n    if (confirm(`¿Estás seguro de que quieres eliminar PERMANENTEMENTE el proceso \"${proceso.Name}\"?\\n\\nEsta acción no se puede deshacer.`)) {\n      console.log('🗑️ Intentando eliminar proceso:', proceso);\n      \n      this.procesoService.deleteProceso(proceso.Id!, true).subscribe({\n        next: (response) => {\n          console.log('📡 Respuesta del API:', response);\n          \n          if (response.success) {\n            console.log('✅ Proceso eliminado exitosamente');\n            this.procesos = this.procesos.filter(p => p.Id !== proceso.Id);\n            this.applyFilter();\n            this.snackBar.open('Proceso eliminado exitosamente', 'Éxito', {\n              duration: 2000\n            });\n          } else {\n            console.log('❌ Error en la respuesta:', response.message);\n            this.snackBar.open(response.message || 'Error al eliminar proceso', 'Error', {\n              duration: 3000\n            });\n          }\n        },\n        error: (error) => {\n          console.log('💥 Error en la petición:', error);\n          this.snackBar.open('Error al eliminar proceso', 'Error', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n  getPageRange(): string {\n    if (!this.paginator || this.dataSource.filteredData.length === 0) {\n      return '0-0';\n    }\n    \n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize + 1;\n    const endIndex = Math.min(startIndex + this.paginator.pageSize - 1, this.dataSource.filteredData.length);\n    \n    return `${startIndex}-${endIndex}`;\n  }\n}\n","<div class=\"p-6\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-4\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900\">Gestión de Procesos</h1>\n      <p class=\"text-gray-600 mt-1\">Administra los procesos del sistema</p>\n    </div>\n    <div class=\"flex items-center gap-3\">\n      <!-- Indicador de carga -->\n      <div *ngIf=\"loading\" class=\"flex items-center gap-2 text-blue-600\">\n        <mat-spinner diameter=\"20\"></mat-spinner>\n        <span class=\"text-sm\">Cargando...</span>\n      </div>\n      \n      <button \n        mat-raised-button \n        color=\"primary\" \n        (click)=\"openCreateDialog()\"\n        class=\"flex items-center gap-2\">\n        <mat-icon>add_circle</mat-icon>\n        Nuevo Proceso\n      </button>\n    </div>\n  </div>\n\n  <!-- Filtros -->\n  <div class=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      \n      <!-- Espacio vacío a la izquierda -->\n      <div></div>\n      \n      <!-- Botones de acción a la derecha -->\n      <div class=\"flex items-center gap-3\">\n        <!-- Botón de Limpiar Filtros -->\n        <button \n          mat-stroked-button \n          color=\"warn\" \n          (click)=\"clearFilters()\"\n          [disabled]=\"!searchTerm && !statusFilter\"\n          matTooltip=\"Limpiar filtros\"\n          class=\"flex items-center gap-2\">\n          <mat-icon>clear_all</mat-icon>\n          Limpiar Filtros\n        </button>\n        \n        <!-- Botón de Reload en filtros -->\n        <button \n          mat-stroked-button \n          color=\"accent\" \n          (click)=\"refreshData()\"\n          [disabled]=\"loading\"\n          matTooltip=\"Recargar datos\"\n          class=\"flex items-center gap-2\">\n          <mat-icon [class.animate-spin]=\"loading\">refresh</mat-icon>\n          Recargar\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <!-- Búsqueda por texto -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Buscar procesos</mat-label>\n        <input \n          matInput \n          [(ngModel)]=\"searchTerm\" \n          (ngModelChange)=\"applyFilter()\"\n          placeholder=\"Buscar por nombre...\"\n          maxlength=\"100\">\n        <mat-icon matSuffix>🔍</mat-icon>\n      </mat-form-field>\n\n      <!-- Filtro por estado -->\n      <mat-form-field appearance=\"outline\" class=\"w-full\">\n        <mat-label>Estado</mat-label>\n        <mat-select [(ngModel)]=\"statusFilter\" (ngModelChange)=\"applyFilter()\">\n          <mat-option value=\"\">Todos</mat-option>\n          <mat-option value=\"1\">Activos</mat-option>\n          <mat-option value=\"0\">Inactivos</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <!-- Tabla -->\n  <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\" style=\"line-height: 1;\">\n      <!-- Columna ID -->\n      <ng-container matColumnDef=\"Id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-16 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          ID\n        </th>\n        <td mat-cell *matCellDef=\"let proceso\" class=\"text-xs font-mono text-gray-600 py-0\">\n          {{ proceso.Id }}\n        </td>\n      </ng-container>\n\n\n\n      <!-- Columna Nombre -->\n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"min-w-0 flex-1 py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Nombre\n        </th>\n        <td mat-cell *matCellDef=\"let proceso\" class=\"text-xs py-0\">\n          {{ proceso.Name }}\n        </td>\n      </ng-container>\n\n\n\n      <!-- Columna Estado -->\n      <ng-container matColumnDef=\"Enabled\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"w-24 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Estado\n        </th>\n        <td mat-cell *matCellDef=\"let proceso\" class=\"text-center\">\n          <span class=\"px-1.5 py-0.5 rounded-full text-xs font-medium\"\n                [ngClass]=\"proceso.Enabled === '1' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\">\n            {{ proceso.Enabled === '1' ? 'Activo' : 'Inactivo' }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Columna Acciones -->\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef class=\"w-28 text-center py-1 bg-gray-50 text-xs font-medium text-gray-700\">\n          Acciones\n        </th>\n        <td mat-cell *matCellDef=\"let proceso\" class=\"text-center py-0\">\n          <div class=\"flex gap-0.5 justify-center items-center\">\n            <button\n              (click)=\"openEditDialog(proceso)\"\n              mat-icon-button\n              color=\"primary\"\n              matTooltip=\"Editar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">edit</mat-icon>\n            </button>\n            <button\n              (click)=\"deleteProceso(proceso)\"\n              mat-icon-button\n              color=\"warn\"\n              matTooltip=\"Eliminar\"\n              class=\"!w-6 !h-6 !min-h-6 !p-0\">\n              <mat-icon class=\"!text-sm\">delete</mat-icon>\n            </button>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"!min-h-0 !h-8\"></tr>\n      \n      <!-- Mensaje cuando no hay datos -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td colspan=\"4\" class=\"text-center py-8\">\n          <div class=\"flex flex-col items-center gap-2 text-gray-500\">\n            <mat-icon class=\"text-4xl text-gray-300\">inbox</mat-icon>\n            <p class=\"text-lg font-medium\">No hay procesos para mostrar</p>\n            <p class=\"text-sm\">\n              <span *ngIf=\"loading\">Cargando procesos...</span>\n              <span *ngIf=\"!loading && (searchTerm || statusFilter)\">\n                No se encontraron procesos con los filtros aplicados.\n                <button \n                  mat-button \n                  color=\"primary\" \n                  (click)=\"clearFilters()\"\n                  class=\"ml-1\">\n                  Limpiar filtros\n                </button>\n              </span>\n              <span *ngIf=\"!loading && !searchTerm && !statusFilter\">\n                No hay procesos registrados en el sistema.\n              </span>\n            </p>\n          </div>\n        </td>\n      </tr>\n    </table>\n\n    <!-- Paginación -->\n    <mat-paginator \n      [pageSizeOptions]=\"[10, 25, 50, 100]\"\n      [pageSize]=\"10\"\n      [length]=\"dataSource.filteredData.length\"\n      showFirstLastButtons\n      class=\"border-t\">\n    </mat-paginator>\n  </div>\n\n  <!-- Contador de resultados -->\n  <div class=\"mt-4 text-sm text-gray-600 text-center\">\n    Mostrando {{ getPageRange() }} de {{ dataSource.filteredData.length }} procesos visibles ({{ procesos.length }} total)\n  </div>\n</div>\n"],"names":["CommonModule","ReactiveFormsModule","Validators","MatDialogModule","MAT_DIALOG_DATA","MatFormFieldModule","MatInputModule","MatSelectModule","MatButtonModule","MatIconModule","MatSnackBarModule","MatProgressSpinnerModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","data","proceso","Id","LastUserUpdateName","RegistrationDate","UpdateDate","ɵɵelement","ctx_r5","mode","ProcesoEditDialogComponent","constructor","fb","procesoService","snackBar","dialogRef","loading","initializeForm","ngOnInit","populateForm","procesoForm","group","Name","required","minLength","maxLength","Enabled","patchValue","onSubmit","valid","updateProceso","createProceso","markFormGroupTouched","updateData","value","subscribe","next","response","success","open","duration","close","message","error","onCancel","Object","keys","controls","forEach","key","control","get","markAsTouched","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ProcesoService","i3","MatSnackBar","i4","MatDialogRef","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ProcesoEditDialogComponent_Template","rf","ctx","ɵɵlistener","ProcesoEditDialogComponent_Template_button_click_4_listener","ProcesoEditDialogComponent_Template_form_ngSubmit_7_listener","ɵɵtemplate","ProcesoEditDialogComponent_mat_error_14_Template","ProcesoEditDialogComponent_mat_error_15_Template","ProcesoEditDialogComponent_mat_error_16_Template","ProcesoEditDialogComponent_div_27_Template","ProcesoEditDialogComponent_Template_button_click_29_listener","ProcesoEditDialogComponent_mat_spinner_32_Template","ProcesoEditDialogComponent_mat_icon_33_Template","ɵɵtextInterpolate1","ɵɵproperty","tmp_2_0","hasError","tmp_3_0","tmp_4_0","invalid","i5","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","i6","MatFormField","MatLabel","MatHint","MatError","i7","MatInput","i8","MatSelect","i9","MatOption","i10","MatButton","MatIconButton","i11","MatIcon","i12","MatProgressSpinner","encapsulation","FormsModule","MatTableModule","MatTableDataSource","MatCheckboxModule","MatPaginatorModule","MatPaginator","MatSortModule","MatSort","MatTooltipModule","MatChipsModule","MatCardModule","MatDividerModule","proceso_r12","proceso_r13","proceso_r14","ProcesosComponent_td_55_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r17","proceso_r15","$implicit","ctx_r16","ɵɵnextContext","ɵɵresetView","openEditDialog","ProcesosComponent_td_55_Template_button_click_5_listener","ctx_r18","deleteProceso","ProcesosComponent_tr_58_span_9_Template_button_click_2_listener","_r24","ctx_r23","clearFilters","ProcesosComponent_tr_58_span_8_Template","ProcesosComponent_tr_58_span_9_Template","ProcesosComponent_tr_58_span_10_Template","ctx_r11","searchTerm","statusFilter","ProcesosComponent","dialog","cdr","procesos","dataSource","totalProcesos","displayedColumns","loadProcesos","ngAfterViewInit","paginator","sort","filterPredicate","filter","toLowerCase","includes","getProcesos","processes","total","applyFilter","markForCheck","filterValue","status","filteredProcesos","trim","firstPage","refreshData","hasActiveFilters","refreshDataSilent","openCreateDialog","dialogData","width","disableClose","afterClosed","result","confirm","console","log","p","getPageRange","filteredData","length","startIndex","pageIndex","pageSize","endIndex","Math","min","MatDialog","ChangeDetectorRef","viewQuery","ProcesosComponent_Query","ProcesosComponent_div_8_Template","ProcesosComponent_Template_button_click_9_listener","ProcesosComponent_Template_button_click_17_listener","ProcesosComponent_Template_button_click_21_listener","ProcesosComponent_Template_input_ngModelChange_29_listener","$event","ProcesosComponent_Template_mat_select_ngModelChange_35_listener","ɵɵelementContainerStart","ProcesosComponent_th_45_Template","ProcesosComponent_td_46_Template","ɵɵelementContainerEnd","ProcesosComponent_th_48_Template","ProcesosComponent_td_49_Template","ProcesosComponent_th_51_Template","ProcesosComponent_td_52_Template","ProcesosComponent_th_54_Template","ProcesosComponent_td_55_Template","ProcesosComponent_tr_56_Template","ProcesosComponent_tr_57_Template","ProcesosComponent_tr_58_Template","ɵɵclassProp","ɵɵpureFunction0","_c0","ɵɵtextInterpolate3","NgClass","NgModel","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatNoDataRow","MatSuffix","i13","i14","MatSortHeader","i15","MatTooltip","i16"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}