{"version":3,"file":"src_app_pages_apps_contacts_contacts-grid_contacts-grid_component_ts.js","mappings":"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","sources":["./src/app/pages/apps/contacts/components/contacts-card/contacts-card.component.ts","./src/app/pages/apps/contacts/components/contacts-card/contacts-card.component.html","./src/app/pages/apps/contacts/contacts-grid/contacts-grid.component.ts","./src/app/pages/apps/contacts/contacts-grid/contacts-grid.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Contact } from '../../interfaces/contact.interface';\nimport { NgIf } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n@Component({\n  selector: 'vex-contacts-card',\n  templateUrl: './contacts-card.component.html',\n  styleUrls: ['./contacts-card.component.scss'],\n  standalone: true,\n  imports: [MatRippleModule, MatIconModule, MatButtonModule, NgIf]\n})\nexport class ContactsCardComponent implements OnInit {\n  @Input({ required: true }) contact!: Contact;\n  @Output() openContact = new EventEmitter<Contact['id']>();\n  @Output() toggleStar = new EventEmitter<Contact['id']>();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  emitToggleStar(event: MouseEvent, contactId: Contact['id']) {\n    event.stopPropagation();\n    this.toggleStar.emit(contactId);\n  }\n}\n","<div class=\"card overflow-hidden\">\n  <div\n    (click)=\"openContact.emit(contact.id)\"\n    class=\"p-4 text-center hover:bg-hover transition duration-400 ease-out-swift cursor-pointer relative\"\n    matRipple>\n    <img [src]=\"contact.imageSrc\" class=\"avatar h-24 w-24 mx-auto\" />\n\n    <h2 class=\"title mb-1 mt-3\">{{ contact.name }}</h2>\n    <div class=\"body-2 text-secondary flex items-center justify-center\">\n      <mat-icon\n        class=\"ltr:mr-1 rtl:ml-1 icon-xs\"\n        svgIcon=\"mat:business\"></mat-icon>\n      <span>{{ contact.company }}</span>\n    </div>\n\n    <div class=\"body-2 text-secondary flex items-center justify-center\">\n      <mat-icon\n        class=\"ltr:mr-1 rtl:ml-1 icon-xs\"\n        svgIcon=\"mat:phone\"></mat-icon>\n      <span>{{ contact.phone }}</span>\n    </div>\n\n    <button\n      (click)=\"emitToggleStar($event, contact.id)\"\n      class=\"absolute top-2 right-2\"\n      mat-icon-button\n      type=\"button\">\n      <mat-icon\n        *ngIf=\"contact?.starred\"\n        class=\"text-amber-600\"\n        svgIcon=\"mat:star\"></mat-icon>\n      <mat-icon *ngIf=\"!contact?.starred\" svgIcon=\"mat:star_border\"></mat-icon>\n    </button>\n  </div>\n\n  <div class=\"bg-app-bar p-2 flex items-center justify-around\">\n    <button class=\"text-secondary\" mat-icon-button type=\"button\">\n      <mat-icon svgIcon=\"mat:phone\"></mat-icon>\n    </button>\n\n    <button class=\"text-secondary\" mat-icon-button type=\"button\">\n      <mat-icon svgIcon=\"mat:mail\"></mat-icon>\n    </button>\n\n    <button class=\"text-secondary\" mat-icon-button type=\"button\">\n      <mat-icon svgIcon=\"mat:chat\"></mat-icon>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Link } from '@vex/interfaces/link.interface';\nimport { scaleIn400ms } from '@vex/animations/scale-in.animation';\nimport { fadeInRight400ms } from '@vex/animations/fade-in-right.animation';\nimport { ContactsEditComponent } from '../components/contacts-edit/contacts-edit.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Contact } from '../interfaces/contact.interface';\nimport { contactsData } from '../../../../../static-data/contacts';\nimport { trackById } from '@vex/utils/track-by';\nimport { stagger40ms } from '@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\nimport { scaleFadeIn400ms } from '@vex/animations/scale-fade-in.animation';\nimport { ActivatedRoute, RouterLink, RouterLinkActive } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { ContactsCardComponent } from '../components/contacts-card/contacts-card.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'vex-contacts-grid',\n  templateUrl: './contacts-grid.component.html',\n  styleUrls: ['./contacts-grid.component.scss'],\n  animations: [\n    scaleIn400ms,\n    fadeInRight400ms,\n    stagger40ms,\n    fadeInUp400ms,\n    scaleFadeIn400ms\n  ],\n  standalone: true,\n  imports: [\n    MatIconModule,\n    MatTabsModule,\n    NgFor,\n    RouterLinkActive,\n    RouterLink,\n    MatButtonModule,\n    MatTooltipModule,\n    NgIf,\n    ContactsCardComponent,\n    AsyncPipe\n  ]\n})\nexport class ContactsGridComponent implements OnInit {\n  contacts = contactsData;\n  filteredContacts$ = this.route.paramMap.pipe(\n    map((paramMap) => paramMap.get('activeCategory')),\n    map((activeCategory) => {\n      switch (activeCategory) {\n        case 'all': {\n          return contactsData;\n        }\n\n        case 'starred': {\n          return contactsData.filter((c) => c.starred);\n        }\n\n        default: {\n          return [];\n        }\n      }\n    })\n  );\n\n  links: Link[] = [\n    {\n      label: 'All Contacts',\n      route: '../all'\n    },\n    {\n      label: 'Frequently Contacted',\n      route: '../frequent'\n    },\n    {\n      label: 'Starred',\n      route: '../starred'\n    }\n  ];\n\n  trackById = trackById;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {}\n\n  openContact(id?: Contact['id']) {\n    this.dialog.open(ContactsEditComponent, {\n      data: id || null,\n      width: '600px'\n    });\n  }\n\n  toggleStar(id: Contact['id']) {\n    const contact = contactsData.find((c) => c.id === id);\n\n    if (contact) {\n      contact.starred = !contact.starred;\n    }\n  }\n}\n","<div class=\"h-full flex flex-col\">\n  <div class=\"p-6 pb-0 bg-foreground shadow-b flex-none border-b\">\n    <div class=\"container px-0\">\n      <h1 class=\"display-1 font-bold mt-0 mb-4 flex items-center\">\n        <span\n          @scaleIn\n          class=\"w-12 h-12 rounded-full text-primary-600 ltr:mr-4 rtl:ml-4 flex items-center justify-center bg-primary-600/10\">\n          <mat-icon svgIcon=\"mat:contacts\"></mat-icon>\n        </span>\n        <span @fadeInRight class=\"block\">Contacts</span>\n      </h1>\n\n      <div class=\"flex items-center\">\n        <nav [tabPanel]=\"tabPanel\" class=\"border-0 flex-auto\" mat-tab-nav-bar>\n          <a\n            #rla=\"routerLinkActive\"\n            *ngFor=\"let link of links\"\n            [active]=\"rla.isActive\"\n            [disabled]=\"link.disabled\"\n            [routerLink]=\"link.route\"\n            mat-tab-link\n            routerLinkActive=\"\">\n            {{ link.label }}\n          </a>\n        </nav>\n        <mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\n\n        <button\n          class=\"flex-none hidden sm:inline-block\"\n          color=\"primary\"\n          mat-icon-button\n          matTooltip=\"Search Contacts\"\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:search\"></mat-icon>\n        </button>\n\n        <button\n          class=\"ltr:ml-1 rtl:mr-1 flex-none hidden sm:inline-block\"\n          color=\"primary\"\n          mat-icon-button\n          matTooltip=\"Export Contacts\"\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:cloud_download\"></mat-icon>\n        </button>\n\n        <button\n          class=\"ltr:ml-1 rtl:mr-1 flex-none\"\n          color=\"primary\"\n          mat-icon-button\n          matTooltip=\"Filter Contacts\"\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\n        </button>\n\n        <button\n          (click)=\"openContact()\"\n          class=\"ltr:ml-1 rtl:mr-1 flex-none sm:hidden\"\n          color=\"primary\"\n          mat-mini-fab\n          matTooltip=\"Add Contact\"\n          type=\"button\">\n          <mat-icon svgIcon=\"mat:person_add\"></mat-icon>\n        </button>\n\n        <button\n          (click)=\"openContact()\"\n          class=\"ltr:ml-4 rtl:mr-4 flex-none hidden sm:inline-block\"\n          color=\"primary\"\n          mat-flat-button\n          type=\"button\">\n          <mat-icon\n            class=\"ltr:mr-2 rtl:ml-2 ltr:-ml-1 rtl:-mr-1 icon-sm\"\n            svgIcon=\"mat:add\"></mat-icon>\n          <span>Add Contact</span>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"((filteredContacts$ | async)?.length ?? 0) > 0\"\n    @stagger\n    class=\"overflow-y-auto flex-auto\">\n    <div\n      class=\"p-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6 container\">\n      <vex-contacts-card\n        (openContact)=\"openContact($event)\"\n        (toggleStar)=\"toggleStar($event)\"\n        *ngFor=\"let contact of filteredContacts$ | async; trackBy: trackById\"\n        @fadeInUp\n        [contact]=\"contact\"></vex-contacts-card>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"((filteredContacts$ | async)?.length ?? 0) === 0\"\n    @scaleFadeIn\n    class=\"flex-auto flex flex-col items-center justify-center\">\n    <img class=\"m-12 h-64\" src=\"assets/img/illustrations/idea.svg\" />\n    <h2 class=\"headline m-0 text-center\">No contacts matching your filters</h2>\n  </div>\n</div>\n"],"names":["EventEmitter","NgIf","MatButtonModule","MatIconModule","MatRippleModule","i0","ɵɵelement","ContactsCardComponent","constructor","openContact","toggleStar","ngOnInit","emitToggleStar","event","contactId","stopPropagation","emit","_","_2","selectors","inputs","contact","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ContactsCardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ContactsCardComponent_Template_div_click_1_listener","id","ɵɵtext","ɵɵelementEnd","ContactsCardComponent_Template_button_click_13_listener","$event","ɵɵtemplate","ContactsCardComponent_mat_icon_14_Template","ContactsCardComponent_mat_icon_15_Template","ɵɵadvance","ɵɵproperty","imageSrc","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","company","phone","starred","i1","MatRipple","i2","MatIcon","i3","MatIconButton","styles","scaleIn400ms","fadeInRight400ms","ContactsEditComponent","contactsData","trackById","stagger40ms","fadeInUp400ms","scaleFadeIn400ms","RouterLink","RouterLinkActive","map","MatTooltipModule","AsyncPipe","NgFor","MatTabsModule","_r5","isActive","link_r4","disabled","route","ɵɵtextInterpolate1","label","ContactsGridComponent_div_25_vex_contacts_card_2_Template_vex_contacts_card_openContact_0_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","ContactsGridComponent_div_25_vex_contacts_card_2_Template_vex_contacts_card_toggleStar_0_listener","ctx_r10","undefined","contact_r7","ContactsGridComponent_div_25_vex_contacts_card_2_Template","ɵɵpipeBind1","ctx_r2","filteredContacts$","ContactsGridComponent","dialog","contacts","paramMap","pipe","get","activeCategory","filter","c","links","open","data","width","find","ɵɵdirectiveInject","MatDialog","ActivatedRoute","ContactsGridComponent_Template","ContactsGridComponent_a_10_Template","ContactsGridComponent_Template_button_click_19_listener","ContactsGridComponent_Template_button_click_21_listener","ContactsGridComponent_div_25_Template","ContactsGridComponent_div_27_Template","_r1","tmp_2_0","length","tmp_3_0","i4","MatTabNav","MatTabNavPanel","MatTabLink","i5","MatButton","MatMiniFabButton","i6","MatTooltip","animation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}