{"version":3,"file":"src_app_pages_dashboards_dashboard-admin-analytics_dashboard-admin-analytics_component_ts.js","mappings":"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","sources":["./src/app/core/services/real-time-analytics.service.ts","./src/app/pages/dashboards/components/widgets/widget-agency-metrics/widget-agency-metrics.component.ts","./src/app/pages/dashboards/components/widgets/widget-agency-metrics/widget-agency-metrics.component.html","./src/app/pages/dashboards/dashboard-admin-analytics/dashboard-admin-analytics.component.ts","./src/app/pages/dashboards/dashboard-admin-analytics/dashboard-admin-analytics.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport interface RealTimeMetric {\n  id: string;\n  type: 'document' | 'process' | 'user' | 'system';\n  action: 'created' | 'updated' | 'deleted' | 'status_changed';\n  data: any;\n  timestamp: Date;\n}\n\nexport interface RealTimeStats {\n  documents: {\n    total: number;\n    today: number;\n    pending: number;\n    completed: number;\n  };\n  processes: {\n    total: number;\n    active: number;\n    completed: number;\n    averageTime: number;\n  };\n  users: {\n    online: number;\n    total: number;\n    activeToday: number;\n  };\n  system: {\n    uptime: number;\n    responseTime: number;\n    memoryUsage: number;\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RealTimeAnalyticsService {\n  private socket: WebSocket | null = null;\n  private connectionStatus = new BehaviorSubject<boolean>(false);\n  private metricsSubject = new Subject<RealTimeMetric>();\n  private statsSubject = new BehaviorSubject<RealTimeStats | null>(null);\n  \n  public connectionStatus$ = this.connectionStatus.asObservable();\n  public metrics$ = this.metricsSubject.asObservable();\n  public stats$ = this.statsSubject.asObservable();\n\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n  private reconnectDelay = 1000;\n\n  constructor() {\n    this.initializeConnection();\n  }\n\n  private initializeConnection(): void {\n    try {\n      // En un entorno real, usarías el WebSocket del backend\n      // Por ahora simulamos la conexión\n      this.simulateConnection();\n    } catch (error) {\n      console.error('Error initializing WebSocket connection:', error);\n      this.scheduleReconnect();\n    }\n  }\n\n  private simulateConnection(): void {\n    // Simulamos una conexión exitosa\n    this.connectionStatus.next(true);\n    \n    // Simulamos métricas en tiempo real\n    this.startSimulation();\n  }\n\n  private startSimulation(): void {\n    // Simulamos eventos cada 5-10 segundos\n    setInterval(() => {\n      if (this.connectionStatus.value) {\n        this.simulateRandomMetric();\n        this.updateStats();\n      }\n    }, Math.random() * 5000 + 5000);\n  }\n\n  private simulateRandomMetric(): void {\n    const types: RealTimeMetric['type'][] = ['document', 'process', 'user', 'system'];\n    const actions: RealTimeMetric['action'][] = ['created', 'updated', 'deleted', 'status_changed'];\n    \n    const type = types[Math.floor(Math.random() * types.length)];\n    const action = actions[Math.floor(Math.random() * actions.length)];\n    \n    const metric: RealTimeMetric = {\n      id: this.generateId(),\n      type,\n      action,\n      data: this.generateMetricData(type, action),\n      timestamp: new Date()\n    };\n\n    this.metricsSubject.next(metric);\n  }\n\n  private generateMetricData(type: RealTimeMetric['type'], action: RealTimeMetric['action']): any {\n    switch (type) {\n      case 'document':\n        return {\n          documentId: Math.floor(Math.random() * 1000),\n          documentType: 'Contrato',\n          agency: 'Agencia Central',\n          status: action === 'status_changed' ? 'completed' : 'pending'\n        };\n      case 'process':\n        return {\n          processId: Math.floor(Math.random() * 1000),\n          processName: 'Proceso de Aprobación',\n          agency: 'Agencia Central',\n          status: action === 'status_changed' ? 'completed' : 'in_progress'\n        };\n      case 'user':\n        return {\n          userId: Math.floor(Math.random() * 100),\n          username: 'usuario' + Math.floor(Math.random() * 100),\n          action: action,\n          timestamp: new Date()\n        };\n      case 'system':\n        return {\n          metric: 'performance',\n          value: Math.floor(Math.random() * 100),\n          threshold: 80\n        };\n      default:\n        return {};\n    }\n  }\n\n  private updateStats(): void {\n    const stats: RealTimeStats = {\n      documents: {\n        total: Math.floor(Math.random() * 1000) + 500,\n        today: Math.floor(Math.random() * 50) + 10,\n        pending: Math.floor(Math.random() * 100) + 20,\n        completed: Math.floor(Math.random() * 800) + 200\n      },\n      processes: {\n        total: Math.floor(Math.random() * 500) + 200,\n        active: Math.floor(Math.random() * 50) + 10,\n        completed: Math.floor(Math.random() * 400) + 100,\n        averageTime: Math.floor(Math.random() * 120) + 30\n      },\n      users: {\n        online: Math.floor(Math.random() * 20) + 5,\n        total: Math.floor(Math.random() * 100) + 50,\n        activeToday: Math.floor(Math.random() * 30) + 10\n      },\n      system: {\n        uptime: 99.9,\n        responseTime: Math.floor(Math.random() * 50) + 100,\n        memoryUsage: Math.floor(Math.random() * 20) + 60\n      }\n    };\n\n    this.statsSubject.next(stats);\n  }\n\n  private generateId(): string {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  private scheduleReconnect(): void {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      setTimeout(() => {\n        console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n        this.initializeConnection();\n      }, this.reconnectDelay * this.reconnectAttempts);\n    } else {\n      console.error('Max reconnection attempts reached');\n      this.connectionStatus.next(false);\n    }\n  }\n\n  // Métodos públicos\n  connect(): void {\n    if (!this.connectionStatus.value) {\n      this.reconnectAttempts = 0;\n      this.initializeConnection();\n    }\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n    this.connectionStatus.next(false);\n  }\n\n  sendMessage(message: any): void {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(message));\n    }\n  }\n\n  subscribeToMetric(type: RealTimeMetric['type']): Observable<RealTimeMetric> {\n    return this.metrics$.pipe(\n      filter(metric => metric.type === type)\n    );\n  }\n\n  getCurrentStats(): RealTimeStats | null {\n    return this.statsSubject.value;\n  }\n\n  isConnected(): boolean {\n    return this.connectionStatus.value;\n  }\n}\n","\n\nimport { Component, Input, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { Subject, takeUntil } from 'rxjs';\nimport { AnalyticsService, AnalyticsFilters } from '../../../../../core/services/analytics.service';\n\nexport interface AgencyMetrics {\n  todayCases: number;\n  monthlyCases: number;\n  totalCases: number;\n  totalUsers: number;\n  monthlyAgencyCases: number;\n  monthlyName: string;\n}\n\n@Component({\n  selector: 'vex-widget-agency-metrics',\n  templateUrl: './widget-agency-metrics.component.html',\n  styleUrls: ['./widget-agency-metrics.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class WidgetAgencyMetricsComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() agencyId: number | null = null;\n  @Input() showDetails = true;\n  @Input() compact = false;\n\n  agencyMetrics: AgencyMetrics | null = null;\n  loading = true;\n  error: string | null = null;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private analyticsService: AnalyticsService) {}\n\n  ngOnInit(): void {\n    this.loadAgencyMetrics();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('🏢 AgencyMetrics ngOnChanges called with changes:', changes);\n    if (changes['agencyId'] && !changes['agencyId'].firstChange) {\n      console.log('🏢 AgencyMetrics: Agency changed, triggering data reload');\n      console.log('🏢 AgencyMetrics: New agencyId:', this.agencyId);\n      this.loadAgencyMetrics();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private loadAgencyMetrics(): void {\n    this.loading = true;\n    this.error = null;\n\n    // Solo aplicar filtro de agencia, ignorar filtros de fecha\n    const filters: AnalyticsFilters | undefined = this.agencyId ? { agencyId: this.agencyId } : undefined;\n    \n    console.log('🏢 AgencyMetrics: Loading agency metrics with filters:', filters);\n    console.log('🏢 AgencyMetrics: Current agencyId:', this.agencyId);\n    console.log('🏢 AgencyMetrics: Filters object:', filters);\n\n    this.analyticsService.getAgencyMetrics(filters)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (metrics) => {\n          console.log('🏢 AgencyMetrics: Received metrics:', metrics);\n          this.agencyMetrics = metrics;\n          this.loading = false;\n        },\n        error: (error) => {\n          console.error('🏢 AgencyMetrics: Error loading agency metrics:', error);\n          this.error = 'Error al cargar métricas de agencia';\n          this.loading = false;\n        }\n      });\n  }\n\n  refresh(): void {\n    this.loadAgencyMetrics();\n  }\n\n  getMonthName(): string {\n    const months = [\n      'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n      'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n    ];\n    return months[new Date().getMonth()];\n  }\n}\n","<div class=\"widget-agency-metrics\">\n  <div *ngIf=\"loading\" class=\"flex justify-center items-center h-32\">\n    <mat-spinner diameter=\"40\"></mat-spinner>\n  </div>\n\n  <div *ngIf=\"error\" class=\"text-center text-red-600 p-4\">\n    <mat-icon class=\"text-red-500 mb-2\">error</mat-icon>\n    <p>{{ error }}</p>\n  </div>\n\n  <div *ngIf=\"agencyMetrics && !loading\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n    <!-- Expedientes Hoy -->\n    <mat-card class=\"metric-card\">\n      <div class=\"flex items-center space-x-4 p-4\">\n        <div class=\"flex-shrink-0\">\n          <div class=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n            <mat-icon class=\"text-green-600 text-2xl\">event_available</mat-icon>\n          </div>\n        </div>\n        <div class=\"flex-1 min-w-0\">\n          <div class=\"text-2xl font-bold text-blue-500\">{{ agencyMetrics.todayCases }}</div>\n          <div class=\"text-sm font-medium text-gray-700\">Expedientes</div>\n          <div class=\"text-xs text-gray-500\">Hoy</div>\n        </div>\n      </div>\n    </mat-card>\n\n    <!-- Expedientes del Mes -->\n    <mat-card class=\"metric-card\">\n      <div class=\"flex items-center space-x-4 p-4\">\n        <div class=\"flex-shrink-0\">\n          <div class=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center\">\n            <mat-icon class=\"text-red-600 text-2xl\">calendar_month</mat-icon>\n          </div>\n        </div>\n        <div class=\"flex-1 min-w-0\">\n          <div class=\"text-2xl font-bold text-blue-500\">{{ agencyMetrics.monthlyCases }}</div>\n          <div class=\"text-sm font-medium text-gray-700\">Expedientes</div>\n          <div class=\"text-xs text-gray-500\">{{ getMonthName() }}</div>\n        </div>\n      </div>\n    </mat-card>\n\n    <!-- Total Expedientes -->\n    <mat-card class=\"metric-card\">\n      <div class=\"flex items-center space-x-4 p-4\">\n        <div class=\"flex-shrink-0\">\n          <div class=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center\">\n            <mat-icon class=\"text-orange-600 text-2xl\">trending_up</mat-icon>\n          </div>\n        </div>\n        <div class=\"flex-1 min-w-0\">\n          <div class=\"text-2xl font-bold text-blue-500\">{{ agencyMetrics.totalCases }}</div>\n          <div class=\"text-sm font-medium text-gray-700\">Expedientes</div>\n          <div class=\"text-xs text-gray-500\">Total</div>\n        </div>\n      </div>\n    </mat-card>\n\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { WidgetAgencyMetricsComponent } from '../components/widgets/widget-agency-metrics/widget-agency-metrics.component';\nimport { AgencyFilterComponent } from '../components/agency-filter/agency-filter.component';\nimport { DateRangeFilterComponent, DateRange } from '../components/date-range-filter/date-range-filter.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelect } from '@angular/material/select';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { AnalyticsService, AnalyticsFilters } from '../../../core/services/analytics.service';\nimport { AgencyService } from '../../../core/services/agency.service';\nimport { DefaultAgencyService } from '../../../core/services/default-agency.service';\nimport { UserService } from '../../../core/services/user.service';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { RealTimeAnalyticsService } from '../../../core/services/real-time-analytics.service';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'vex-dashboard-admin-analytics',\n  templateUrl: './dashboard-admin-analytics.component.html',\n  styleUrls: ['./dashboard-admin-analytics.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTabsModule,\n    MatSnackBarModule,\n                WidgetAgencyMetricsComponent,\n                AgencyFilterComponent,\n                DateRangeFilterComponent,\n                MatFormFieldModule,\n                MatSelectModule,\n                MatDatepickerModule,\n                MatInputModule,\n                MatNativeDateModule,\n                MatTooltipModule,\n                ReactiveFormsModule\n  ]\n})\nexport class DashboardAdminAnalyticsComponent implements OnInit, OnDestroy {\n  dashboardData: any = null;\n  loading = true;\n  error: string | null = null;\n  currentFilters: AnalyticsFilters = {};\n  selectedAgencyId: number | null = null;\n  selectedDateRange: DateRange | null = null;\n  selectedUserId: number | null = null;\n  showManualDateInputs = false;\n  agencies: any[] = [];\n  users: any[] = [];\n  dateRangeForm: FormGroup;\n  activeDateRange: string | null = null;\n  currentUser: any = null;\n  isUserFilterDisabled = false;\n  selectedTab = 0;\n\n  // Métricas específicas para administradores\n  adminMetrics = {\n    systemHealth: {\n      uptime: 99.9,\n      responseTime: 150,\n      memoryUsage: 65,\n      cpuUsage: 45,\n      diskUsage: 78\n    },\n    securityMetrics: {\n      failedLogins: 12,\n      suspiciousActivity: 3,\n      blockedIPs: 5,\n      lastSecurityScan: new Date()\n    },\n    performanceMetrics: {\n      averageLoadTime: 1.2,\n      peakConcurrentUsers: 156,\n      databaseConnections: 23,\n      cacheHitRate: 94.5\n    },\n    businessMetrics: {\n      totalRevenue: 125000,\n      monthlyGrowth: 12.5,\n      customerSatisfaction: 4.6,\n      supportTickets: 45\n    }\n  };\n\n  private destroy$ = new Subject<void>();\n\n  @ViewChild('userSelect') userSelect!: MatSelect;\n\n  constructor(\n    private analyticsService: AnalyticsService,\n    private agencyService: AgencyService,\n    private defaultAgencyService: DefaultAgencyService,\n    private userService: UserService,\n    private authService: AuthService,\n    private realTimeService: RealTimeAnalyticsService,\n    private snackBar: MatSnackBar,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    this.dateRangeForm = new FormGroup({\n      startDate: new FormControl(null),\n      endDate: new FormControl(null)\n    });\n  }\n\n  ngOnInit(): void {\n    console.log('🚀 Iniciando DashboardAdminAnalyticsComponent...');\n    \n    // Cargar usuario actual PRIMERO\n    this.loadCurrentUser();\n    \n    // Luego cargar datos del dashboard\n    this.loadDashboardData();\n    this.loadAgencies();\n    this.initializeRealTimeConnection();\n    \n    // Establecer \"Este mes\" como período por defecto\n    this.setThisMonth();\n    \n    // Suscribirse a cambios en el formulario de fechas\n    this.dateRangeForm.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.onDateRangeChange();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private loadDashboardData(): void {\n    this.loading = true;\n    this.error = null;\n\n    this.analyticsService.getDashboardData(this.currentFilters)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (data) => {\n          this.dashboardData = data;\n          this.loading = false;\n        },\n        error: (error) => {\n          console.error('Error loading admin dashboard data:', error);\n          this.error = 'Error al cargar datos del dashboard de administración';\n          this.loading = false;\n        }\n      });\n  }\n\n  private initializeRealTimeConnection(): void {\n    this.realTimeService.connect();\n  }\n\n  onAgencyChange(agencyId: number | null): void {\n    console.log('🏢 onAgencyChange llamado con agencyId:', agencyId);\n    this.selectedAgencyId = agencyId;\n    this.currentFilters = { ...this.currentFilters, agencyId: agencyId || undefined };\n    \n    // Cargar usuarios para la agencia seleccionada\n    this.loadUsers(agencyId);\n    \n    // Verificar si el usuario actual existe y es gerente/admin\n    console.log('🔍 Verificando usuario actual en onAgencyChange:', this.currentUser);\n    console.log('🔍 isManagerOrAdmin result:', this.isManagerOrAdmin(this.currentUser));\n    \n    // Si el usuario es gerente o administrador, seleccionar automáticamente \"Todos los usuarios\"\n    if (this.isManagerOrAdmin(this.currentUser)) {\n      console.log('👑 Usuario es gerente/admin, seleccionando \"Todos los usuarios\" al cambiar agencia');\n      this.selectedUserId = null;\n      this.currentFilters = { ...this.currentFilters, userId: undefined };\n      console.log('👑 selectedUserId establecido a null al cambiar agencia');\n      console.log('👑 currentFilters después del cambio:', this.currentFilters);\n    } else {\n      console.log('👤 Usuario NO es gerente/admin, no se aplica selección automática');\n    }\n    \n    this.loadDashboardData();\n  }\n\n  onDateRangeChange(): void {\n    const formValue = this.dateRangeForm.value;\n    const dateRange: DateRange = {\n      startDate: formValue.startDate,\n      endDate: formValue.endDate\n    };\n\n    if (this.isValidDateRange(dateRange)) {\n      this.selectedDateRange = dateRange;\n      this.currentFilters = { \n        ...this.currentFilters, \n        dateRange: dateRange \n      };\n      this.loadDashboardData();\n    } else {\n      this.selectedDateRange = null;\n      this.currentFilters = { \n        ...this.currentFilters, \n        dateRange: undefined \n      };\n      this.loadDashboardData();\n    }\n  }\n\n  private isValidDateRange(dateRange: DateRange): boolean {\n    if (!dateRange.startDate || !dateRange.endDate) {\n      return false;\n    }\n    return dateRange.startDate <= dateRange.endDate;\n  }\n\n  private loadAgencies(): void {\n    console.log('🏢 Cargando agencias asignadas al usuario...');\n    \n    this.defaultAgencyService.obtenerAgencias()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (agencias) => {\n          console.log('🏢 Agencias asignadas al usuario:', agencias);\n          this.agencies = agencias;\n          \n          // Establecer agencia predeterminada\n          setTimeout(() => {\n            this.defaultAgencyService.establecerAgenciaPredeterminada(true).subscribe({\n              next: (agenciaId) => {\n                if (agenciaId) {\n                  console.log('✅ Agencia predeterminada establecida:', agenciaId);\n                  this.selectedAgencyId = agenciaId;\n                  this.onAgencyChange(agenciaId);\n                } else {\n                  console.warn('⚠️ No se pudo establecer agencia predeterminada');\n                }\n              },\n              error: (error) => {\n                console.error('❌ Error estableciendo agencia predeterminada:', error);\n                // Si falla, intentar seleccionar la primera agencia disponible\n                if (this.agencies.length > 0) {\n                  const primeraAgencia = this.agencies[0];\n                  console.log('🔄 Seleccionando primera agencia disponible como fallback:', primeraAgencia);\n                  this.selectedAgencyId = primeraAgencia.Id;\n                  this.onAgencyChange(primeraAgencia.Id);\n                }\n              }\n            });\n          }, 100);\n        },\n        error: (error) => {\n          console.error('🏢 Error cargando agencias:', error);\n          this.agencies = [];\n          this.snackBar.open('Error al cargar las agencias', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  private loadUsers(agencyId: number | null): void {\n    console.log('👥 Cargando usuarios para agencia:', agencyId);\n    \n    this.userService.getUsersByAgency(agencyId || undefined)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('👥 Respuesta de usuarios:', response);\n          \n                      if (response.success && response.data && response.data.users) {\n                        this.users = response.data.users;\n                        console.log('👥 Usuarios cargados:', this.users.length);\n                        \n                        // Verificar si debemos aplicar selección automática para administradores\n                        if (this.isManagerOrAdmin(this.currentUser)) {\n                          console.log('👑 Aplicando selección automática después de cargar usuarios');\n                          setTimeout(() => {\n                            // Estrategia diferente: cambiar temporalmente el valor y luego establecerlo a null\n                            this.selectedUserId = -1; // Valor temporal que no existe\n                            this.changeDetector.detectChanges();\n                            \n                            setTimeout(() => {\n                              this.selectedUserId = null;\n                              this.currentFilters = { ...this.currentFilters, userId: undefined };\n                              console.log('👑 selectedUserId establecido a null después de cargar usuarios');\n                              console.log('👑 currentFilters actualizado después de cargar usuarios:', this.currentFilters);\n                              \n                              // Forzar detección de cambios para actualizar el dropdown\n                              this.changeDetector.detectChanges();\n                              console.log('🔄 Change detection ejecutado para actualizar dropdown');\n                              \n                              // Forzar actualización del mat-select directamente\n                              if (this.userSelect) {\n                                this.userSelect.writeValue(null);\n                                console.log('🔄 MatSelect writeValue(null) ejecutado');\n                              }\n                            }, 50);\n                          }, 100);\n                        }\n                      } else {\n            console.warn('👥 Respuesta de usuarios no válida:', response);\n            this.users = [];\n          }\n        },\n        error: (error) => {\n          console.error('👥 Error cargando usuarios:', error);\n          this.users = [];\n          this.snackBar.open('Error al cargar los usuarios', 'Cerrar', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  private loadCurrentUser(): void {\n    console.log('👤 Cargando información del usuario actual...');\n    \n    // Obtener usuario actual del servicio de autenticación\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (this.currentUser) {\n      console.log('👤 Usuario actual:', this.currentUser);\n      console.log('👤 Role ID:', this.currentUser.role_id);\n      console.log('👤 Role Name:', this.currentUser.role_name);\n      \n      // Verificar si el usuario es asesor u operador\n      this.isUserFilterDisabled = this.isAdvisorOrOperator(this.currentUser);\n      console.log('🔒 isUserFilterDisabled:', this.isUserFilterDisabled);\n      \n      if (this.isUserFilterDisabled) {\n        console.log('🔒 Usuario es asesor u operador, deshabilitando filtro de usuario');\n        // Seleccionar automáticamente el usuario actual\n        this.selectedUserId = parseInt(this.currentUser.id);\n        this.onUserChange(this.selectedUserId);\n      } else if (this.isManagerOrAdmin(this.currentUser)) {\n        console.log('👑 Usuario es gerente o administrador, seleccionando \"Todos los usuarios\"');\n        // Seleccionar automáticamente \"Todos los usuarios\"\n        this.selectedUserId = null;\n        console.log('👑 selectedUserId establecido a:', this.selectedUserId);\n        this.onUserChange(null);\n        console.log('👑 onUserChange(null) ejecutado');\n      } else {\n        console.log('👤 Usuario con rol no reconocido, no se aplica selección automática');\n      }\n    } else {\n      console.warn('👤 No se pudo obtener información del usuario actual');\n    }\n  }\n\n  private isAdvisorOrOperator(user: any): boolean {\n    if (!user || !user.role_name) {\n      return false;\n    }\n    \n    const roleName = user.role_name.toLowerCase();\n    return roleName.includes('asesor') || roleName.includes('operador');\n  }\n\n  private isManagerOrAdmin(user: any): boolean {\n    if (!user) {\n      return false;\n    }\n    \n    // Verificar por role_id (admin tiene role_id = '7')\n    if (user.role_id === '7' || user.role_id === 7) {\n      console.log('👑 Usuario identificado como admin por role_id:', user.role_id);\n      return true;\n    }\n    \n    // Verificar por role_name\n    if (user.role_name) {\n      const roleName = user.role_name.toLowerCase();\n      const isManagerOrAdmin = roleName.includes('gerente') || roleName.includes('administrador') || roleName.includes('admin');\n      if (isManagerOrAdmin) {\n        console.log('👑 Usuario identificado como gerente/admin por role_name:', user.role_name);\n      }\n      return isManagerOrAdmin;\n    }\n    \n    return false;\n  }\n\n  hasAgencies(): boolean {\n    return Array.isArray(this.agencies) && this.agencies.length > 0;\n  }\n\n  hasUsers(): boolean {\n    return Array.isArray(this.users) && this.users.length > 0;\n  }\n\n  trackByUserId(index: number, user: any): any {\n    return user?.Id || index;\n  }\n\n  onUserChange(userId: number | null): void {\n    console.log('🔄 onUserChange llamado con userId:', userId);\n    this.selectedUserId = userId;\n    console.log('🔄 selectedUserId actualizado a:', this.selectedUserId);\n    this.currentFilters = { ...this.currentFilters, userId: userId || undefined };\n    console.log('🔄 currentFilters actualizado:', this.currentFilters);\n    this.loadDashboardData();\n  }\n\n  // Método para verificar el estado actual del filtro\n  getCurrentUserFilterState(): void {\n    console.log('🔍 Estado actual del filtro de usuario:');\n    console.log('  - selectedUserId:', this.selectedUserId);\n    console.log('  - isUserFilterDisabled:', this.isUserFilterDisabled);\n    console.log('  - users.length:', this.users.length);\n    console.log('  - currentUser.role_id:', this.currentUser?.role_id);\n    console.log('  - currentUser.role_name:', this.currentUser?.role_name);\n  }\n\n  clearUserFilter(): void {\n    this.selectedUserId = null;\n    this.onUserChange(null);\n  }\n\n  trackByAgencyId(index: number, agency: any): any {\n    return agency?.Id || index;\n  }\n\n  clearAgencyFilter(): void {\n    this.selectedAgencyId = null;\n    this.onAgencyChange(null);\n  }\n\n  hasDateRange(): boolean {\n    return this.selectedDateRange !== null && \n           this.selectedDateRange.startDate !== null && \n           this.selectedDateRange.endDate !== null;\n  }\n\n  toggleManualDateInputs(): void {\n    this.showManualDateInputs = !this.showManualDateInputs;\n  }\n\n  clearDateRange(): void {\n    this.dateRangeForm.patchValue({\n      startDate: null,\n      endDate: null\n    });\n    this.selectedDateRange = null;\n    this.activeDateRange = null;\n    this.currentFilters = { \n      ...this.currentFilters, \n      dateRange: undefined \n    };\n    this.loadDashboardData();\n  }\n\n  setLast7Days(): void {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(endDate.getDate() - 7);\n    this.dateRangeForm.patchValue({ startDate, endDate });\n    this.activeDateRange = '7d';\n  }\n\n  setLast30Days(): void {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(endDate.getDate() - 30);\n    this.dateRangeForm.patchValue({ startDate, endDate });\n    this.activeDateRange = '30d';\n  }\n\n  setLast90Days(): void {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(endDate.getDate() - 90);\n    this.dateRangeForm.patchValue({ startDate, endDate });\n    this.activeDateRange = '90d';\n  }\n\n  setThisMonth(): void {\n    const now = new Date();\n    const startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n    const endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n    this.dateRangeForm.patchValue({ startDate, endDate });\n    this.activeDateRange = 'thisMonth';\n  }\n\n  setLastMonth(): void {\n    const now = new Date();\n    const startDate = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n    const endDate = new Date(now.getFullYear(), now.getMonth(), 0);\n    this.dateRangeForm.patchValue({ startDate, endDate });\n    this.activeDateRange = 'lastMonth';\n  }\n\n  setThisYear(): void {\n    const now = new Date();\n    const startDate = new Date(now.getFullYear(), 0, 1);\n    const endDate = new Date(now.getFullYear(), 11, 31);\n    this.dateRangeForm.patchValue({ startDate, endDate });\n    this.activeDateRange = 'thisYear';\n  }\n\n  searchData(): void {\n    console.log('🔍 Buscando con filtros actuales:', this.currentFilters);\n    this.loadDashboardData();\n  }\n\n  hasAnyFilter(): boolean {\n    return this.selectedAgencyId !== null || this.selectedUserId !== null || this.hasDateRange();\n  }\n\n  clearAllFilters(): void {\n    console.log('🧹 Limpiando todos los filtros');\n    \n    // Limpiar agencia\n    this.selectedAgencyId = null;\n    \n    // Limpiar usuario\n    this.selectedUserId = null;\n    \n    // Limpiar fechas\n    this.dateRangeForm.patchValue({\n      startDate: null,\n      endDate: null\n    });\n    this.selectedDateRange = null;\n    this.activeDateRange = null;\n    \n    // Limpiar filtros\n    this.currentFilters = {};\n    \n    // Recargar datos\n    this.loadDashboardData();\n    \n    this.snackBar.open('Todos los filtros han sido limpiados', 'Cerrar', {\n      duration: 2000\n    });\n  }\n\n  onFiltersChange(filters: AnalyticsFilters): void {\n    this.currentFilters = filters;\n    this.loadDashboardData();\n  }\n\n  onExportRequest(event: { format: 'pdf' | 'excel'; filters: AnalyticsFilters }): void {\n    this.analyticsService.exportAnalytics(event.format, event.filters)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (blob) => {\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = `admin-analytics-report.${event.format === 'pdf' ? 'pdf' : 'xlsx'}`;\n          link.click();\n          window.URL.revokeObjectURL(url);\n          \n          this.snackBar.open(\n            `Reporte de administración exportado como ${event.format.toUpperCase()}`,\n            'Cerrar',\n            { duration: 3000 }\n          );\n        },\n        error: (error) => {\n          console.error('Error exporting admin analytics:', error);\n          this.snackBar.open(\n            'Error al exportar el reporte de administración',\n            'Cerrar',\n            { duration: 3000 }\n          );\n        }\n      });\n  }\n\n  refreshData(): void {\n    this.loadDashboardData();\n  }\n\n  getHealthStatusColor(metric: number, thresholds: { warning: number; critical: number }): string {\n    if (metric >= thresholds.critical) return 'text-red-600';\n    if (metric >= thresholds.warning) return 'text-yellow-600';\n    return 'text-green-600';\n  }\n\n  getHealthStatusIcon(metric: number, thresholds: { warning: number; critical: number }): string {\n    if (metric >= thresholds.critical) return 'mat:error';\n    if (metric >= thresholds.warning) return 'mat:warning';\n    return 'mat:check_circle';\n  }\n\n  formatBytes(bytes: number): string {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('es-ES', {\n      style: 'currency',\n      currency: 'EUR'\n    }).format(amount);\n  }\n}\n","            <div class=\"w-full p-6 space-y-4\">\n              <!-- Filtros unificados -->\n              <div class=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 w-full\">\n                <div class=\"flex items-center justify-between gap-4 w-full\">\n                  <!-- Filtro por Agencia -->\n                  <div class=\"flex items-center space-x-4\">\n                    <mat-form-field appearance=\"outline\" class=\"min-w-48\">\n                      <mat-label>Agencia</mat-label>\n                      <mat-select \n                        [value]=\"selectedAgencyId\" \n                        (selectionChange)=\"onAgencyChange($event.value)\"\n                        [disabled]=\"loading || !hasAgencies()\">\n                        <mat-option [value]=\"null\">Todas las agencias</mat-option>\n                        <mat-option \n                          *ngFor=\"let agency of agencies; trackBy: trackByAgencyId\" \n                          [value]=\"agency.Id\">\n                          {{ agency.Name }}\n                        </mat-option>\n                      </mat-select>\n                      <mat-hint *ngIf=\"loading\">Cargando...</mat-hint>\n                      <mat-hint *ngIf=\"!loading && !hasAgencies()\">Sin agencias</mat-hint>\n                    </mat-form-field>\n\n                    <!-- Filtro por Usuario -->\n                    <mat-form-field appearance=\"outline\" class=\"min-w-96\">\n                      <mat-label>Usuario</mat-label>\n                      <mat-select \n                        #userSelect\n                        [value]=\"selectedUserId\" \n                        (selectionChange)=\"onUserChange($event.value)\"\n                        [disabled]=\"loading || !hasUsers() || isUserFilterDisabled\">\n                        <mat-option [value]=\"null\">Todos los usuarios</mat-option>\n                        <mat-option \n                          *ngFor=\"let user of users; trackBy: trackByUserId\" \n                          [value]=\"user.Id\">\n                          {{ user.Name }}\n                        </mat-option>\n                      </mat-select>\n                      <mat-hint *ngIf=\"loading\">Cargando...</mat-hint>\n                      <mat-hint *ngIf=\"!loading && !hasUsers()\">Sin usuarios</mat-hint>\n                      <mat-hint *ngIf=\"isUserFilterDisabled\">Filtro deshabilitado para su rol</mat-hint>\n                    </mat-form-field>\n                  </div>\n                  \n                  <!-- Filtros de Fechas -->\n                  <div class=\"flex items-center space-x-2\">\n                    <!-- Botones de rangos rápidos -->\n                    <div class=\"flex flex-wrap gap-1\">\n                      <button \n                        mat-stroked-button \n                        size=\"small\"\n                        class=\"text-xs px-2 py-1\"\n                        [class.mat-primary]=\"activeDateRange === '7d'\"\n                        (click)=\"setLast7Days()\">\n                        7d\n                      </button>\n                      <button \n                        mat-stroked-button \n                        size=\"small\"\n                        class=\"text-xs px-2 py-1\"\n                        [class.mat-primary]=\"activeDateRange === '30d'\"\n                        (click)=\"setLast30Days()\">\n                        30d\n                      </button>\n                      <button \n                        mat-stroked-button \n                        size=\"small\"\n                        class=\"text-xs px-2 py-1\"\n                        [class.mat-primary]=\"activeDateRange === '90d'\"\n                        (click)=\"setLast90Days()\">\n                        90d\n                      </button>\n                      <button \n                        mat-stroked-button \n                        size=\"small\"\n                        class=\"text-xs px-2 py-1\"\n                        [class.mat-primary]=\"activeDateRange === 'thisMonth'\"\n                        (click)=\"setThisMonth()\">\n                        Este mes\n                      </button>\n                      <button \n                        mat-stroked-button \n                        size=\"small\"\n                        class=\"text-xs px-2 py-1\"\n                        [class.mat-primary]=\"activeDateRange === 'lastMonth'\"\n                        (click)=\"setLastMonth()\">\n                        Mes pasado\n                      </button>\n                      <button \n                        mat-stroked-button \n                        size=\"small\"\n                        class=\"text-xs px-2 py-1\"\n                        [class.mat-primary]=\"activeDateRange === 'thisYear'\"\n                        (click)=\"setThisYear()\">\n                        Este año\n                      </button>\n                    </div>\n                    \n                    <!-- Botón toggle para fechas manuales -->\n                    <button \n                      mat-icon-button \n                      size=\"small\"\n                      class=\"toggle-button\"\n                      (click)=\"toggleManualDateInputs()\"\n                      [matTooltip]=\"showManualDateInputs ? 'Ocultar fechas manuales' : 'Mostrar fechas manuales'\">\n                      <mat-icon class=\"arrow-icon\" [class.expanded]=\"showManualDateInputs\">\n                        {{ showManualDateInputs ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}\n                      </mat-icon>\n                    </button>\n                    \n                    <!-- Botón buscar -->\n                    <button \n                      mat-icon-button \n                      color=\"primary\" \n                      size=\"small\"\n                      (click)=\"searchData()\"\n                      matTooltip=\"Buscar con filtros actuales\">\n                      <mat-icon>search</mat-icon>\n                    </button>\n                    \n                    <!-- Botón limpiar fechas -->\n                    <button \n                      *ngIf=\"hasDateRange()\"\n                      mat-icon-button \n                      color=\"warn\" \n                      size=\"small\"\n                      (click)=\"clearDateRange()\"\n                      matTooltip=\"Limpiar filtro de fechas\">\n                      <mat-icon>clear</mat-icon>\n                    </button>\n                    \n                    <!-- Botón limpiar agencia -->\n                    <button \n                      *ngIf=\"selectedAgencyId\"\n                      mat-icon-button \n                      color=\"warn\" \n                      size=\"small\"\n                      (click)=\"clearAgencyFilter()\"\n                      matTooltip=\"Limpiar filtro de agencia\">\n                      <mat-icon>clear</mat-icon>\n                    </button>\n                    \n                    <!-- Botón limpiar usuario -->\n                    <button \n                      *ngIf=\"selectedUserId\"\n                      mat-icon-button \n                      color=\"warn\" \n                      size=\"small\"\n                      (click)=\"clearUserFilter()\"\n                      matTooltip=\"Limpiar filtro de usuario\">\n                      <mat-icon>clear</mat-icon>\n                    </button>\n                    \n                    <!-- Botón limpiar todo -->\n                    <button \n                      *ngIf=\"hasAnyFilter()\"\n                      mat-icon-button \n                      color=\"warn\" \n                      size=\"small\"\n                      (click)=\"clearAllFilters()\"\n                      matTooltip=\"Limpiar todos los filtros\">\n                      <mat-icon>refresh</mat-icon>\n                    </button>\n                  </div>\n                </div>\n                \n                <!-- Selectores de fecha manuales (se muestran cuando showManualDateInputs es true) -->\n                <div *ngIf=\"showManualDateInputs\" class=\"grid grid-cols-2 gap-2 mt-4 manual-date-inputs\">\n                  <mat-form-field appearance=\"outline\" class=\"compact-field\">\n                    <mat-label>Inicio</mat-label>\n                    <input \n                      matInput \n                      [matDatepicker]=\"startPicker\"\n                      formControlName=\"startDate\"\n                      placeholder=\"Fecha inicio\">\n                    <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #startPicker></mat-datepicker>\n                  </mat-form-field>\n\n                  <mat-form-field appearance=\"outline\" class=\"compact-field\">\n                    <mat-label>Fin</mat-label>\n                    <input \n                      matInput \n                      [matDatepicker]=\"endPicker\"\n                      formControlName=\"endDate\"\n                      placeholder=\"Fecha fin\">\n                    <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #endPicker></mat-datepicker>\n                  </mat-form-field>\n                </div>\n              </div>\n\n  <!-- Estado de carga -->\n  <div *ngIf=\"loading\" class=\"flex justify-center py-12\">\n    <div class=\"text-center\">\n      <mat-icon class=\"text-4xl text-gray-400 mb-4\" svgIcon=\"mat:hourglass_empty\"></mat-icon>\n      <p class=\"text-gray-600\">Cargando datos de administración...</p>\n    </div>\n  </div>\n\n  <!-- Error -->\n  <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-6 text-center\">\n    <mat-icon class=\"text-red-500 mb-2\" svgIcon=\"mat:error\"></mat-icon>\n    <p class=\"text-red-600\">{{ error }}</p>\n    <button mat-button color=\"primary\" (click)=\"refreshData()\">\n      Reintentar\n    </button>\n  </div>\n\n  <!-- Dashboard de administración -->\n  <div *ngIf=\"!loading && !error\">\n    <mat-tab-group [(selectedIndex)]=\"selectedTab\" class=\"admin-tabs\">\n      \n      <!-- Pestaña de Métricas del Sistema -->\n      <mat-tab label=\"Sistema\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\">\n          \n          <!-- Salud del Sistema -->\n          <mat-card class=\"system-health-card\">\n            <mat-card-header>\n              <mat-card-title class=\"flex items-center space-x-2\">\n                <mat-icon class=\"text-green-600\" svgIcon=\"mat:health_and_safety\"></mat-icon>\n                <span>Salud del Sistema</span>\n              </mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"space-y-4\">\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Uptime</span>\n                <span class=\"font-semibold\" [class]=\"getHealthStatusColor(adminMetrics.systemHealth.uptime, {warning: 95, critical: 90})\">\n                  {{ adminMetrics.systemHealth.uptime }}%\n                </span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Tiempo de Respuesta</span>\n                <span class=\"font-semibold\" [class]=\"getHealthStatusColor(adminMetrics.systemHealth.responseTime, {warning: 200, critical: 500})\">\n                  {{ adminMetrics.systemHealth.responseTime }}ms\n                </span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Uso de Memoria</span>\n                <span class=\"font-semibold\" [class]=\"getHealthStatusColor(adminMetrics.systemHealth.memoryUsage, {warning: 80, critical: 90})\">\n                  {{ adminMetrics.systemHealth.memoryUsage }}%\n                </span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Uso de CPU</span>\n                <span class=\"font-semibold\" [class]=\"getHealthStatusColor(adminMetrics.systemHealth.cpuUsage, {warning: 70, critical: 85})\">\n                  {{ adminMetrics.systemHealth.cpuUsage }}%\n                </span>\n              </div>\n            </mat-card-content>\n          </mat-card>\n\n          <!-- Métricas de Seguridad -->\n          <mat-card class=\"security-metrics-card\">\n            <mat-card-header>\n              <mat-card-title class=\"flex items-center space-x-2\">\n                <mat-icon class=\"text-red-600\" svgIcon=\"mat:security\"></mat-icon>\n                <span>Seguridad</span>\n              </mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"space-y-4\">\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Logins Fallidos</span>\n                <span class=\"font-semibold text-red-600\">{{ adminMetrics.securityMetrics.failedLogins }}</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Actividad Sospechosa</span>\n                <span class=\"font-semibold text-yellow-600\">{{ adminMetrics.securityMetrics.suspiciousActivity }}</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">IPs Bloqueadas</span>\n                <span class=\"font-semibold text-red-600\">{{ adminMetrics.securityMetrics.blockedIPs }}</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Último Escaneo</span>\n                <span class=\"text-xs text-gray-500\">{{ adminMetrics.securityMetrics.lastSecurityScan | date:'short' }}</span>\n              </div>\n            </mat-card-content>\n          </mat-card>\n\n          <!-- Métricas de Rendimiento -->\n          <mat-card class=\"performance-metrics-card\">\n            <mat-card-header>\n              <mat-card-title class=\"flex items-center space-x-2\">\n                <mat-icon class=\"text-blue-600\" svgIcon=\"mat:speed\"></mat-icon>\n                <span>Rendimiento</span>\n              </mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"space-y-4\">\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Tiempo Promedio</span>\n                <span class=\"font-semibold\">{{ adminMetrics.performanceMetrics.averageLoadTime }}s</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Usuarios Concurrentes</span>\n                <span class=\"font-semibold\">{{ adminMetrics.performanceMetrics.peakConcurrentUsers }}</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Conexiones DB</span>\n                <span class=\"font-semibold\">{{ adminMetrics.performanceMetrics.databaseConnections }}</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Cache Hit Rate</span>\n                <span class=\"font-semibold text-green-600\">{{ adminMetrics.performanceMetrics.cacheHitRate }}%</span>\n              </div>\n            </mat-card-content>\n          </mat-card>\n\n          <!-- Métricas de Negocio -->\n          <mat-card class=\"business-metrics-card\">\n            <mat-card-header>\n              <mat-card-title class=\"flex items-center space-x-2\">\n                <mat-icon class=\"text-purple-600\" svgIcon=\"mat:trending_up\"></mat-icon>\n                <span>Negocio</span>\n              </mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"space-y-4\">\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Ingresos Totales</span>\n                <span class=\"font-semibold text-green-600\">{{ formatCurrency(adminMetrics.businessMetrics.totalRevenue) }}</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Crecimiento Mensual</span>\n                <span class=\"font-semibold text-green-600\">+{{ adminMetrics.businessMetrics.monthlyGrowth }}%</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Satisfacción</span>\n                <span class=\"font-semibold text-blue-600\">{{ adminMetrics.businessMetrics.customerSatisfaction }}/5</span>\n              </div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-sm text-gray-600\">Tickets Soporte</span>\n                <span class=\"font-semibold\">{{ adminMetrics.businessMetrics.supportTickets }}</span>\n              </div>\n            </mat-card-content>\n          </mat-card>\n\n        </div>\n      </mat-tab>\n\n      <!-- Pestaña de Métricas Detalladas -->\n      <mat-tab label=\"Detalladas\">\n        <!-- Métricas específicas de agencia (solo aplica filtro de agencia) -->\n        <div class=\"mt-6\">\n          <vex-widget-agency-metrics \n            [agencyId]=\"selectedAgencyId\" \n            [showDetails]=\"true\"></vex-widget-agency-metrics>\n        </div>\n      </mat-tab>\n\n    </mat-tab-group>\n  </div>\n</div>\n"],"names":["Subject","BehaviorSubject","filter","RealTimeAnalyticsService","constructor","socket","connectionStatus","metricsSubject","statsSubject","connectionStatus$","asObservable","metrics$","stats$","reconnectAttempts","maxReconnectAttempts","reconnectDelay","initializeConnection","simulateConnection","error","console","scheduleReconnect","next","startSimulation","setInterval","value","simulateRandomMetric","updateStats","Math","random","types","actions","type","floor","length","action","metric","id","generateId","data","generateMetricData","timestamp","Date","documentId","documentType","agency","status","processId","processName","userId","username","threshold","stats","documents","total","today","pending","completed","processes","active","averageTime","users","online","activeToday","system","uptime","responseTime","memoryUsage","toString","substr","setTimeout","log","connect","disconnect","close","sendMessage","message","readyState","WebSocket","OPEN","send","JSON","stringify","subscribeToMetric","pipe","getCurrentStats","isConnected","_","_2","factory","ɵfac","providedIn","CommonModule","MatIconModule","MatCardModule","MatProgressSpinnerModule","takeUntil","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","ctx_r2","agencyMetrics","todayCases","monthlyCases","getMonthName","totalCases","WidgetAgencyMetricsComponent","analyticsService","agencyId","showDetails","compact","loading","destroy$","ngOnInit","loadAgencyMetrics","ngOnChanges","changes","firstChange","ngOnDestroy","complete","filters","undefined","getAgencyMetrics","subscribe","metrics","refresh","months","getMonth","ɵɵdirectiveInject","i1","AnalyticsService","selectors","inputs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","WidgetAgencyMetricsComponent_Template","rf","ctx","ɵɵtemplate","WidgetAgencyMetricsComponent_div_1_Template","WidgetAgencyMetricsComponent_div_2_Template","WidgetAgencyMetricsComponent_div_3_Template","ɵɵproperty","i2","NgIf","i3","MatIcon","i4","MatCard","i5","MatProgressSpinner","styles","MatButtonModule","MatTabsModule","MatSnackBarModule","MatFormFieldModule","MatSelectModule","MatDatepickerModule","MatInputModule","MatNativeDateModule","MatTooltipModule","FormControl","FormGroup","ReactiveFormsModule","agency_r16","Id","ɵɵtextInterpolate1","Name","user_r17","ɵɵlistener","DashboardAdminAnalyticsComponent_button_44_Template_button_click_0_listener","ɵɵrestoreView","_r19","ctx_r18","ɵɵnextContext","ɵɵresetView","clearDateRange","DashboardAdminAnalyticsComponent_button_45_Template_button_click_0_listener","_r21","ctx_r20","clearAgencyFilter","DashboardAdminAnalyticsComponent_button_46_Template_button_click_0_listener","_r23","ctx_r22","clearUserFilter","DashboardAdminAnalyticsComponent_button_47_Template_button_click_0_listener","_r25","ctx_r24","clearAllFilters","_r26","_r27","DashboardAdminAnalyticsComponent_div_50_Template_button_click_4_listener","_r29","ctx_r28","refreshData","ctx_r14","DashboardAdminAnalyticsComponent_div_51_Template_mat_tab_group_selectedIndexChange_1_listener","$event","_r31","ctx_r30","selectedTab","ctx_r15","ɵɵclassMap","getHealthStatusColor","adminMetrics","systemHealth","ɵɵpureFunction0","_c1","_c2","_c3","cpuUsage","_c4","securityMetrics","failedLogins","suspiciousActivity","blockedIPs","ɵɵpipeBind2","lastSecurityScan","performanceMetrics","averageLoadTime","peakConcurrentUsers","databaseConnections","cacheHitRate","formatCurrency","businessMetrics","totalRevenue","monthlyGrowth","customerSatisfaction","supportTickets","selectedAgencyId","DashboardAdminAnalyticsComponent","agencyService","defaultAgencyService","userService","authService","realTimeService","snackBar","changeDetector","dashboardData","currentFilters","selectedDateRange","selectedUserId","showManualDateInputs","agencies","activeDateRange","currentUser","isUserFilterDisabled","diskUsage","dateRangeForm","startDate","endDate","loadCurrentUser","loadDashboardData","loadAgencies","initializeRealTimeConnection","setThisMonth","valueChanges","onDateRangeChange","getDashboardData","onAgencyChange","loadUsers","isManagerOrAdmin","formValue","dateRange","isValidDateRange","obtenerAgencias","agencias","establecerAgenciaPredeterminada","agenciaId","warn","primeraAgencia","open","duration","getUsersByAgency","response","success","detectChanges","userSelect","writeValue","getCurrentUser","role_id","role_name","isAdvisorOrOperator","parseInt","onUserChange","user","roleName","toLowerCase","includes","hasAgencies","Array","isArray","hasUsers","trackByUserId","index","getCurrentUserFilterState","trackByAgencyId","hasDateRange","toggleManualDateInputs","patchValue","setLast7Days","setDate","getDate","setLast30Days","setLast90Days","now","getFullYear","setLastMonth","setThisYear","searchData","hasAnyFilter","onFiltersChange","onExportRequest","event","exportAnalytics","format","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","toUpperCase","thresholds","critical","warning","getHealthStatusIcon","formatBytes","bytes","k","sizes","i","parseFloat","pow","toFixed","amount","Intl","NumberFormat","style","currency","AgencyService","DefaultAgencyService","UserService","AuthService","i6","i7","MatSnackBar","ChangeDetectorRef","viewQuery","DashboardAdminAnalyticsComponent_Query","DashboardAdminAnalyticsComponent_Template_mat_select_selectionChange_7_listener","DashboardAdminAnalyticsComponent_mat_option_10_Template","DashboardAdminAnalyticsComponent_mat_hint_11_Template","DashboardAdminAnalyticsComponent_mat_hint_12_Template","DashboardAdminAnalyticsComponent_Template_mat_select_selectionChange_16_listener","DashboardAdminAnalyticsComponent_mat_option_20_Template","DashboardAdminAnalyticsComponent_mat_hint_21_Template","DashboardAdminAnalyticsComponent_mat_hint_22_Template","DashboardAdminAnalyticsComponent_mat_hint_23_Template","DashboardAdminAnalyticsComponent_Template_button_click_26_listener","DashboardAdminAnalyticsComponent_Template_button_click_28_listener","DashboardAdminAnalyticsComponent_Template_button_click_30_listener","DashboardAdminAnalyticsComponent_Template_button_click_32_listener","DashboardAdminAnalyticsComponent_Template_button_click_34_listener","DashboardAdminAnalyticsComponent_Template_button_click_36_listener","DashboardAdminAnalyticsComponent_Template_button_click_38_listener","DashboardAdminAnalyticsComponent_Template_button_click_41_listener","DashboardAdminAnalyticsComponent_button_44_Template","DashboardAdminAnalyticsComponent_button_45_Template","DashboardAdminAnalyticsComponent_button_46_Template","DashboardAdminAnalyticsComponent_button_47_Template","DashboardAdminAnalyticsComponent_div_48_Template","DashboardAdminAnalyticsComponent_div_49_Template","DashboardAdminAnalyticsComponent_div_50_Template","DashboardAdminAnalyticsComponent_div_51_Template","ɵɵclassProp","i8","NgForOf","DatePipe","i9","i10","MatButton","MatIconButton","i11","MatCardContent","MatCardHeader","MatCardTitle","i12","MatTab","MatTabGroup","i13","MatFormField","MatLabel","MatHint","MatSuffix","i14","MatSelect","i15","MatOption","i16","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","i17","MatInput","i18","MatTooltip","i19","DefaultValueAccessor","NgControlStatus","FormControlName"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}